<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Peng Zhao</title>
    <link>/zh/tags/r/index.xml</link>
    <description>Recent content in R on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <atom:link href="/zh/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>bookdownplus 的两个魔法</title>
      <link>/zh/post/bookdownplus-magic/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/bookdownplus-magic/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;bookdown 是个好东西，只是入手有点难，酒香巷深。&lt;/p&gt;
&lt;p&gt;对于 R 初学者来说，如果身边没有人指导，使用者可能需要花大量精力应付 LaTeX，YAML，Pandoc，而很多初学者可能从来没听说过这些，站在 bookdown 的门口往里张望了一下，说不定就被吓跑了，从而错过了门里的精彩世界。&lt;/p&gt;
&lt;p&gt;bookdownplus 扩展包，可以让新手对 bookdown 快速上手。从此，bookdown 这坛好酒就不必去深巷苦寻，它就放在你手边。&lt;/p&gt;
&lt;p&gt;从 v1.2.0 开始，bookdownplus 增加了两个魔法，更是让新手对 bookdown 一见钟情。如果你对 bookdown 感兴趣却苦于入门的烦恼，那么可以试试这两个魔法。&lt;/p&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;p&gt;首先，安装好必需的软件，包括 R, RStudio, &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;等。详见 &lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown 官方手册&lt;/a&gt;。然后，安装开发版的bookdownplus：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/bookdownplus&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再用 &lt;code&gt;setwd()&lt;/code&gt; 将R的工作目录设置到一个空文件夹里。&lt;/p&gt;
&lt;p&gt;一切准备就绪后，接下来就是见证奇迹的时刻。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;第一个魔法&lt;/h2&gt;
&lt;p&gt;在 R 里运行下面的代码，然后去喝个茶：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in template()[1:19])
  bookdownplus(template = i, 
               more_output = more_output()[1:3])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;回来以后，你会在工作目录里看到很多文件和文件夹。打开那个叫做 &lt;code&gt;_book/&lt;/code&gt;的文件夹，Duang！19个示例文档，每个都以 pdf、Word、网页和电子书格式乖乖地等在那里，等你打开了。其中，电子书 epub 格式可以在手机上阅读，也可以在台式机用免费的Calibre软件打开阅读。&lt;/p&gt;
&lt;p&gt;这些示例文档，从学术论文到诗歌乐谱，从中文到英文，展示了 bookdown 能胜任的工作。是不是动心了？&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;第二个魔法&lt;/h2&gt;
&lt;p&gt;运行下面的代码，然后看两眼窗外的风景，bookdownplus 就把事情做完了：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (mf in mail_font()) {
  for (ms in mail_style()) {
    for (mt in mail_theme()) {
      outputname &amp;lt;- paste(&amp;#39;mail&amp;#39;, ms, mf, mt, sep = &amp;#39;_&amp;#39;)
      bookdownplus(template = &amp;#39;mail&amp;#39;, 
                   mail_style = ms, 
                   mail_font = mf, 
                   mail_theme = mt, 
                   output_name = outputname)
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;仍然打开那个叫做 &lt;code&gt;_book/&lt;/code&gt;的文件夹，Duang！ 不同字体、不同主题、不同布局的信件示例文档就全部在那里了。&lt;/p&gt;
&lt;p&gt;如果看了这个你还没动心，那么只能说明跟 bookdown 没缘分，趁早放手吧！&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R 初学者包 beginr 在 CRAN 正式发布</title>
      <link>/zh/post/beginr-released/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/beginr-released/</guid>
      <description>&lt;p&gt;又一次高兴地宣布, 我的 R 语言扩展包 ‘beginr’ &lt;span class=&#34;citation&#34;&gt;(Zhao 2017a)&lt;/span&gt; 在 CRAN &lt;a href=&#34;https://cran.r-project.org/web/packages/beginr/&#34;&gt;正式发布&lt;/a&gt;了.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/beginr&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;beginr&lt;/code&gt;是我为 R 语言初学者和自己写的工具包, 是我这些年来收集和自己编写的一些简化操作的函数和备忘录, 可能对中级用户也有帮助. 其实这个包的文档我写得不够详细, 有些函数还没来及整理进去, 之所以匆匆发布, 是想先把 ‘beginr’ 这个名字给占住. 毕竟, 我中意的名字如 ‘learnr’, ’startr’都被别人用过了.&lt;/p&gt;
&lt;p&gt;安装方法：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# 稳定版：
install.packages(&amp;#39;beginr&amp;#39;)
# 开发版：
devtools::install_github(&amp;quot;pzhaonet/beginr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面分类介绍一下其中的函数.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;备忘函数&lt;/h1&gt;
&lt;p&gt;我初学 R 的时候用 &lt;code&gt;plot()&lt;/code&gt; 作图时, 常常忘记不同形状数据点(&lt;code&gt;pch&lt;/code&gt;)对应的编号, 实线虚线(&lt;code&gt;lty&lt;/code&gt;)的编号, 散点图类型(&lt;code&gt;type&lt;/code&gt;)的代码, 以及最难选择的颜色代码. 每次忘了都要上网搜一下. 现在, beginr 里提供了 &lt;code&gt;plotpch()&lt;/code&gt;, &lt;code&gt;plotlty()&lt;/code&gt;, &lt;code&gt;plottype()&lt;/code&gt;, &lt;code&gt;plotcolors()&lt;/code&gt;, &lt;code&gt;plotcolorbar()&lt;/code&gt;等函数, 想不起来的时候运行一下就行了.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotpch()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotlty()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plottype()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-1-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotcolors()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-1-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotcolorbar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-1-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;快速作图函数&lt;/h1&gt;
&lt;p&gt;我常常需要做线性拟合, 每次又是作图又是添加拟合方程, 繁琐. 现在, beginr 里的一个 &lt;code&gt;plotlm()&lt;/code&gt;函数就搞定.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 1:10
y &amp;lt;- 1:10 + rnorm(10)
beginr::plotlm(x, y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
##              Estimate Std. Error    t value     Pr(&amp;gt;|t|)
## (Intercept) 0.1087556  0.3806091  0.2857411 7.823355e-01
## x           1.0063163  0.0613407 16.4053586 1.920989e-07
## 
## [[2]]
## [1] 0.9711333&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;经常需要了解一组数据的分布, 看看是不是正态分布. beginr 里的 &lt;code&gt;plothist()&lt;/code&gt; 函数不仅做出直方图和平滑曲线, 并且标出中值, 中位数, 四分位数, 标准偏差, 样本数, 以及用来判断是否正态分布的 skewness 值.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- rnorm(10000)
beginr::plothist(x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##     para        value
## 1    min -4.213247997
## 2     1q -0.689269325
## 3 median  0.005363037
## 4     3q  0.693483094
## 5    max  4.338842651
## 6  lower -2.763130116
## 7  upper  2.767343885
## 8   mean  0.002084332
## 9     sd  1.010460031&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我很喜欢系统自带的成对儿散点图函数&lt;code&gt;pairs()&lt;/code&gt;, 只是功能再强大一点就好了. beginr 里的 &lt;code&gt;plotpairs()&lt;/code&gt; 和 &lt;code&gt;plotpairs2()&lt;/code&gt; 可以实现.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(a = 1:10, b = 1:10 + rnorm(10), c = 1:10 + rnorm(10))
beginr::plotpairs(df)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotpairs2(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;p&amp;lt;0.01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;p&amp;lt;0.01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;p&amp;lt;0.01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我经常需要将一组自变量 (x) 和多组因变量 (y&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;, …, y&lt;sub&gt;n&lt;/sub&gt;) 作在同一个坐标系, 或者一组因变量 (y) 对多组自变量 ((x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, …, x&lt;sub&gt;n&lt;/sub&gt;)), 并且画上各自的误差线. beginr 里一条 &lt;code&gt;dfplot()&lt;/code&gt; 或 &lt;code&gt;dfplot2()&lt;/code&gt; 函数就能完成.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- seq(0, 2 * pi, length.out = 100)
y &amp;lt;- data.frame(sin(x), cos(x))
yerror &amp;lt;- data.frame(abs(rnorm(100, sd = 0.3)), abs(rnorm(100, sd = 0.1)))
beginr::dfplot(x, y, yerror = yerror)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::dfplot2(y, x, xerror = yerror)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果只是想简单添加误差线, 那就用 &lt;code&gt;errorbar()&lt;/code&gt; 函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- seq(0, 2 * pi, length.out = 100)
y &amp;lt;- sin(x)
plot(x, y, type = &amp;quot;l&amp;quot;)
beginr::errorbar(x, y, yupper = 0.1, ylower = 0.1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;数据框操作&lt;/h1&gt;
&lt;p&gt;beginr 提供了一些对数据框计算的函数, 例如计算多列数据两两的相关性和线性拟合结果, 可以用 &lt;code&gt;lmdf()&lt;/code&gt; 函数.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(a = 1:10, b = 1:10 + rnorm(10), c = 1:10 + rnorm(10))
beginr::lmdf(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   x y r.squared adj.r.squared  intercept     slope Std.Error.intercept
## 1 a b 0.9620321     0.9572861 -0.1510263 1.1214039           0.4887211
## 2 a c 0.9706133     0.9669400  0.4378533 0.9386229           0.3582850
## 3 b a 0.9620321     0.9572861  0.3383864 0.8578819           0.4130237
## 4 b c 0.9572132     0.9518649  0.6950074 0.8152768           0.4177240
## 5 c a 0.9706133     0.9669400 -0.2911497 1.0340823           0.3965211
## 6 c b 0.9572132     0.9518649 -0.5585704 1.1740959           0.5470326
##   Std.Error.slope t.intercept  t.slope Pr.intercept     Pr.slope
## 1      0.07876454  -0.3090236 14.23742    0.7651984 5.770721e-07
## 2      0.05774285   1.2220812 16.25522    0.2564603 2.063617e-07
## 3      0.06025542   0.8192903 14.23742    0.4363462 5.770721e-07
## 4      0.06094113   1.6637959 13.37810    0.1347225 9.325405e-07
## 5      0.06361538  -0.7342602 16.25522    0.4837528 2.063617e-07
## 6      0.08776251  -1.0210917 13.37810    0.3370933 9.325405e-07&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还有两个函数对&lt;code&gt;tapply()&lt;/code&gt;进行了改善, 用来进行因子计算.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::tapplydf()
beginr::tapplydfv()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;文件读写函数&lt;/h1&gt;
&lt;p&gt;经常需要同时对多个数据文件进行处理, 逐个读入 R 里太麻烦. beginr 提供了个 &lt;code&gt;readdir()&lt;/code&gt; 函数, 可以一次性把指定文件夹里所有数据读入, 保存在一个列表 (list) 里.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::readdir()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;R 自带的 write 系列文件保存函数, 一不小心就把原有同名文件给覆盖了. beginr 提供了个安全的函数 &lt;code&gt;writefile()&lt;/code&gt;, 避免一失足成千古恨.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::writefile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;list2ascii()&lt;/code&gt; 函数可以把一个列表原样保存成文本文件.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;alist &amp;lt;- list(a = 1:10, b = letters)
beginr::list2ascii(alist)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;扩展包函数&lt;/h1&gt;
&lt;p&gt;很多人引用了别人的工作却往往不列出参考文献. 不仅初学者常常如此, 很多学术论文里有些插图一眼就能看出是 R 的某个扩展包作出来的, 但参考文献里却没有列出来, 这往小了说是不尊重别人的工作,往大了说是缺乏学术道德. 对开源社区的生态圈是不利的. beginr 为初学者提供了 &lt;code&gt;bib()&lt;/code&gt; 函数, 可以为指定的 R 扩展包生成文献引用信息, 既可以打印出结果, 也可以直接保存为 ‘.bib’文件方便为’&lt;a href=&#34;http://www.pzhao.org/zh/post/bookdownplus-released/&#34;&gt;bookdownplus&lt;/a&gt;‘&lt;span class=&#34;citation&#34;&gt;(Zhao 2017b)&lt;/span&gt; 或’&lt;a href=&#34;http://www.pzhao.org/zh/post/r-blogdown/&#34;&gt;blogdown&lt;/a&gt;’ &lt;span class=&#34;citation&#34;&gt;(Xie 2017)&lt;/span&gt; 调用.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::bib(pkg = c(&amp;quot;mindr&amp;quot;, &amp;quot;bookdownplus&amp;quot;, &amp;quot;pinyin&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## @Manual{R-bookdownplus,
##   title = {bookdownplus: Generate Varied Books and Documents with R &amp;#39;bookdown&amp;#39; Package},
##   author = {Peng Zhao},
##   year = {2017},
##   note = {R package version 1.2.2},
##   url = {https://github.com/pzhaonet/bookdownplus},
## }
## @Manual{R-mindr,
##   title = {mindr: Convert Files Between Markdown or Rmarkdown Files and Mindmaps},
##   author = {Peng Zhao},
##   year = {2017},
##   note = {R package version 1.1.0},
##   url = {https://github.com/pzhaonet/mindr},
## }
## @Manual{R-pinyin,
##   title = {pinyin: Convert Chinese Characters into Pinyin},
##   author = {Peng Zhao},
##   year = {2017},
##   note = {R package version 1.1.0},
##   url = {https://github.com/pzhaonet/pinyin},
## }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;plotpkg()&lt;/code&gt;函数可以做出一张图，来展示指定扩展包在CRAN上被用户下载的次数：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::plotpkg(&amp;quot;beginr&amp;quot;, &amp;quot;2017-06-23&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-23-beginr_released_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;新手可以用&lt;code&gt;rpkg()&lt;/code&gt;函数快速创建自己的扩展包.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::rpkg()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;好啦, 以后我还会把更多有用的工具添加到 beginr 包里. 欢迎关注 beginr的&lt;a href=&#34;https://github.com/pzhaonet/beginr&#34;&gt;项目主页&lt;/a&gt;. 另外, 使用beginr的地方请记得列出参考文献哦.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;beginr::bib(pkg = c(&amp;quot;beginr&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## @Manual{R-beginr,
##   title = {beginr: Functions for R Beginners},
##   author = {Peng Zhao},
##   year = {2017},
##   note = {R package version 0.1.0},
##   url = {https://github.com/pzhaonet/beginr},
## }&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-R-blogdown&#34;&gt;
&lt;p&gt;Xie, Yihui. 2017. &lt;em&gt;Blogdown: Create Blogs and Websites with R Markdown&lt;/em&gt;. &lt;a href=&#34;https://github.com/rstudio/blogdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-beginr&#34;&gt;
&lt;p&gt;Zhao, Peng. 2017a. &lt;em&gt;Beginr: Functions for R Beginners&lt;/em&gt;. &lt;a href=&#34;https://github.com/pzhaonet/beginr&#34; class=&#34;uri&#34;&gt;https://github.com/pzhaonet/beginr&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-bookdownplus&#34;&gt;
&lt;p&gt;———. 2017b. &lt;em&gt;Bookdownplus: Generate Varied Books and Documents with R ’Bookdown’ Package&lt;/em&gt;. &lt;a href=&#34;https://CRAN.R-project.org/package=bookdownplus&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=bookdownplus&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R 包 bookdownplus 正式发布</title>
      <link>/zh/post/bookdownplus-released/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/bookdownplus-released/</guid>
      <description>&lt;p&gt;很高兴地宣布，我的 R 语言扩展包 ‘bookdownplus v1.0.2’ &lt;span class=&#34;citation&#34;&gt;(Zhao 2017a)&lt;/span&gt; 在 CRAN &lt;a href=&#34;https://cran.r-project.org/web/packages/bookdownplus/&#34;&gt;正式发布&lt;/a&gt;了。本文是对’bookdownplus v1.0.2’的简要描述. 由于最近更新频繁, 最新版的’bookdownplus’更加强大和易用, 例如 ‘bookdownplus v1.2.0’ 可以一条指令生成19个模板文档的 pdf, word, html 和 epub 四种格式. 建议移步位于 GitHub 的 &lt;a href=&#34;http://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus 项目主页&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/bookdownplus&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-06-22-bookdownplus_released_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;bookdownplus 是对 bookdown 包 &lt;span class=&#34;citation&#34;&gt;(Xie 2016)&lt;/span&gt; 的增强和简化, 是快速使用 bookdown 的最简洁方法。bookdown 就好比 Microsoft Word 或 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;，可以用来写文档，而 bookdownplus 提供了很多有用的模板，可以很方便地在 bookdown 平台写期刊论文、学位论文、学术海报、化学分子式、信件、日记、日历、诗集、吉他谱等各种常用文档和书籍。这是功能上的增强（+）。&lt;/p&gt;
&lt;p&gt;bookdownplus 使用时只需指定一个模板，给定作者和书名，就可以一键生成模板文件，用户在模板文件里照猫画虎写自己的文字就可以了，不必再花力气上网找模板、设置 YAML 和 LaTeX。这是操作上的简化（-）。&lt;/p&gt;
&lt;p&gt;bookdownplus 各个模板的使用方法详见 &lt;a href=&#34;https://bookdown.org/baydap/bookdownplus&#34;&gt;R bookdownplus Textbook&lt;/a&gt;。这本电子书本身就是用 bookdownplus 生成的，尤其是它的 &lt;a href=&#34;https://bookdown.org/baydap/bookdownplus/bookdownplus.pdf&#34;&gt;pdf 版本&lt;/a&gt;很美观。此书的源码开放，可以作为使用 bookdownplus写书的示例。&lt;/p&gt;
&lt;p&gt;下面是 bookdownplus 的简介和快速使用方法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;快速入门&lt;/h1&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;在开始前，需要安装 R, RStudio, bookdown，和其他依赖的软件和包(例如 &lt;code&gt;Pandoc&lt;/code&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;, &lt;code&gt;rmarkdown&lt;/code&gt;, &lt;code&gt;rticle&lt;/code&gt;, &lt;code&gt;knitr&lt;/code&gt;等)，作为准备。详见 &lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown 官方手册&lt;/a&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;准备完毕后，就可以安装 bookdownplus 了。可以安装稳定版：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;bookdownplus&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或开发版：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/bookdownplus&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;生成模板文件&lt;/h2&gt;
&lt;p&gt;接着，在 R 中运行下面的代码：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bookdownplus::bookdownplus()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这时，在你的工作目录（&lt;code&gt;getwd()&lt;/code&gt;），会得到一些模板文件（如 &lt;code&gt;index.Rmd&lt;/code&gt;，&lt;code&gt;body.Rmd&lt;/code&gt;， &lt;code&gt;bookdownplus.Rproj&lt;/code&gt;） 和文件夹。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;编译成书&lt;/h2&gt;
&lt;p&gt;用 RStudio 打开 &lt;code&gt;bookdownplus.Rproj&lt;/code&gt;文件，然后按 &lt;code&gt;ctrl+shift+b&lt;/code&gt;，Duang！你就得到模板书 &lt;code&gt;*.pdf&lt;/code&gt;了！保存在 &lt;code&gt;_book/&lt;/code&gt; 文件夹里。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;你的文字&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;index.Rmd&lt;/code&gt; 和 &lt;code&gt;body.Rmd&lt;/code&gt; 里写你自己的文字，享受写书的快乐吧！自古皆死，不朽者文。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;更多输出格式&lt;/h2&gt;
&lt;p&gt;模板默认生成的书是pdf格式。‘bookdownplus’ 从 1.0.3 开始，可以很方便地输出更多格式，包括国内最常见的 ’word’格式，网页’html’格式和电子书’epub’格式，只需运行：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bookdownplus::bookdownplus(template = &amp;#39;article&amp;#39;, more_output = c(&amp;#39;html&amp;#39;, &amp;#39;word&amp;#39;, &amp;#39;epub&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就可以在 &lt;code&gt;_book/&lt;/code&gt; 文件夹里看到这些文件了。&lt;/p&gt;
&lt;p&gt;网页格式可以极其方便地免费发布到 &lt;a href=&#34;https://bookdown.org&#34;&gt;bookdown.org&lt;/a&gt;，只需运行：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bookdown::publish_book()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里是 bookdown 书籍的大本营。截至 2017 年 6 月，我有三本书被放置在这个网站的首页。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;更多建议&lt;/h2&gt;
&lt;p&gt;我开发的另外两个 R 包可以配合 ‘bookdown’ 使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mindr &lt;span class=&#34;citation&#34;&gt;(Zhao 2017b)&lt;/span&gt;，可以从 markdown 或 R markdown 格式的书稿中提取纲要，并且生成思维导图。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pinyin &lt;span class=&#34;citation&#34;&gt;(Zhao 2017c)&lt;/span&gt;，可以为书稿的章节标题自动生成&lt;a href=&#34;https://bookdown.org/yihui/bookdown/cross-references.html&#34;&gt;‘{#ID}’&lt;/a&gt;。如果标题里含有汉字，就会自动转换成拼音。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体用法见他们的帮助信息。这两个包已经在 CRAN正式发布，安装命令是：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;#39;mindr&amp;#39;)
install.packages(&amp;#39;pinyin&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;更改模板&lt;/h2&gt;
&lt;p&gt;上述快速入门得到的模板文档是默认的论文文档。只需在上述步骤里为 &lt;code&gt;bookdownplus()&lt;/code&gt; 函数指定模板名称，就可以用类似的操作得到其他模板的示范文档，如：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bookdownplus::bookdownplus(template = &amp;#39;poem&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面展示一些模板。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;article&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_mdpi1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_mdpi.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;calendar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+calendar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;chemistry&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+chemistry.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;guitar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+guitar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;journal&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+journal.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;mail&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail2.png&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poem&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poem.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_classic&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_classic.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_ubt&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_ubt.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_zju&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_zju.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_demo&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_demo.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_mini&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_mini.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poster&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ocean.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_eco.jpg&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;更新记录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2017-06-21. &lt;a href=&#34;https://cran.r-project.org/web/packages/bookdownplus/index.html&#34;&gt;Released on CRAN&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;2017-06-21. &lt;strong&gt;Version 1.0.2.&lt;/strong&gt; Resubmitted to CRAN!&lt;/li&gt;
&lt;li&gt;2017-06-21. &lt;strong&gt;Version 1.0.2.&lt;/strong&gt; Resubmitted to CRAN!&lt;/li&gt;
&lt;li&gt;2017-06-21. &lt;strong&gt;Version 1.0.1.&lt;/strong&gt; Submitted to CRAN!&lt;/li&gt;
&lt;li&gt;2017-06-14. &lt;strong&gt;Version 0.0.1.&lt;/strong&gt; A bug fixed.&lt;/li&gt;
&lt;li&gt;2017-05-15. &lt;strong&gt;Version 0.0.0.&lt;/strong&gt; A very preliminary version.&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-R-bookdown&#34;&gt;
&lt;p&gt;Xie, Yihui. 2016. &lt;em&gt;Bookdown: Authoring Books and Technical Documents with R Markdown&lt;/em&gt;. Boca Raton, Florida: Chapman; Hall/CRC. &lt;a href=&#34;https://github.com/rstudio/bookdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/bookdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-bookdownplus&#34;&gt;
&lt;p&gt;Zhao, Peng. 2017a. &lt;em&gt;Bookdownplus: Generate Varied Books and Documents with R ’Bookdown’ Package&lt;/em&gt;. &lt;a href=&#34;https://CRAN.R-project.org/package=bookdownplus&#34; class=&#34;uri&#34;&gt;https://CRAN.R-project.org/package=bookdownplus&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-mindr&#34;&gt;
&lt;p&gt;———. 2017b. &lt;em&gt;Mindr: Convert Files Between Markdown or Rmarkdown Files and Mindmaps&lt;/em&gt;. &lt;a href=&#34;https://github.com/pzhaonet/mindr&#34; class=&#34;uri&#34;&gt;https://github.com/pzhaonet/mindr&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-pinyin&#34;&gt;
&lt;p&gt;———. 2017c. &lt;em&gt;Pinyin: Convert Chinese Characters into Pinyin&lt;/em&gt;. &lt;a href=&#34;https://github.com/pzhaonet/pinyin&#34; class=&#34;uri&#34;&gt;https://github.com/pzhaonet/pinyin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R包发布记</title>
      <link>/zh/post/publish-r-packages/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/publish-r-packages/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;最近，我把&lt;a href=&#34;http://www.pzhao.org/zh/post/mindr/&#34;&gt;mindr&lt;/a&gt;，&lt;a href=&#34;http://www.pzhao.org/zh/post/pinyin/&#34;&gt;pinyin&lt;/a&gt; 和 &lt;a href=&#34;http://www.pzhao.org/zh/post/bookdown-plus/&#34;&gt;bookdownplus&lt;/a&gt; 三个包都提交到了 CRAN。这三个包都很简单，我就是想体验一下发布R包的流程，免得将来&lt;a href=&#34;http://xuer.pzhao.org/&#34;&gt;学R&lt;/a&gt;那本书出版了被问起来，答不上来就丢人了，另外也算是承接&lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/&#34;&gt;菜鸟致简速成&lt;/a&gt;那篇帖子，里面只谈了野包的发布分享，而只有提交到了 CRAN，野包才算转正。&lt;/p&gt;
&lt;p&gt;很快，这三个包都成功转正，可以正常安装了：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;#39;mindr&amp;#39;)
install.packages(&amp;#39;pinyin&amp;#39;)
install.packages(&amp;#39;bookdownplus&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里说说发布的过程和我遇到的一些问题。&lt;/p&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;自查&lt;/h2&gt;
&lt;p&gt;包发布之前，先自查有没有错误。只需用RStudio打开待发布的R包的&lt;code&gt;.Rproj&lt;/code&gt;文件，然后点击右上方面板的 Build - Check 按钮，就可以看到自查结果。&lt;/p&gt;
&lt;p&gt;这里要注意：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;结果里尽量不要包含任何 Notes 和 Warnings。如果有，就去找到问题修改，不然在提交的时候会被退回。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于&lt;code&gt;author &amp;lt;author&#39;s email&amp;gt;&lt;/code&gt;的那一条 Note 是可以忽略的，只是提醒你再次看看作者信息有没有填错。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我最初的自查结果有些 Notes 我原以为可以无视。比如，&lt;code&gt;DESCRIPTION&lt;/code&gt; 文件里 &lt;code&gt;Title&lt;/code&gt; 字段有些词要求首字母大写，我心想，这也算错误？就没理。再比如，告诉我 “no example. no test. no vignette.” 我心想，好像很多包都没有这几样，不也都发布了么？所以我同样无视。结果就是……&lt;/p&gt;
&lt;p&gt;下面接着讲。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;提交&lt;/h2&gt;
&lt;p&gt;把包的压缩文件在 &lt;a href=&#34;https://cran.r-project.org/submit.html&#34;&gt;CRAN 的网页&lt;/a&gt;上传即可。成功上传后会收到 email 通知，需要点击里面的链接进行确认。&lt;/p&gt;
&lt;p&gt;我两个宝贝儿 mindr 和 pinyin 的1.0.0版是六一那天上传并确认的，之后我就等，一直等到6月16号，我才想起来这事儿，就发信给 CRAN &lt;a href=&#34;mailto:cran@r-project.org&#34;&gt;cran@r-project.org&lt;/a&gt; 催了一下，当天就得到了 Dr. Uwe Ligges 的回复，说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你那两个包在提交当天就被系统自动拒收了，因为系统自动检查时发现了两个 Notes。系统自动发信通知你了，如果没收到，请翻翻垃圾邮件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我一翻邮箱的 spam，果然，拒信早就在里面了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;修改&lt;/h2&gt;
&lt;p&gt;乖乖地修改大小写，添加 vignette 和 examples，把版本号修改成 1.0.1 后再次上传。这回通过系统自检了，但是先后收到好几封 Uwe Ligges 和 Kurt Hornik 发来的修改意见，要求修改&lt;code&gt;DESCRIPTION&lt;/code&gt;文件，主要有：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;删除不必要的文字，比如我对包的描述是“An R package for converting Chinese characters into Pinyin”， 要求我把“An R package for”几个字删掉。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用单引号把文件扩展名引起来。比如我说 &lt;code&gt;.md files&lt;/code&gt;，要求改成&lt;code&gt;&#39;.md&#39; files&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件名称也要用单引号引起来，并且给出链接。比如我说思维导图可以用 FreeMind打开，要改成&lt;code&gt;&#39;FreeMind&#39;(&amp;lt;http://freemind.sourceforge.net/wiki/index.php/Main_Page&amp;gt;)&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对特殊的概念要简要解释。pinyin 包得解释一下什么是“pinyin”，mindr 包要求解释一下什么是“common mindmap software”。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没用的字段要删掉。比如&lt;code&gt;VignetteBuilder: knitr&lt;/code&gt;字段，我有个包并没有写 vignette，这个字段就不要出现在 DESCRIPTION 里，虽然没出错。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标题和描述里不要用 grave accent (`) 号，要改成单引号。我也觉得自己有滥用代码格式标记的趋势，是个专有名词就想用。这个毛病不好，要改。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这两位挺有耐心的，来来回回给了我好几次意见，我就先拿 mindr 开刀，改一点就提交个新版本，最后 mindr 的提交版本是1.0.4，算是没什么问题了，我才大体知道是个什么路子，回头修改 pinyin 包 和 bookdownplus 包，提交的版本都是1.0.2。&lt;/p&gt;
&lt;p&gt;最后的最后，收到 Kurt Hornik 发来的邮件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks, on CRAN now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;不难&lt;/h2&gt;
&lt;p&gt;我觉得提交R包并不像Hadley Wickham 在 &lt;a href=&#34;http://r-pkgs.had.co.nz/release.html&#34;&gt;R packages&lt;/a&gt;一书里写得那么可怕：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;失败令人沮丧，你得到的反馈可能简单粗暴，你可能觉得遭到了羞辱。与其跟 CRAN 的维护者争辩而可能浪费双方的时间，倒不如：&lt;/p&gt;
&lt;p&gt;深呼吸。R包被拒并非世界末日。谁都会遇见。甚至连 R 核心成员都得走同样的流程，享受同等待遇。我被CRAN拒绝的包多了去了。我曾被禁止两周提交东西到CRAN，因为我已有的包里有太多的小问题。&lt;/p&gt;
&lt;p&gt;如果你得到的回复让你恼火不堪，那就歇几天，冷静下来再回复。忽略任何人身攻击，努力只做技术上的答复。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说得挺吓人。我这次的体验挺轻松愉快的，两位维护者的答复带领我这个新手学会了下回怎么正确地写 R 包。虽然有些意见我觉得有些吹毛求疵，但是跟向学术期刊投稿比起来算个啥呀。&lt;/p&gt;
&lt;p&gt;而且，R包发布之后，立刻就在Github上得到了pull request，我一看，人家的修改意见提得真好，这是提高 R 水平的好办法。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>《学R》序（朱彤）</title>
      <link>/zh/post/preface_zhu/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/preface_zhu/</guid>
      <description>&lt;p&gt;我读硕士研究生时的导师是朱彤教授。在朱老师科研小组 ZTGroup 学习的三年如沐春风，我从中得到的收获受益终生。正值北京大学环境大楼落成不久，又逢毕业季，作为环境科学与工程学院的院长，朱老师在极其繁忙的工作中抽出时间来为本书欣然作序，实属不易，仅凭“感激”二字岂能表达我们的谢意？&lt;/p&gt;

&lt;p&gt;下面是朱老师为本书写的序言。&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;受作者邀请为此书写序，感到惶恐和高兴。两名作者分别是我以前的硕士和博士生，多年来我们小组很多同学都在学习和使用R语言，作为老师的我却从来没有用过，要为一本关于R语言的书写序，自然感到很惶恐。而当我打开这本书，没有看到晦涩难懂的概念、公式，在风趣易懂的语言、引人入胜的描述下，很快阅读完了前几章，不仅迅速跨越了零基础的障碍，更为两名作者为广大的数据统计分析和R语言学习人员提供这样一本独特、有趣的入门书而感到高兴。&lt;/p&gt;

&lt;p&gt;随着科技的高速发展，对大量数据的处理和分析已成为科研甚至日常生活的必需，掌握一门强大的数据分析工具非常必要。作为一种开源、免费且不断更新的语言，R不仅拥有数据分析、统计、作图等强大功能，其应用范围还在不断扩大：赵鹏博士可以用它来撰写学术论文、做备忘录、制作幻灯片、整理读书笔记、整理照片、写书、记录吉他谱、写博客、做网站等。R语言拥有越来越多的使用者和爱好者，也使得其功能越来越广泛、强大。&lt;/p&gt;

&lt;p&gt;与其它介绍R语言的书籍不同，这本书以两名作者自身学习的经验娓娓道来，没有多少枯燥的术语和公式，是一本非常适合自学R语言和统计学的入门书，尤其适合零基础和不懂统计学的读者。这本书可作为大学本科生和研究生自学用，也可作为高校教师教案。相信这读者们不仅会发现这本书很有用，更会发现关于R语言和统计学的书可以写的很有趣。&lt;/p&gt;

&lt;p&gt;&amp;mdash; 朱彤，2017年6月13日&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>pinyin: 把汉字转换成拼音的R包</title>
      <link>/zh/post/pinyin/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/pinyin/</guid>
      <description>&lt;p&gt;&lt;strong&gt;更新：2017-06-19，&lt;a href=&#34;https://cran.r-project.org/web/packages/mindr/index.html&#34;&gt;‘pinyin 1.0.2’&lt;/a&gt; 在 CRAN 正式发布。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/pinyin&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-05-26-pinyin_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;今天新写了个R包，粗暴地取名为 &lt;a href=&#34;https://github.com/pzhaonet/pinyin/&#34;&gt;pinyin&lt;/a&gt;，作用是把汉字转换成拼音。&lt;/p&gt;
&lt;p&gt;安装方法：&lt;/p&gt;
&lt;p&gt;稳定版：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;pinyin&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/pinyin&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装时可能会出现一些关于 locale 的警告，净吓唬人，无视。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;pinyin 0.0.0版包含3个函数.&lt;code&gt;pinyin()&lt;/code&gt;是主函数，可以把一个带汉字的字符串转换成拼音。可以选择:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;转换成标准的全拼 (默认 &lt;code&gt;method = &#39;quanpin&#39;&lt;/code&gt;)，或&lt;/li&gt;
&lt;li&gt;以数字表示声调 (&lt;code&gt;method = &#39;tone&#39;&lt;/code&gt;) , 或&lt;/li&gt;
&lt;li&gt;不含声调(&lt;code&gt;method = &#39;toneless&#39;&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;也可以选择仅保留每个字的首字母(&lt;code&gt;only_first_letter = TRUE&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;可以自定义相邻两字拼音的分隔符号(&lt;code&gt;sep = &#39;_&#39;&lt;/code&gt;),&lt;/li&gt;
&lt;li&gt;如果汉字字符串里边包含非汉字字符，可以选择将这些字符保留原样(&lt;code&gt;nonezh_replace = NULL&lt;/code&gt;)还是转换成指定字符(如&lt;code&gt;nonezh_replace = &#39;-&#39;&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举例如下：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;#39;pinyin&amp;#39;)
pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt;_U_+_7_F_8_C_&amp;gt;_&amp;lt;_U_+_7_B_1_B_&amp;gt;_&amp;lt;_U_+_4_F_5_5_&amp;gt;_&amp;lt;_U_+_9_8_7_B_&amp;gt;_&amp;lt;_U_+_6_0_2_8_&amp;gt;_&amp;lt;_U_+_6_7_6_8_&amp;gt;_&amp;lt;_U_+_6_7_F_3_&amp;gt;_&amp;lt;_U_+_6_6_2_5_&amp;gt;_&amp;lt;_U_+_9_8_C_E_&amp;gt;_&amp;lt;_U_+_4_E_0_D_&amp;gt;_&amp;lt;_U_+_5_E_A_6_&amp;gt;_&amp;lt;_U_+_7_3_8_9_&amp;gt;_&amp;lt;_U_+_9_5_E_8_&amp;gt;_&amp;lt;_U_+_5_1_7_3_&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt; U + 7 F 8 C &amp;gt; &amp;lt; U + 7 B 1 B &amp;gt; &amp;lt; U + 4 F 5 5 &amp;gt; &amp;lt; U + 9 8 7 B &amp;gt; &amp;lt; U + 6 0 2 8 &amp;gt; &amp;lt; U + 6 7 6 8 &amp;gt; &amp;lt; U + 6 7 F 3 &amp;gt; &amp;lt; U + 6 6 2 5 &amp;gt; &amp;lt; U + 9 8 C E &amp;gt; &amp;lt; U + 4 E 0 D &amp;gt; &amp;lt; U + 5 E A 6 &amp;gt; &amp;lt; U + 7 3 8 9 &amp;gt; &amp;lt; U + 9 5 E 8 &amp;gt; &amp;lt; U + 5 1 7 3 &amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;, method = &amp;#39;tone&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt; U + 7 F 8 C &amp;gt; &amp;lt; U + 7 B 1 B &amp;gt; &amp;lt; U + 4 F 5 5 &amp;gt; &amp;lt; U + 9 8 7 B &amp;gt; &amp;lt; U + 6 0 2 8 &amp;gt; &amp;lt; U + 6 7 6 8 &amp;gt; &amp;lt; U + 6 7 F 3 &amp;gt; &amp;lt; U + 6 6 2 5 &amp;gt; &amp;lt; U + 9 8 C E &amp;gt; &amp;lt; U + 4 E 0 D &amp;gt; &amp;lt; U + 5 E A 6 &amp;gt; &amp;lt; U + 7 3 8 9 &amp;gt; &amp;lt; U + 9 5 E 8 &amp;gt; &amp;lt; U + 5 1 7 3 &amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;, method = &amp;#39;toneless&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt; U + 7 F 8 C &amp;gt; &amp;lt; U + 7 B 1 B &amp;gt; &amp;lt; U + 4 F 5 5 &amp;gt; &amp;lt; U + 9 8 7 B &amp;gt; &amp;lt; U + 6 0 2 8 &amp;gt; &amp;lt; U + 6 7 6 8 &amp;gt; &amp;lt; U + 6 7 F 3 &amp;gt; &amp;lt; U + 6 6 2 5 &amp;gt; &amp;lt; U + 9 8 C E &amp;gt; &amp;lt; U + 4 E 0 D &amp;gt; &amp;lt; U + 5 E A 6 &amp;gt; &amp;lt; U + 7 3 8 9 &amp;gt; &amp;lt; U + 9 5 E 8 &amp;gt; &amp;lt; U + 5 1 7 3 &amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39;&amp;#39;, only_first_letter = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt;U+7F8C&amp;gt;&amp;lt;U+7B1B&amp;gt;&amp;lt;U+4F55&amp;gt;&amp;lt;U+987B&amp;gt;&amp;lt;U+6028&amp;gt;&amp;lt;U+6768&amp;gt;&amp;lt;U+67F3&amp;gt;&amp;lt;U+6625&amp;gt;&amp;lt;U+98CE&amp;gt;&amp;lt;U+4E0D&amp;gt;&amp;lt;U+5EA6&amp;gt;&amp;lt;U+7389&amp;gt;&amp;lt;U+95E8&amp;gt;&amp;lt;U+5173&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(&amp;#39;羌笛何须怨?杨柳春风,不度玉门关.&amp;#39;, sep = &amp;#39;&amp;#39;, nonezh_replace = &amp;#39;-&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;-------------------------------------------------------------------------------------------------------------------&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果自变量是多个字符串的向量，那么只会转换第一个字符串：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pinyin(c(&amp;#39;羌笛何须怨杨柳&amp;#39;, &amp;#39;春风不度玉门关&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt;_U_+_7_F_8_C_&amp;gt;_&amp;lt;_U_+_7_B_1_B_&amp;gt;_&amp;lt;_U_+_4_F_5_5_&amp;gt;_&amp;lt;_U_+_9_8_7_B_&amp;gt;_&amp;lt;_U_+_6_0_2_8_&amp;gt;_&amp;lt;_U_+_6_7_6_8_&amp;gt;_&amp;lt;_U_+_6_7_F_3_&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这怎么行？哎，用 &lt;code&gt;sapply()&lt;/code&gt; 嘛：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sapply(c(&amp;#39;羌笛何须怨杨柳&amp;#39;, &amp;#39;春风不度玉门关&amp;#39;), pinyin)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                          &amp;lt;U+7F8C&amp;gt;&amp;lt;U+7B1B&amp;gt;&amp;lt;U+4F55&amp;gt;&amp;lt;U+987B&amp;gt;&amp;lt;U+6028&amp;gt;&amp;lt;U+6768&amp;gt;&amp;lt;U+67F3&amp;gt; 
## &amp;quot;&amp;lt;_U_+_7_F_8_C_&amp;gt;_&amp;lt;_U_+_7_B_1_B_&amp;gt;_&amp;lt;_U_+_4_F_5_5_&amp;gt;_&amp;lt;_U_+_9_8_7_B_&amp;gt;_&amp;lt;_U_+_6_0_2_8_&amp;gt;_&amp;lt;_U_+_6_7_6_8_&amp;gt;_&amp;lt;_U_+_6_7_F_3_&amp;gt;&amp;quot; 
##                                                          &amp;lt;U+6625&amp;gt;&amp;lt;U+98CE&amp;gt;&amp;lt;U+4E0D&amp;gt;&amp;lt;U+5EA6&amp;gt;&amp;lt;U+7389&amp;gt;&amp;lt;U+95E8&amp;gt;&amp;lt;U+5173&amp;gt; 
## &amp;quot;&amp;lt;_U_+_6_6_2_5_&amp;gt;_&amp;lt;_U_+_9_8_C_E_&amp;gt;_&amp;lt;_U_+_4_E_0_D_&amp;gt;_&amp;lt;_U_+_5_E_A_6_&amp;gt;_&amp;lt;_U_+_7_3_8_9_&amp;gt;_&amp;lt;_U_+_9_5_E_8_&amp;gt;_&amp;lt;_U_+_5_1_7_3_&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他两个函数，其实是 &lt;code&gt;pinyin()&lt;/code&gt; 的延伸和示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file.rename2py()&lt;/code&gt;用来将文件名里的汉字转换成拼音。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bookdown2py()&lt;/code&gt;是专门为 bookdown 包服务的，作用是为章节的中文标题自动添加个对应的拼音ID &lt;code&gt;{#biaotipinyin}&lt;/code&gt;，避免在生成网页文件时文件名里出现一大堆乱码，并且解决&lt;a href=&#34;https://disqus.com/home/discussion/yihui/_yihui_xie_679/#comment-3175332429&#34;&gt;标题里中英文混合的问题&lt;/a&gt;。这事儿已经让我惦记三个月了。— 当然这事儿手动完全可以处理，只是手动处理的过程毫无乐趣可言罢了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拼音库我试了好几个，最后选定了&lt;a href=&#34;http://bbs.unispim.com/forum.php?mod=viewthread&amp;amp;tid=31644&#34;&gt;wangyanhan整理制作的42856字拼音表&lt;/a&gt;，直接处理文本文件，简单粗暴，转换起来可能有点慢，会顿一下，但已经够我自用了。&lt;/p&gt;
&lt;p&gt;我写这个包的环境是 windows 7 下区域设置为中国，别的环境没测试，估计会有不少坑。我这里就有一些，比如不知道哪里设置有问题，包的函数里居然不能出现中文字符，弄得我自变量的默认值和example部分只好空着。再比如多音字的问题，目前完全没处理。所以，转换&lt;code&gt;春眠不觉晓&lt;/code&gt;的结果会让人愣一下，再转换&lt;code&gt;处处闻啼鸟&lt;/code&gt;……&lt;/p&gt;
&lt;p&gt;结果好尴尬。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R mindr: 把 Markdown 转成思维导图</title>
      <link>/zh/post/mindr/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/mindr/</guid>
      <description>&lt;p&gt;&lt;strong&gt;更新：2017-06-19，&lt;a href=&#34;https://cran.r-project.org/web/packages/mindr/index.html&#34;&gt;‘mindr 1.0.4’&lt;/a&gt; 在 CRAN 正式发布。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/grand-total/mindr&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-05-19-mindr_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 markdown (.md, .Rmd) 文件转换成思维导图的 R 扩展包 &lt;a href=&#34;https://github.com/pzhaonet/mindr&#34;&gt;mindr&lt;/a&gt; 是我写的第五个 R 包，安装方法如下：&lt;/p&gt;
&lt;p&gt;稳定版：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;mindr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开发版：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/mindr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;在R的工作目录创建个名叫 &lt;code&gt;mm/&lt;/code&gt; 的文件夹，丢进去一堆 markdown 文件 (.md, .Rmd)，然后运行：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mindr::md2mm()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就得到个 &lt;code&gt;mm.mm&lt;/code&gt; 的思维导图文件，用免费的思维导图软件 &lt;a href=&#34;http://freemind.sourceforge.net/wiki/index.php/Download&#34;&gt;freemind&lt;/a&gt; 可以直接打开。界面比较简陋。或者用漂亮的免费软件 &lt;a href=&#34;http://www.xmind.net/download/win/&#34;&gt;Xmind&lt;/a&gt;，需要选择&lt;code&gt;导入 freemind 导图&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;mindr包还有另外两个函数：&lt;code&gt;mm2md()&lt;/code&gt;是反向操作，将思维导图转换成markdown;&lt;code&gt;outline()&lt;/code&gt;是从markdown文件里提取出各级标题生成大纲。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我的书稿《学R》最初是先用思维导图拟定框架，然后在 Word 里写，后来转到 bookdown 里完成的。今天下午，我在书稿的旧思维导图里照着新稿修改，想把两者统一了。改着改着，觉得不对劲儿呀，R markdown 的哲学是维护一份文档，导出多个格式，我怎么又开始维护两份内容相同只是格式不同的文档了？&lt;/p&gt;
&lt;p&gt;这肯定不是什么新问题，肯定有办法直接把 markdown 转成思维导图。于是我搜。我搜搜搜，竟然没搜到！&lt;/p&gt;
&lt;p&gt;这就怪了。从常识上判断，我认为这个工具肯定有，说不定藏在某个 R 包里，只是太隐蔽了。&lt;/p&gt;
&lt;p&gt;是应该继续搜呢，还是自己动手？有时候真是难以权衡。我掂量了一下轻重，选择了后者。&lt;/p&gt;
&lt;p&gt;晚上，写好了。&lt;/p&gt;
&lt;p&gt;先拿 &lt;a href=&#34;https://github.com/rstudio/bookdown/tree/master/inst/examples&#34;&gt;bookdown 书稿&lt;/a&gt;当小白鼠练手，用 freemind 直接打开：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_bookdown.jpeg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;freemind 确实简陋。再拿 &lt;a href=&#34;https://github.com/rstudio/blogdown/tree/master/docs&#34;&gt;blogdown 书稿&lt;/a&gt; 试试，导入 Xmind 看看：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_blogdown.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;还不错。好了，实验成熟了，放心地用在自己的书稿上，并且挑个最漂亮的款式：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_xuer.jpg&#34; /&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R blogdown 科研网站的公式和参考文献</title>
      <link>/zh/post/rblogdown-bib/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/rblogdown-bib/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;本网站的公式和参考文献一直未能正常显示，直到今天我才把这两个问题解决。&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;公式&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;公式的问题迟迟未解决，是因为我看到人们在讨论往html文件里加 &lt;code&gt;Load mathjax&lt;/code&gt; 代码这种解决方案，一看就头大，不想做。&lt;/p&gt;
&lt;p&gt;其实，我用的hugo-academic主题，据说是支持数学环境的，据说在 &lt;code&gt;config.toml&lt;/code&gt; 里设置 &lt;code&gt;math = true&lt;/code&gt;就开启全站支持，在单篇post的yml头里这样设置就开启单篇支持。可是我两样都试过，然后运行 &lt;code&gt;blogdown::serve_site()&lt;/code&gt;测试，在RStudio的Viewer里都不能成功显示公式。&lt;/p&gt;
&lt;p&gt;今天突然灵光一现，心想不会是RStudio Viewer的问题吧？于是点击Viewer左上角的 &lt;code&gt;Show in new window&lt;/code&gt; 按钮，用外部浏览器打开一看，Duang！帖子里的公式就都可以正常显示了！这里秀一个：&lt;/p&gt;
&lt;p&gt;帖子里输入下面的 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 公式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;网页就会显示：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}\]&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两个多月前，就&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/66&#34;&gt;有个哥们儿问&lt;/a&gt;“有没有可能在blogdown创建的网站里添加参考文献?”作者回答得干脆：“有。”两人对话戛然而止，让我目瞪口呆。由于在&lt;a href=&#34;http://bookdown.org/yihui/blogdown&#34;&gt;blogdown 官方手册&lt;/a&gt;里并未看到添加参考文献的方法，我一直以为这个功能尚在开发中，直到今天也没见动静，有些起疑，就随便试了一下，步骤跟在 bookdown 里一样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把参考文献库 .bib 文件考到 &lt;code&gt;content\post\&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;在帖子 &lt;code&gt;.Rmd&lt;/code&gt; 文档的 yml 头里声明 .bib 文件的名称和路径。这里我设成 &lt;code&gt;bibliography: [book.bib, packages.bib]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;在帖子里引用 .bib 里的文献条目，例如 &lt;code&gt;[@R-blogdown]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;运行建站函数 &lt;code&gt;blogdown::build_site()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就这样，说时迟那时快，只见Duang！帖子里的引用就显示成了 &lt;span class=&#34;citation&#34;&gt;(Xie 2017)&lt;/span&gt; ！而帖子末尾的参考文献列表就自动出来了！&lt;/p&gt;
&lt;p&gt;blogdown 可以如此方便地往帖子里插入计算代码、图表、公式、参考文献，我实在找不出第二个这样的工具。建科研网站，非 blogdown 莫属！&lt;/p&gt;
&lt;p&gt;最后顺便提一下：虽然最新正式版的 RStudio 1.0.143 并 没有 blogdown 和 bookdown 的入口，但是我欣喜地发现，在 &lt;a href=&#34;http://dailies.rstudio.com&#34;&gt;RStudio 的开发版&lt;/a&gt; 1.1.233 里已经加入了这个入口了！菜单 File - New Project - New Directory，就能看到 blogdown 和 bookdown 项目。跟 shiny 和 R package 并列，可见 RStudio 公司对这两个项目的重视程度。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/rstudiobookdown.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;有幸尝试了 blogdown 和 bookdown &lt;span class=&#34;citation&#34;&gt;(Xie 2016)&lt;/span&gt; 项目，并且也做过 &lt;a href=&#34;http://sciwis.com/&#34;&gt;shiny&lt;/a&gt; 和 &lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/&#34;&gt;R package&lt;/a&gt;，我模模糊糊有种异样的感觉，就像埋头赶路时猛一抬头，隐隐约约眺见了走在时代前面的先知们的背影。&lt;/p&gt;
&lt;div class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-R-bookdown&#34;&gt;
&lt;p&gt;Xie, Yihui. 2016. &lt;em&gt;Bookdown: Authoring Books and Technical Documents with R Markdown&lt;/em&gt;. &lt;a href=&#34;https://github.com/rstudio/bookdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/bookdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-blogdown&#34;&gt;
&lt;p&gt;———. 2017. &lt;em&gt;Blogdown: Create Blogs and Websites with R Markdown&lt;/em&gt;. &lt;a href=&#34;https://github.com/rstudio/blogdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>9分钟写个R语言包：菜鸟致简速成</title>
      <link>/zh/post/rmickey/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/rmickey/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;写R包这种高大上的工作，原以为学会怎么写得花个一年半载，学会之后写一个包怎么着也得个把月，谁料想周一上午下了决心，到周二下午就一口气写了4个包，算起来从学到写，只花了一天多时间。这里是个小结。&lt;/p&gt;
&lt;p&gt;学写R包，我主要参考了3份资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;谢益辉的&lt;a href=&#34;https://cos.name/2011/05/write-r-packages-like-a-ninja/&#34;&gt;开发R程序包之忍者篇&lt;/a&gt;，2011年。反复读了好几遍。&lt;/li&gt;
&lt;li&gt;黄俊文的&lt;a href=&#34;https://cos.name/2013/11/building-r-packages-easily/&#34;&gt;极简R包建立方法&lt;/a&gt;, 2013年。反复读了好几遍。&lt;/li&gt;
&lt;li&gt;Hadley Wickham 的&lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;R packages&lt;/a&gt;, 2015年。反复扫了好几眼。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了这3份很好的资料，那我还写本篇帖子做什么？&lt;/p&gt;
&lt;p&gt;这是因为，他们都是高手中的高手，只是我觉得他们写得，就好比教授写幼儿园教材，仍然不太合小朋友的胃口，不足以让我等菜鸟快速入门。比如读到roxygen2是多么美妙，我起初完全没体验，不知道“举头望文档，低头思函数”到底说的是什么（what the hell was Yihui talking about? 当然，一天之后我就体会到了静夜思的精妙），再一看Emacs就被吓得河水倒流，当年光一个vim就把我折腾个半死。而极简篇里，我觉得既然是极简，能减掉的步骤尽量减，所以还能继续剪。可能当年是极简，时过境迁，人类进步，现在可以比极简更简。&lt;/p&gt;
&lt;p&gt;下面，我试试写个减到不能再减的一剑封喉致简版，只需小改两个文本文件，不出十分钟就写出一个能用的R包。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;跟前期准备和后期维护相比，写包本身其实是最简单的环节。假定你已经安装好了R和RStudio，那么，运行R，安装几个包：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;devtools&amp;quot;, &amp;quot;roxygen2&amp;quot;, &amp;quot;testthat&amp;quot;, &amp;quot;knitr&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows用户，安装 &lt;a href=&#34;http://cran.r-project.org/bin/windows/Rtools/&#34;&gt;rtools&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Linux用户，安装对应的 R 开发包，sudo apt-get install r-base-dev.&lt;/li&gt;
&lt;li&gt;OS X 用户，安装command-line-tools，Terminal 运行 git 或者 xcode-select.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;致简四部曲&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;参照益辉的&lt;a href=&#34;https://github.com/yihui/rmini&#34;&gt;rmini&lt;/a&gt;，我做了个更简单的模板（Update：根据&lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/#comment-3312847859&#34;&gt;Dong的建议&lt;/a&gt;，也可以RStudio - File - New project - New directory - R package），叫做rmickey。&lt;a href=&#34;https://github.com/pzhaonet/rmickey/archive/master.zip&#34;&gt;点击下载&lt;/a&gt;并解压缩，得到个名叫rmickey文件夹。这个文件夹名字可以随便改。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;双击&lt;code&gt;rmickey.Rproj&lt;/code&gt;（这个文件名也可以随便改），就会用RStudio打开这个项目。后续步骤全部在RStudio里操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击打开RStudio右下窗口Files下的&lt;code&gt;DESCRIPTION&lt;/code&gt;文件（这个文件名千万别改）和&lt;code&gt;R/foo.R&lt;/code&gt;文件（这个文件名可以随便改）。&lt;code&gt;DESCRIPTION&lt;/code&gt;里是你的包的描述信息。可以看到包名称，版本，日期，包标题，包作者，维护者，依赖性，描述等信息。把其中每一条冒号后面的信息改成你自己的信息，比如把第一行包的名称改成mymickey，保存。&lt;code&gt;R/foo.R&lt;/code&gt;里是你的包里包含的自定义函数，模板里只列了一条做示例。函数的写法跟平时没区别。而函数前面的几行，就是所谓的说明文档，都以&lt;code&gt;#&#39;&lt;/code&gt;开头，第一行是简要介绍，以&lt;code&gt;@param&lt;/code&gt;开头的行逐个介绍函数的自变量（懒得介绍的话就像示例里的x2那一行一样空着，但x2后面必须有一个空格），&lt;code&gt;@return&lt;/code&gt;开头的行介绍因变量（必填），&lt;code&gt;@export&lt;/code&gt; &lt;code&gt;@examples&lt;/code&gt;两行可以不修改。有更多函数的话，照葫芦画瓢在文件里往下继续写就是了。保存。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击RStudio右上窗口的&lt;code&gt;Build&lt;/code&gt;标签下的&lt;code&gt;Build &amp;amp; Reload&lt;/code&gt;按钮，包就编译并自动安装好了！&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;试着运行一下你刚才自定义的函数，记得用tab键补全功能和F1查看帮助信息，体会一下刚才你在foo.R文件里修改的内容是如何在tab和F1里体现出来的，然后就自然知道如何把foo.R写得更好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载模板–打开项目–修改模板–编译，这就是R包的9分钟致简开发四步曲。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;发布和分享&lt;/h2&gt;
&lt;p&gt;史书分正史和野史，R包分正包和野包。正包是通过R官方认可并且发布在CRAN网站上的，等于领到了认证和许可，可以用&lt;code&gt;install.package()&lt;/code&gt;直接安装；野包就是自己私下写的，随便放在自己喜欢的地方小范围使用的。很多包转正之前都是野包，经过反复测试和升级后才转的正，而有的野包会永远野下去，永不接受招安。我目前写的几个包都是野包，将来转不转正走着瞧，所以这里只介绍野包的发布和分享方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;熟悉Github的话，建议用这种方法。既然熟悉，我这里就不详说Github的用法了，只做个简单介绍。&lt;/p&gt;
&lt;p&gt;你要做的，就是在github.com上申请个账号，电脑里安装个客户端，在客户端新建个项目并起个名字例如叫mymickey，把你新的R包文件夹同步上去，就可以通知用户们来使用你的mymickey包了。&lt;/p&gt;
&lt;p&gt;用户要做的就是直接安装，只需在R里运行&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;你的账号/你的项目名称&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就把你的包装到他们的R里了。&lt;/p&gt;
&lt;p&gt;举个粒子：比如你刚才下载的rmickey模板，本身就是个R包（我的第四个R包），这个包里只有一个函数&lt;code&gt;foo()&lt;/code&gt;，可以给出宇宙和人生终极问题的答案。安装和运行方法是：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/rmickey&amp;quot;)
library(rmickey)
foo()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你跟我一样，搞了几年都搞不明白Github的用法和逻辑，那我建议你用下一种方法分享。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;离线法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;离线法就是让用户把你的包先下载到他们电脑上，再用R包的离线安装方式。&lt;/p&gt;
&lt;p&gt;你的包的压缩文件其实在上面点&lt;code&gt;Build &amp;amp; Reload&lt;/code&gt;的时候已经自动生成了，去看看你电脑上的R包文件夹，跟它并列存放的，有个与包同名的&lt;code&gt;.tar.gz&lt;/code&gt;压缩文件。这就是离线安装包。&lt;/p&gt;
&lt;p&gt;你要做的，就是随便以任何方式，不管是email、qq、网盘，还是优盘、手机、移动硬盘，只要让用户能得到你这个压缩文件就行了。&lt;/p&gt;
&lt;p&gt;用户要做的，就是拿到文件后在他们的电脑上安装，方法是在RStudio菜单栏点&lt;code&gt;Tools&lt;/code&gt; – &lt;code&gt;Install Packages&lt;/code&gt; – &lt;code&gt;Install from Package Archive File&lt;/code&gt;，选上你的包，就行了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;进阶&lt;/h2&gt;
&lt;p&gt;欲穷千里目，更上一层楼。&lt;/p&gt;
&lt;p&gt;用9分钟致简四步法写出的R包，足够自用了。在这个高度，看到的风景已经够美。你可以在这个水平的观景台休整休整，再考虑是否继续往上攀登。孔子登东山而小鲁，登泰山而小天下。如果想看到更高处的风景，那么就继续读本帖前言部分的3份资料，以及他们介绍的更多资料，把你的包写得更好。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;现在，让我们回过头来谈一个问题：&lt;strong&gt;我们为什么要写R包？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先是方便自用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用R语言这几年，我逐渐积累的自定义函数越来越多，我把他们通通存到一个.R文件里。现在，这个文件已经有2000行，51个自定义函数（Update: 后来发现更多，我忘在另一个.R文件里了）。每次用时都&lt;code&gt;source()&lt;/code&gt;一下，我觉得调用起来已经很方便了，虽然会导致RStudio右上窗Environment标签下特别冗长，而且经常忘记这些函数的用法，需要查看函数源代码，但总好过每次把函数重写或重拷贝一遍。没写成包之前，这几年都是这么过来的。&lt;/p&gt;
&lt;p&gt;昨天，我花了半天时间，把它写成了我的&lt;a href=&#34;https://github.com/pzhaonet/mf&#34;&gt;第三个R包mf&lt;/a&gt;。这当然是个野包，纯属自用，自己懂就行了，我懒得为别人把这51个函数的说明文档从头到尾写一遍。用起来的爽快程度，当然比&lt;code&gt;source()&lt;/code&gt;强多了，不仅Environment区清爽了，更关键的是，忘了的话就用tab和F1大法，几年积攒的不快一扫而空。就算换个工作单位，换台电脑，花几秒钟安装后照旧调用，处处无家处处家。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次是改善代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写代码对我来说一直是件封闭的事情：自己写，自己用，一旦出错，只有自己知道。计算方法没有经过同行评议，出错的风险很大。但是我又不愿意厚着脸皮强迫别人帮我改代码。两全的办法，就是开源，写成包，放在Github上，接受志愿者挑错，有则改之无则加勉。只有这样，才能把代码错误越来越少，改得越来越好，最终还是自己用起来更爽。至于对别人和社区有没有贡献，我只盼自己没有添乱就行了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后是审视自我。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我的第一个R包&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;是用R markdown做海报，兴致勃勃地放到Github第一天，就有人留言汇报问题。我知道，这只是个开始，以后会有更多的问题，里面会有赞美也会有谩骂。写出个R包真的不算啥，等待在前面的一个又一个的坑才是让人真正头疼的事情。&lt;/p&gt;
&lt;p&gt;这个阶段就要接收考验了。你会重新审视自己：我这么干到底是图个啥？我自用已经够了，却要花大量的时间帮一些跟我八杆子都打不到的人解决他们五花八门层出不穷的问题，我闲得么？花的这工夫和精力，到底是能发表成学术论文呢，还是能变现呢，还是能替我洗碗带孩子呢，还是能帮我赚游戏装备？&lt;/p&gt;
&lt;p&gt;开源软件是面镜子，让你从中看到自己。唐太宗说过：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以铜为鉴，可以正衣冠；&lt;/p&gt;
&lt;p&gt;以人为鉴，可以知得失；&lt;/p&gt;
&lt;p&gt;以史为鉴，可以知兴替：&lt;/p&gt;
&lt;p&gt;以R包为鉴，可以知本我、自我和超我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://dapengde.com/wp-content/uploads/2017/03/2017-03-19.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;PS. 星期三下午，我壮着胆子把Emacs装上，战战兢兢试了一下就惊呆了。这个ctrl+coo快捷键(可以读作“control 酷”，太好记了)来维护R包简直不要太逆天。昨天我花了四五个小时来为我那51个函数写文档，要是用Emacs，估计最多一小时就够了。省事的话，可能不到10分钟就能写出个包含这51个函数的能用的致简包。最让我受刺激的还不是这个。自打学了vim之后，我就坚信，我永远用不着，也永远学不会Emacs，而实际上，学会上面这个办法，只用了三五分钟……Emacs我不打算学更多，光这一招就够酷……(Update: 根据 &lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/#comment-3314475182&#34;&gt;Yihui Xie&lt;/a&gt;的留言，RStudio 里 ctrl+shift+alt+r也能同样实现)&lt;/p&gt;
&lt;p&gt;到底是什么阻挡了尝试新事物的可能？&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/emacs-coo.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>postr: 用R Markdown做海报</title>
      <link>/zh/post/postr/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/postr/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;用R markdown写海报的扩展包&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;安装使用方法（需要先安装好软件环境，详见&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;项目主页）：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/postr&amp;quot;)
setwd()
postr::postr()&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_eco.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;益辉的&lt;a href=&#34;https://yihui.name/cn/2017/04/r-markdown-poster/&#34;&gt;莽撞人项目&lt;/a&gt;，悬赏解决“用 R Markdown 做海报”这个技术难题。我私下说，Markdown走的是LaTeX路线，讲究篇章结构和逻辑，而海报追求更多随意性和艺术性，即使学术海报也不例外，所以费劲硬要用Markdown解决，可能吃力不讨好。倒不如Powerpoint来得方便，或者把整个海报在R里当成一个device，用layout画图来实现。话虽这么说，我仍然在留意这件事，因为我在新书&lt;a href=&#34;http://xuer.pzhao.org&#34;&gt;学R&lt;/a&gt;里提出R语言科研方案的整体拼图，被我几乎全部拼完了，只缺海报这一块。这就好比在朋友圈发照片只发八张，看一眼就浑身不自在。&lt;/p&gt;
&lt;p&gt;前几天，做&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;时找模板，在比利时鲁汶大学的一大堆模板当中，我极其偶然地发现，里面暗暗潜伏着的，竟然有用R Markdown制作海报的秘密，淹没在一大堆文件里，搞不清楚各个文件之间的关系，而且说明文档过于简单，用起来不够方便。于是，我花了些工夫，把海报部分择了出来，稍加修改，增添了几个自己做的颜色主题，纳入了&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;里。我的想法是，用户只需下载我这个文件夹，选择好模板，一运行，就出来个Rmd文件，打开一点knit按钮，Duang！海报就出来了。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ocean.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;于是去揭“莽撞人”榜。榜主说：很好。然后说：做成个包吧！名字都起好了，叫postr。为啥不直接叫poster？我猜大概是postr跟knitr的命名法类似，更容易搜到吧。&lt;/p&gt;
&lt;p&gt;想来也是。我这种下载文件夹的方法毕竟路子太野，不符合R语言的习惯，大家更喜欢的是做包，上传，安装。但是我从来没做过包。而且，我认为做包是R语言里高大上的东西，我不认为自己能很快学会做。于是，我在朋友圈招贤，看有没有谁愿意把这活儿给接过去。消息放出去一天，无人理睬。&lt;/p&gt;
&lt;p&gt;得，自己来吧。&lt;/p&gt;
&lt;p&gt;这天大娃生病了，早上带他看医生。诊所人满为患。排队的时候，我把网上几篇关于R包开发入门的帖子扫了几遍，好像不太难哦。从诊所出来，十点多了，一到办公室，就干劲十足地折腾。事情出乎意料的顺利。我原以要到明年才能把这个包写出来，结果当天下午就写完了。这个过程里，多亏了几位前人的工作，几年前还很繁琐复杂的R包开发，现在分分钟就能写一个玩玩。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_rose.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;既然这么容易，我顺手把&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;也写成了个包。然后把平时常用的方程写成了第三个包。我还准备写个R包开发菜鸟教程，于是又写了个示例包。&lt;/p&gt;
&lt;p&gt;从对R包开发一无所知，到一口气干掉四个包，花了不到两天工夫。用力过猛，有点撑了，我隐隐觉得不妙：好像不该这么顺利吧。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ice.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;果然，postr放到github当天晚上，就有人留言了。我很好奇这哥们儿是怎么在第一时间发现我这么个无名之辈发布了一个包。这哥们儿先说，postr这个名字起得好，很容易记住。这得感谢益辉，他给我的域名提的建议也让人说容易记。然后这哥们儿说：这个包他运行无法通过。&lt;/p&gt;
&lt;p&gt;这时我陡然发现，这才是R包开发的关键。写个包发布到github并不难，难的是解决用户的问题。&lt;/p&gt;
&lt;p&gt;前面等待的，将是一个又一个的坑。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_night.jpg&#34; /&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R bookdown&#43;: 用 R bookdown 写期刊论文、日记、信件、日历、吉他书、化学方程式</title>
      <link>/zh/post/bookdown-plus/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/bookdown-plus/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;strong&gt;注意：本文所述的&lt;code&gt;bookdown+&lt;/code&gt;这个项目已经停止开发，继承者是我新开的R包项目&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt; ，这是因为我学会了写R包。当然，说不定有些朋友不喜欢安装R包，喜欢下载个文件夹直接免安装用，那么本文所述的方法仍然可以继续使用，只是我不再更新了而已。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R bookdown 能做的事情很多，可是那些功能迟迟不来，我只好自己动手，写了个 &lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;，目前大体实现了用 bookdown 写期刊论文、化学分子式、信件、日记、日历等功能。当然，有些还没完全实现，革命不够彻底，带着浓重的&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;旧社会的气息。革命尚未成功，同志仍需努力。&lt;/p&gt;
&lt;p&gt;下面是 &lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt; 的简介和快速使用方法。&lt;/p&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;背景&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;，听起来像是跟R&lt;span class=&#34;citation&#34;&gt;[@R-base]&lt;/span&gt;的扩展包&lt;code&gt;bookdown&lt;/code&gt;&lt;span class=&#34;citation&#34;&gt;[@R-bookdown]&lt;/span&gt;有关吧?&lt;/p&gt;
&lt;p&gt;一点没错！我们知道，&lt;code&gt;bookdown&lt;/code&gt;天生是个用来写编程书籍的称手工具。只是，这仅仅是硬币的一面。&lt;code&gt;bookdown&lt;/code&gt;的功能远远不止如此。它就像一个美味的蛋糕，我等啊等啊，等着谁把它切开，实在等不及了，就自己下手吧。所以，我弄了个&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;是&lt;code&gt;bookdown&lt;/code&gt;的扩展。我数年前收集了一些&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;模板，现在我把他们整理到&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;里，这样就可以开开心心在&lt;code&gt;bookdown&lt;/code&gt;的环境里做喜欢的事情。&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt; 展示了硬币的另一面：你可以用它来写写期刊论文、化学分子式、信件、日历、甚至日记。&lt;/p&gt;
&lt;p&gt;另一方面，我从个人角度对&lt;code&gt;bookdown&lt;/code&gt;的使用做了简化。官方提供的&lt;code&gt;bookdown&lt;/code&gt;模板虽然很好用，但对新手来说略显繁琐，需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;index.Rmd&lt;/code&gt;和&lt;code&gt;_output.yml&lt;/code&gt;两个文件里设置yaml，&lt;/li&gt;
&lt;li&gt;需要在&lt;code&gt;_bookdown.yml&lt;/code&gt;里设置文件名；&lt;/li&gt;
&lt;li&gt;对中文用户来说，还得跟LaTeX打交道，需要考虑&lt;code&gt;before_body.tex&lt;/code&gt;, &lt;code&gt;after_body&lt;/code&gt;, &lt;code&gt;preamble.tex&lt;/code&gt;里面的设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些操作可能让新手望而生畏。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;用起来就容易多了，只需在一个叫做&lt;code&gt;_runme.R&lt;/code&gt;的文件里设置好书名、作者，选好模板，binggo！就可以开始放心写自己的文字了。&lt;/p&gt;
&lt;p&gt;功能扩展，操作简化，这就是&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在不久的未来，肯定会出现很多官方的bookdown模板，但是我不想等了。你要是也等不及，就跟我来一起使用或开发[bookdown+]吧！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;快速入门&lt;/h1&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;预备&lt;/h2&gt;
&lt;p&gt;在开始前，你需要安装 R, RStudio, bookdown，和其他依赖的软件和包(例如 &lt;code&gt;Pandoc&lt;/code&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;, &lt;code&gt;rmarkdown&lt;/code&gt;, &lt;code&gt;rticle&lt;/code&gt;, &lt;code&gt;knitr&lt;/code&gt;等)。详见&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown官方手册&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;准备好后，从Github&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus/archive/master.zip&#34;&gt;下载&lt;code&gt;bookdown+&lt;/code&gt;&lt;/a&gt;压缩文件。解压缩到你的电脑里，在得到的文件夹里找到 &lt;code&gt;_start.Rproj&lt;/code&gt;文件，双击就会在RStudio里打开一个项目。&lt;/p&gt;
&lt;p&gt;文件夹里还有个&lt;code&gt;_runme.R&lt;/code&gt;文件。你可以双击打开并运行。下面是对这个文件里代码的详细解释。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第1步：标题和作者&lt;/h2&gt;
&lt;p&gt;改成你自己书的标题和作者名。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;title &amp;lt;- &amp;#39;bookdown+: Authoring Articles, Mails, Guitar books, Chemical Molecular Formulae and Equations with R bookdown&amp;#39;
author &amp;lt;- &amp;#39;Peng Zhao&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;2-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第2步: 模板&lt;/h2&gt;
&lt;p&gt;在给定的可用模板里选择你想要的。这里我们选第8个。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;templates  &amp;lt;- c(&amp;#39;article&amp;#39;,     #1, academic article
                &amp;#39;article_zh&amp;#39;,  #2, academic article in Chinese
                &amp;#39;calendar&amp;#39;,    #3, calendar, in progress
                &amp;#39;chemistry&amp;#39;,   #4, chemical molecular formulae and equations
                &amp;#39;chemistry_zh&amp;#39;,#5, in Chinese,
                &amp;#39;guitar&amp;#39;,      #6, guitar book
                &amp;#39;mail&amp;#39;,        #7, mail, in progress
                &amp;#39;journal&amp;#39;,     #8, laboratory journal, or personal diary
                &amp;#39;mini&amp;#39;,        #9, a mini demo by Yihui
                &amp;#39;original&amp;#39;,    #10, the original demo by Yihui
                &amp;#39;book_zh&amp;#39;      #11, the demo in Chinese by Yihui
)
template &amp;lt;- templates[8]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行 &lt;code&gt;fun/build.R&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;source(&amp;#39;fun/build.R&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;3-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第3步: 成书&lt;/h2&gt;
&lt;p&gt;现在按下 &lt;code&gt;ctrl+shift+b&lt;/code&gt; 快捷键，你就会在新生成的&lt;code&gt;book/&lt;/code&gt;文件里找到一本示例书。打开看看吧！&lt;/p&gt;
&lt;p&gt;你自己的文字只需在&lt;code&gt;body.Rmd&lt;/code&gt;修改，写完后重复本步即可。&lt;/p&gt;
&lt;p&gt;祝你玩得愉快！&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;模板效果展示&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;article&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_mdpi1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_mdpi.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;calendar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+calendar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;chemistry&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+chemistry.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;guitar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+guitar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;journal&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+journal.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;mail&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail2.png&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poem&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poem.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_classic&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_classic.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_ubt&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_ubt.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_zju&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_zju.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_demo&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_demo.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_mini&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_mini.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poster&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ocean.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_eco.jpg&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R vs Python: 2017年欧洲地学年会</title>
      <link>/zh/post/egu2017/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/egu2017/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;a href=&#34;http://dapengde.com/archives/17969&#34;&gt;欧洲地学学会EGU年会&lt;/a&gt;每年一次，都在维也纳国际会议中心举办，原因是别的地方很难找到这样一个会场，能容得下这么大的规模。为期一周的会议，参加人数上万，分会场有五百个以上。因为离得近，乘火车4小时，我们组年年都参加。去年我申请到一个口头报告，今年再次申请，会议协调人说：你们组申请了两个口头报告，但只能给你们组一个名额，你们内部定吧。我和同事商量了一下，决定他做口头报告，我做海报。&lt;/p&gt;
&lt;p&gt;这两天，准备海报和年会日程时，我发现个有趣的新现象。一打开“短期课程”类日程表，就感到一股杀气扑面而来。年会擂台的两位选手即将上阵，一个叫R，一个叫Python。&lt;/p&gt;
&lt;p&gt;首先亮相的是Python。第一天的第一批分会场，Python先发制人，发起个课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25679&#34;&gt;“使用Python和Jupiter做数据分析”&lt;/a&gt;，一个半小时，要求携带笔记本电脑，手把手教你用Python语言读取不同格式数据、分析和作图，并使用 Jupyter Notebook 来记录和分享工作。Python语言就相当于R语言，Jupyter Notebook就相当于 R markdown。这是明摆着对R的挑衅啊！我决定放弃另外一个感兴趣的学术分会场，来参加这一个。&lt;/p&gt;
&lt;p&gt;R当然不甘示弱，见招拆招。当天下午有个课程，叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25731&#34;&gt;“水文学中使用R”&lt;/a&gt;，内容是学习用R语言进行水文学的时间序列分析和地理信息系统GIS数据处理、水文建模。水文学不是我的专业，但是有关联。好想参加，可惜跟我必须参加的另一个会场时间冲突了，只能忍痛割爱，暗暗希望R在这个回合打败Python。&lt;/p&gt;
&lt;p&gt;问题是Python还有后招。星期四，Python有个课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25651&#34;&gt;“Python处理多维度地理科学大数据：xarray扩展包入门教程”&lt;/a&gt;。课程将介绍Python处理数据的基本用法，包括下标系统、选择、分组、作图、计算、自定义函数，并演示如何用 Python+xarry+Jupyter来轻松教没有编程经验的硕士生处理气候模型数据。这课听起来好诱人。一看行程表，我到时候没安排，那必须去了。&lt;/p&gt;
&lt;p&gt;R会如何应战？我发现还有个课程，叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25726&#34;&gt;“出版流程里的可重复计算研究”&lt;/a&gt;——这是R markdown的强项啊。此课时长3小时，前1.5小时是手把手教你用R, Python和ReproZip对地理空间数据进行分析，并撰写可重复性报告：后1.5小时是讨论，参与者有出版方、审稿人、教育工作者等各个领域的专家学者。看这架势，不知R跟Python是要对决还是要合作呢？真想去目睹这一盛况，但是，又跟我专业的分会场冲突了。真难取舍。&lt;/p&gt;
&lt;p&gt;除了明争，还有暗斗。星期四晚上有一门课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25343&#34;&gt;“一图胜千言：利用数据可视化进行科学交流”&lt;/a&gt;，讲的是如何制作高效精辟的数据图表，没有明说，但暗藏玄机，不知主角是R，还是Python，还是Matlab，还是别的新秀？&lt;/p&gt;
&lt;p&gt;除了R语言这种跟科研密切相关的技术活，居然还有一门课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25170&#34;&gt;“WordPress写博客详解”&lt;/a&gt;，居然还有一门课程&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25580&#34;&gt;教你写诗&lt;/a&gt;，说什么博客和诗都能更好地传播科学……&lt;/p&gt;
&lt;p&gt;回头一看我的私人日程表，乖乖，这哪像个学术会议呀……&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的浏览器小图标</title>
      <link>/zh/post/hugo-icon/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/hugo-icon/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;img src=&#34;/img/myicon.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;网站图标，就是上图的这些东东，用浏览器打开网站时显示在地址栏的顶端。R blogdown安装的hugo-academic主题，默认图标是个蓝色学位帽，挺好看的，不改也行，只是如果大家都用的话，泯然众人，识别度就低了。&lt;/p&gt;
&lt;p&gt;改的方式很简单：将你自己的图标图片保存为.png格式，并命名为icon.png，替换&lt;code&gt;\themes\hugo-academic\static\img\icon.png&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;update: 更好的方案来自&lt;a href=&#34;https://disqus.com/home/discussion/pzhao/hugo/#comment-3287700912&#34;&gt;yang Cao的提议&lt;/a&gt;：把icon.png放在&lt;code&gt;static/img/&lt;/code&gt;，避免在更新themes时将自定义图标覆盖。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的RSS</title>
      <link>/zh/post/hugo-rss/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/hugo-rss/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;R blogdown 搭建的 Hugo 网站，小细节很多，可以一点一点完善，好在都不难搞定。今天添加了个RSS订阅按钮。&lt;/p&gt;
&lt;p&gt;自从 Google Reader 死后，我就觉得 RSS 没有多大趣味，就好像子期死后伯牙摔琴一样。但是，没有 RSS 提醒的话，还真不知道谁的博客更新了，于是就勉强用 feedly 凑合。眼看我的新网站构架基本完成，就在 feedly 里订阅了一下自己的网站，输入 &lt;code&gt;pzhao.org&lt;/code&gt;，发现没找到。嗯？研究一下才明白，我的主页完整地址是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个路径对应的本地文件夹下面，不仅有个&lt;code&gt;index.html&lt;/code&gt;，还有个&lt;code&gt;index.xml&lt;/code&gt;，后者就是 RSS 订阅的文件。所以，在feedly添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就把我的新网站添进去了。这是订阅全站。如果只想订阅其中的博客，或新发表的学术文章，或新做的报告，那么：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/post/index.xml
http://pzhao.org/zh/publication/index.xml
http://pzhao.org/zh/talk/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个RSS链接，我该放到主页的什么位置，来方便网友订阅呢？我决定放到我的头像下面的社交按钮里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/social.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;头像下的社交按钮是在&lt;code&gt;config.toml&lt;/code&gt;里设置的，只需添加个&lt;code&gt;[[params.social]]&lt;/code&gt;就可以了，图标去&lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/icons/&#34;&gt;fa&lt;/a&gt;或&lt;a href=&#34;https://jpswalsh.github.io/academicons/&#34;&gt;ai&lt;/a&gt;两个包的主页找便是。 实在缺乏社交，只好把自己卡拉OK的录音和腾讯视频加进去凑数，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  [[params.social]]
    icon = &amp;quot;rss&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://www.pzhao.org/zh/index.xml&amp;quot;

  [[params.social]]
    icon = &amp;quot;music&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://kg.qq.com/node/personal?uid=649d9d85212c3489&amp;quot;

  [[params.social]]
    icon = &amp;quot;video-camera&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://v.qq.com/vplus/0f8190586a3f2f22a25e9827b38c171e&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题的多语言界面</title>
      <link>/zh/post/hugo-multilingual/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/post/hugo-multilingual/</guid>
      <description>&lt;p&gt;几年前我弄过&lt;a href=&#34;http://dapengde.com/archives/15265&#34; target=&#34;_blank&#34;&gt;双语博客&lt;/a&gt;， 后来放弃了，因为 WordPress 的双语方案有些遗留问题让我不爽，另外我没有精力写英文博客。现在，新网站是个科研网站，博客可以只出现在中文版里，而英文版只放自己的学术情况就行了，不用像博客更新那么频繁。所以，双语界面几乎是排在第一梯队的需求。&lt;/p&gt;

&lt;p&gt;我对Hugo的架构并不熟悉，原以为会很麻烦，结果弄一会儿就搞定了，原来这么简单。有些步骤在&lt;a href=&#34;http://dapengde.com/blogdown_demo_academic/post/getting-started/&#34; target=&#34;_blank&#34;&gt;主题的说明文档里&lt;/a&gt;提到了，但不够全。完整的步骤是这样的(看起来长，是因为我啰嗦，其实很快就能设置完)：&lt;/p&gt;

&lt;p&gt;1、开启双语。这需要在&lt;code&gt;config.toml&lt;/code&gt;里末尾找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这说明网站现在是英文的。在后面添加中文，也就是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;

[languages.zh]
  languageCode = &amp;quot;zh-cn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、设置默认语言。这需要在&lt;code&gt;config.toml&lt;/code&gt;里开头不远处找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Default language to use (if you setup multilingual support)
defaultContentLanguage = &amp;quot;zh&amp;quot;
defaultContentLanguageInSubdir = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原先是en，改成zh就可以让网站默认打开是中文。&lt;/p&gt;

&lt;p&gt;3、菜单栏增加中文界面。菜单栏就是网页顶部那一排按钮。这需要在&lt;code&gt;config.toml&lt;/code&gt;里找到菜单栏的设定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;Home&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面是默认语言英语的设置。在下面添加中文设置，格式是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[languages.zh.menu.main]]
  name = &amp;quot;主页&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，就把&lt;code&gt;Home&lt;/code&gt;按钮替换成了&lt;code&gt;主页&lt;/code&gt;按钮。其他按钮类似。&lt;/p&gt;

&lt;p&gt;4、其他地方的翻译。这需要把&lt;code&gt;\themes\hugo-academic\i18n\&lt;/code&gt; 文件夹拷贝到根目录，然后删掉里边不需要的语言文件。我们只保留&lt;code&gt;en.yaml&lt;/code&gt;和&lt;code&gt;zh.yaml&lt;/code&gt;。用文本编辑器打开&lt;code&gt;zh.yaml&lt;/code&gt;，把里边翻译不当的地方修改一下，比如 interests 翻译成了“兴趣爱好”，我改成了“研究领域”。&lt;/p&gt;

&lt;p&gt;5、新增帖子的双语。这个最好办，每次在&lt;code&gt;content\&lt;/code&gt;文件夹里新增文件时，如果要增加英文，就在文件扩展名前面加个&lt;code&gt;.en&lt;/code&gt;就行了。例如，我在&lt;code&gt;content\talk\&lt;/code&gt;下面新建了个&lt;code&gt;egu-2017.md&lt;/code&gt;，里面是中文，会出现在中文界面上。那么我想让这个项目也在英文版出现，只需把&lt;code&gt;egu-2017.md&lt;/code&gt;复制一份，命名为&lt;code&gt;egu-2017.en.md&lt;/code&gt;，那么这个项目就会在英文界面出现了。打开&lt;code&gt;egu-2017.en.md&lt;/code&gt;把里面的中文改成英文即可。&lt;/p&gt;

&lt;p&gt;6、在菜单栏增加中英文界面切换的按钮。只需在&lt;code&gt;config.toml&lt;/code&gt;里的菜单设置出增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;中文&amp;quot;
  url = &amp;quot;../zh&amp;quot;
  weight = 7
  
[[languages.zh.menu.main]]
  name = &amp;quot;EN&amp;quot;
  url = &amp;quot;../en&amp;quot;
  weight = 7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，双语界面全部搞定。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
