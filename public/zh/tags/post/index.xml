<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Peng Zhao</title>
    <link>http://www.pzhao.org/zh/tags/post/index.xml</link>
    <description>Recent content in Post on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <atom:link href="/zh/tags/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>R mindr: 把 Markdown 转成思维导图</title>
      <link>http://www.pzhao.org/zh/post/mindr/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/mindr/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;将 markdown (.md, .Rmd) 文件转换成思维导图的 R 扩展包 &lt;a href=&#34;https://github.com/pzhaonet/mindr&#34;&gt;mindr&lt;/a&gt; 是我写的第五个 R 包，安装方法如下：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/mindr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;在R的工作目录创建个名叫 &lt;code&gt;mm/&lt;/code&gt; 的文件夹，丢进去一堆 markdown 文件 (.md, .Rmd)，然后运行：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mindr::mindr()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就得到个 &lt;code&gt;mm.mm&lt;/code&gt; 的思维导图文件，用免费的思维导图软件 &lt;a href=&#34;http://freemind.sourceforge.net/wiki/index.php/Download&#34;&gt;freemind&lt;/a&gt; 可以直接打开。界面比较简陋。或者用漂亮的免费软件 &lt;a href=&#34;http://www.xmind.net/download/win/&#34;&gt;Xmind&lt;/a&gt;，需要选择&lt;code&gt;导入 freemind 导图&lt;/code&gt;。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我的书稿《学R》最初是先用思维导图拟定框架，然后在 Word 里写，后来转到 bookdown 里完成的。今天下午，我在书稿的旧思维导图里照着新稿修改，想把两者统一了。改着改着，觉得不对劲儿呀，R markdown 的哲学是维护一份文档，导出多个格式，我怎么又开始维护两份内容相同只是格式不同的文档了？&lt;/p&gt;
&lt;p&gt;这肯定不是什么新问题，肯定有办法直接把 markdown 转成思维导图。于是我搜。我搜搜搜，竟然没搜到！&lt;/p&gt;
&lt;p&gt;这就怪了。从常识上判断，我认为这个工具肯定有，说不定藏在某个 R 包里，只是太隐蔽了。&lt;/p&gt;
&lt;p&gt;是应该继续搜呢，还是自己动手？有时候真是难以权衡。我掂量了一下轻重，选择了后者。&lt;/p&gt;
&lt;p&gt;晚上，写好了。&lt;/p&gt;
&lt;p&gt;先拿 &lt;a href=&#34;https://github.com/rstudio/bookdown/tree/master/inst/examples&#34;&gt;bookdown 书稿&lt;/a&gt;当小白鼠练手，用 freemind 直接打开：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_bookdown.jpeg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;freemind 确实简陋。再拿 &lt;a href=&#34;https://github.com/rstudio/blogdown/tree/master/docs&#34;&gt;blogdown 书稿&lt;/a&gt; 试试，导入 Xmind 看看：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_blogdown.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;还不错。好了，实验成熟了，放心地用在自己的书稿上，并且挑个最漂亮的款式：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/mindr/master/showcase/mindr_xuer.jpg&#34; /&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R blogdown 科研网站的公式和参考文献</title>
      <link>http://www.pzhao.org/zh/post/rblogdown-bib/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/rblogdown-bib/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;本网站的公式和参考文献一直未能正常显示，直到今天我才把这两个问题解决。&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;公式&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;公式的问题迟迟未解决，是因为我看到人们在讨论往html文件里加 &lt;code&gt;Load mathjax&lt;/code&gt; 代码这种解决方案，一看就头大，不想做。&lt;/p&gt;
&lt;p&gt;其实，我用的hugo-academic主题，据说是支持数学环境的，据说在 &lt;code&gt;config.toml&lt;/code&gt; 里设置 &lt;code&gt;math = true&lt;/code&gt;就开启全站支持，在单篇post的yml头里这样设置就开启单篇支持。可是我两样都试过，然后运行 &lt;code&gt;blogdown::serve_site()&lt;/code&gt;测试，在RStudio的Viewer里都不能成功显示公式。&lt;/p&gt;
&lt;p&gt;今天突然灵光一现，心想不会是RStudio Viewer的问题吧？于是点击Viewer左上角的 &lt;code&gt;Show in new window&lt;/code&gt; 按钮，用外部浏览器打开一看，Duang！帖子里的公式就都可以正常显示了！这里秀一个：&lt;/p&gt;
&lt;p&gt;帖子里输入下面的 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 公式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}$$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;网页就会显示：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}\]&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两个多月前，就&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/66&#34;&gt;有个哥们儿问&lt;/a&gt;“有没有可能在blogdown创建的网站里添加参考文献?”作者回答得干脆：“有。”两人对话戛然而止，让我目瞪口呆。由于在&lt;a href=&#34;http://bookdown.org/yihui/blogdown&#34;&gt;blogdown 官方手册&lt;/a&gt;里并未看到添加参考文献的方法，我一直以为这个功能尚在开发中，直到今天也没见动静，有些起疑，就随便试了一下，步骤跟在 bookdown 里一样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把参考文献库 .bib 文件考到 &lt;code&gt;content\post\&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;在帖子 &lt;code&gt;.Rmd&lt;/code&gt; 文档的 yml 头里声明 .bib 文件的名称和路径。这里我设成 &lt;code&gt;bibliography: [book.bib, packages.bib]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;在帖子里引用 .bib 里的文献条目，例如 &lt;code&gt;[@R-blogdown]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;运行建站函数 &lt;code&gt;blogdown::build_site()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就这样，说时迟那时快，只见Duang！帖子里的引用就显示成了 &lt;span class=&#34;citation&#34;&gt;(Xie 2017)&lt;/span&gt; ！而帖子末尾的参考文献列表就自动出来了！&lt;/p&gt;
&lt;p&gt;blogdown 可以如此方便地往帖子里插入计算代码、图表、公式、参考文献，我实在找不出第二个这样的工具。建科研网站，非 blogdown 莫属！&lt;/p&gt;
&lt;p&gt;最后顺便提一下：虽然最新正式版的 RStudio 1.0.143 并 没有 blogdown 和 bookdown 的入口，但是我欣喜地发现，在 &lt;a href=&#34;http://dailies.rstudio.com&#34;&gt;RStudio 的开发版&lt;/a&gt; 1.1.233 里已经加入了这个入口了！菜单 File - New Project - New Directory，就能看到 blogdown 和 bookdown 项目。跟 shiny 和 R package 并列，可见 RStudio 公司对这两个项目的重视程度。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/rstudiobookdown.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;有幸尝试了 blogdown 和 bookdown &lt;span class=&#34;citation&#34;&gt;(Xie 2016)&lt;/span&gt; 项目，并且也做过 &lt;a href=&#34;http://sciwis.com/&#34;&gt;shiny&lt;/a&gt; 和 &lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/&#34;&gt;R package&lt;/a&gt;，我模模糊糊有种异样的感觉，就像埋头赶路时猛一抬头，隐隐约约眺见了走在时代前面的先知们的背影。&lt;/p&gt;
&lt;div class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-R-bookdown&#34;&gt;
&lt;p&gt;Xie, Yihui. 2016. &lt;em&gt;Bookdown: Authoring Books and Technical Documents with R Markdown&lt;/em&gt;. &lt;a href=&#34;https://github.com/rstudio/bookdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/bookdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-R-blogdown&#34;&gt;
&lt;p&gt;———. 2017. &lt;em&gt;Blogdown: Create Blogs and Websites with R Markdown&lt;/em&gt;. &lt;a href=&#34;https://github.com/rstudio/blogdown&#34; class=&#34;uri&#34;&gt;https://github.com/rstudio/blogdown&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>9分钟写个R语言包：菜鸟致简速成</title>
      <link>http://www.pzhao.org/zh/post/rmickey/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/rmickey/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;写R包这种高大上的工作，原以为学会怎么写得花个一年半载，学会之后写一个包怎么着也得个把月，谁料想周一上午下了决心，到周二下午就一口气写了4个包，算起来从学到写，只花了一天多时间。这里是个小结。&lt;/p&gt;
&lt;p&gt;学写R包，我主要参考了3份资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;谢益辉的&lt;a href=&#34;https://cos.name/2011/05/write-r-packages-like-a-ninja/&#34;&gt;开发R程序包之忍者篇&lt;/a&gt;，2011年。反复读了好几遍。&lt;/li&gt;
&lt;li&gt;黄俊文的&lt;a href=&#34;https://cos.name/2013/11/building-r-packages-easily/&#34;&gt;极简R包建立方法&lt;/a&gt;, 2013年。反复读了好几遍。&lt;/li&gt;
&lt;li&gt;Hadley Wickham 的&lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;R packages&lt;/a&gt;, 2015年。反复扫了好几眼。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了这3份很好的资料，那我还写本篇帖子做什么？&lt;/p&gt;
&lt;p&gt;这是因为，他们都是高手中的高手，只是我觉得他们写得，就好比教授写幼儿园教材，仍然不太合小朋友的胃口，不足以让我等菜鸟快速入门。比如读到roxygen2是多么美妙，我起初完全没体验，不知道“举头望文档，低头思函数”到底说的是什么（what the hell was Yihui talking about? 当然，一天之后我就体会到了静夜思的精妙），再一看Emacs就被吓得河水倒流，当年光一个vim就把我折腾个半死。而极简篇里，我觉得既然是极简，能减掉的步骤尽量减，所以还能继续剪。可能当年是极简，时过境迁，人类进步，现在可以比极简更简。&lt;/p&gt;
&lt;p&gt;下面，我试试写个减到不能再减的一剑封喉致简版，只需小改两个文本文件，不出十分钟就写出一个能用的R包。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;p&gt;跟前期准备和后期维护相比，写包本身其实是最简单的环节。假定你已经安装好了R和RStudio，那么，运行R，安装几个包：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;devtools&amp;quot;, &amp;quot;roxygen2&amp;quot;, &amp;quot;testthat&amp;quot;, &amp;quot;knitr&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows用户，安装 &lt;a href=&#34;http://cran.r-project.org/bin/windows/Rtools/&#34;&gt;rtools&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Linux用户，安装对应的 R 开发包，sudo apt-get install r-base-dev.&lt;/li&gt;
&lt;li&gt;OS X 用户，安装command-line-tools，Terminal 运行 git 或者 xcode-select.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;致简四部曲&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;参照益辉的&lt;a href=&#34;https://github.com/yihui/rmini&#34;&gt;rmini&lt;/a&gt;，我做了个更简单的模板（Update：根据&lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/#comment-3312847859&#34;&gt;Dong的建议&lt;/a&gt;，也可以RStudio - File - New project - New directory - R package），叫做rmickey。&lt;a href=&#34;https://github.com/pzhaonet/rmickey/archive/master.zip&#34;&gt;点击下载&lt;/a&gt;并解压缩，得到个名叫rmickey文件夹。这个文件夹名字可以随便改。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;双击&lt;code&gt;rmickey.Rproj&lt;/code&gt;（这个文件名也可以随便改），就会用RStudio打开这个项目。后续步骤全部在RStudio里操作。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击打开RStudio右下窗口Files下的&lt;code&gt;DESCRIPTION&lt;/code&gt;文件（这个文件名千万别改）和&lt;code&gt;R/foo.R&lt;/code&gt;文件（这个文件名可以随便改）。&lt;code&gt;DESCRIPTION&lt;/code&gt;里是你的包的描述信息。可以看到包名称，版本，日期，包标题，包作者，维护者，依赖性，描述等信息。把其中每一条冒号后面的信息改成你自己的信息，比如把第一行包的名称改成mymickey，保存。&lt;code&gt;R/foo.R&lt;/code&gt;里是你的包里包含的自定义函数，模板里只列了一条做示例。函数的写法跟平时没区别。而函数前面的几行，就是所谓的说明文档，都以&lt;code&gt;#&#39;&lt;/code&gt;开头，第一行是简要介绍，以&lt;code&gt;@param&lt;/code&gt;开头的行逐个介绍函数的自变量（懒得介绍的话就像示例里的x2那一行一样空着，但x2后面必须有一个空格），&lt;code&gt;@return&lt;/code&gt;开头的行介绍因变量（必填），&lt;code&gt;@export&lt;/code&gt; &lt;code&gt;@examples&lt;/code&gt;两行可以不修改。有更多函数的话，照葫芦画瓢在文件里往下继续写就是了。保存。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击RStudio右上窗口的&lt;code&gt;Build&lt;/code&gt;标签下的&lt;code&gt;Build &amp;amp; Reload&lt;/code&gt;按钮，包就编译并自动安装好了！&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;试着运行一下你刚才自定义的函数，记得用tab键补全功能和F1查看帮助信息，体会一下刚才你在foo.R文件里修改的内容是如何在tab和F1里体现出来的，然后就自然知道如何把foo.R写得更好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载模板–打开项目–修改模板–编译，这就是R包的9分钟致简开发四步曲。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;发布和分享&lt;/h2&gt;
&lt;p&gt;史书分正史和野史，R包分正包和野包。正包是通过R官方认可并且发布在CRAN网站上的，等于领到了认证和许可，可以用&lt;code&gt;install.package()&lt;/code&gt;直接安装；野包就是自己私下写的，随便放在自己喜欢的地方小范围使用的。很多包转正之前都是野包，经过反复测试和升级后才转的正，而有的野包会永远野下去，永不接受招安。我目前写的几个包都是野包，将来转不转正走着瞧，所以这里只介绍野包的发布和分享方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;熟悉Github的话，建议用这种方法。既然熟悉，我这里就不详说Github的用法了，只做个简单介绍。&lt;/p&gt;
&lt;p&gt;你要做的，就是在github.com上申请个账号，电脑里安装个客户端，在客户端新建个项目并起个名字例如叫mymickey，把你新的R包文件夹同步上去，就可以通知用户们来使用你的mymickey包了。&lt;/p&gt;
&lt;p&gt;用户要做的就是直接安装，只需在R里运行&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;你的账号/你的项目名称&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就把你的包装到他们的R里了。&lt;/p&gt;
&lt;p&gt;举个粒子：比如你刚才下载的rmickey模板，本身就是个R包（我的第四个R包），这个包里只有一个函数&lt;code&gt;foo()&lt;/code&gt;，可以给出宇宙和人生终极问题的答案。安装和运行方法是：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/rmickey&amp;quot;)
library(rmickey)
foo()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你跟我一样，搞了几年都搞不明白Github的用法和逻辑，那我建议你用下一种方法分享。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;离线法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;离线法就是让用户把你的包先下载到他们电脑上，再用R包的离线安装方式。&lt;/p&gt;
&lt;p&gt;你的包的压缩文件其实在上面点&lt;code&gt;Build &amp;amp; Reload&lt;/code&gt;的时候已经自动生成了，去看看你电脑上的R包文件夹，跟它并列存放的，有个与包同名的&lt;code&gt;.tar.gz&lt;/code&gt;压缩文件。这就是离线安装包。&lt;/p&gt;
&lt;p&gt;你要做的，就是随便以任何方式，不管是email、qq、网盘，还是优盘、手机、移动硬盘，只要让用户能得到你这个压缩文件就行了。&lt;/p&gt;
&lt;p&gt;用户要做的，就是拿到文件后在他们的电脑上安装，方法是在RStudio菜单栏点&lt;code&gt;Tools&lt;/code&gt; – &lt;code&gt;Install Packages&lt;/code&gt; – &lt;code&gt;Install from Package Archive File&lt;/code&gt;，选上你的包，就行了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;进阶&lt;/h2&gt;
&lt;p&gt;欲穷千里目，更上一层楼。&lt;/p&gt;
&lt;p&gt;用9分钟致简四步法写出的R包，足够自用了。在这个高度，看到的风景已经够美。你可以在这个水平的观景台休整休整，再考虑是否继续往上攀登。孔子登东山而小鲁，登泰山而小天下。如果想看到更高处的风景，那么就继续读本帖前言部分的3份资料，以及他们介绍的更多资料，把你的包写得更好。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;心得&lt;/h2&gt;
&lt;p&gt;现在，让我们回过头来谈一个问题：&lt;strong&gt;我们为什么要写R包？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先是方便自用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用R语言这几年，我逐渐积累的自定义函数越来越多，我把他们通通存到一个.R文件里。现在，这个文件已经有2000行，51个自定义函数（Update: 后来发现更多，我忘在另一个.R文件里了）。每次用时都&lt;code&gt;source()&lt;/code&gt;一下，我觉得调用起来已经很方便了，虽然会导致RStudio右上窗Environment标签下特别冗长，而且经常忘记这些函数的用法，需要查看函数源代码，但总好过每次把函数重写或重拷贝一遍。没写成包之前，这几年都是这么过来的。&lt;/p&gt;
&lt;p&gt;昨天，我花了半天时间，把它写成了我的&lt;a href=&#34;https://github.com/pzhaonet/mf&#34;&gt;第三个R包mf&lt;/a&gt;。这当然是个野包，纯属自用，自己懂就行了，我懒得为别人把这51个函数的说明文档从头到尾写一遍。用起来的爽快程度，当然比&lt;code&gt;source()&lt;/code&gt;强多了，不仅Environment区清爽了，更关键的是，忘了的话就用tab和F1大法，几年积攒的不快一扫而空。就算换个工作单位，换台电脑，花几秒钟安装后照旧调用，处处无家处处家。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次是改善代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写代码对我来说一直是件封闭的事情：自己写，自己用，一旦出错，只有自己知道。计算方法没有经过同行评议，出错的风险很大。但是我又不愿意厚着脸皮强迫别人帮我改代码。两全的办法，就是开源，写成包，放在Github上，接受志愿者挑错，有则改之无则加勉。只有这样，才能把代码错误越来越少，改得越来越好，最终还是自己用起来更爽。至于对别人和社区有没有贡献，我只盼自己没有添乱就行了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后是审视自我。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我的第一个R包&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;是用R markdown做海报，兴致勃勃地放到Github第一天，就有人留言汇报问题。我知道，这只是个开始，以后会有更多的问题，里面会有赞美也会有谩骂。写出个R包真的不算啥，等待在前面的一个又一个的坑才是让人真正头疼的事情。&lt;/p&gt;
&lt;p&gt;这个阶段就要接收考验了。你会重新审视自己：我这么干到底是图个啥？我自用已经够了，却要花大量的时间帮一些跟我八杆子都打不到的人解决他们五花八门层出不穷的问题，我闲得么？花的这工夫和精力，到底是能发表成学术论文呢，还是能变现呢，还是能替我洗碗带孩子呢，还是能帮我赚游戏装备？&lt;/p&gt;
&lt;p&gt;开源软件是面镜子，让你从中看到自己。唐太宗说过：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以铜为鉴，可以正衣冠；&lt;/p&gt;
&lt;p&gt;以人为鉴，可以知得失；&lt;/p&gt;
&lt;p&gt;以史为鉴，可以知兴替：&lt;/p&gt;
&lt;p&gt;以R包为鉴，可以知本我、自我和超我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://dapengde.com/wp-content/uploads/2017/03/2017-03-19.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;PS. 星期三下午，我壮着胆子把Emacs装上，战战兢兢试了一下就惊呆了。这个ctrl+coo快捷键(可以读作“control 酷”，太好记了)来维护R包简直不要太逆天。昨天我花了四五个小时来为我那51个函数写文档，要是用Emacs，估计最多一小时就够了。省事的话，可能不到10分钟就能写出个包含这51个函数的能用的致简包。最让我受刺激的还不是这个。自打学了vim之后，我就坚信，我永远用不着，也永远学不会Emacs，而实际上，学会上面这个办法，只用了三五分钟……Emacs我不打算学更多，光这一招就够酷……(Update: 根据 &lt;a href=&#34;http://www.pzhao.org/zh/post/rmickey/#comment-3314475182&#34;&gt;Yihui Xie&lt;/a&gt;的留言，RStudio 里 ctrl+shift+alt+r也能同样实现)&lt;/p&gt;
&lt;p&gt;到底是什么阻挡了尝试新事物的可能？&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/emacs-coo.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>postr: 用R Markdown做海报</title>
      <link>http://www.pzhao.org/zh/post/postr/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/postr/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;用R markdown写海报的扩展包&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;安装使用方法（需要先安装好软件环境，详见&lt;a href=&#34;https://github.com/pzhaonet/postr&#34;&gt;postr&lt;/a&gt;项目主页）：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/postr&amp;quot;)
setwd()
postr::postr()&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_eco.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;益辉的&lt;a href=&#34;https://yihui.name/cn/2017/04/r-markdown-poster/&#34;&gt;莽撞人项目&lt;/a&gt;，悬赏解决“用 R Markdown 做海报”这个技术难题。我私下说，Markdown走的是LaTeX路线，讲究篇章结构和逻辑，而海报追求更多随意性和艺术性，即使学术海报也不例外，所以费劲硬要用Markdown解决，可能吃力不讨好。倒不如Powerpoint来得方便，或者把整个海报在R里当成一个device，用layout画图来实现。话虽这么说，我仍然在留意这件事，因为我在新书&lt;a href=&#34;http://xuer.pzhao.org&#34;&gt;学R&lt;/a&gt;里提出R语言科研方案的整体拼图，被我几乎全部拼完了，只缺海报这一块。这就好比在朋友圈发照片只发八张，看一眼就浑身不自在。&lt;/p&gt;
&lt;p&gt;前几天，做&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;时找模板，在比利时鲁汶大学的一大堆模板当中，我极其偶然地发现，里面暗暗潜伏着的，竟然有用R Markdown制作海报的秘密，淹没在一大堆文件里，搞不清楚各个文件之间的关系，而且说明文档过于简单，用起来不够方便。于是，我花了些工夫，把海报部分择了出来，稍加修改，增添了几个自己做的颜色主题，纳入了&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;里。我的想法是，用户只需下载我这个文件夹，选择好模板，一运行，就出来个Rmd文件，打开一点knit按钮，Duang！海报就出来了。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ocean.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;于是去揭“莽撞人”榜。榜主说：很好。然后说：做成个包吧！名字都起好了，叫postr。为啥不直接叫poster？我猜大概是postr跟knitr的命名法类似，更容易搜到吧。&lt;/p&gt;
&lt;p&gt;想来也是。我这种下载文件夹的方法毕竟路子太野，不符合R语言的习惯，大家更喜欢的是做包，上传，安装。但是我从来没做过包。而且，我认为做包是R语言里高大上的东西，我不认为自己能很快学会做。于是，我在朋友圈招贤，看有没有谁愿意把这活儿给接过去。消息放出去一天，无人理睬。&lt;/p&gt;
&lt;p&gt;得，自己来吧。&lt;/p&gt;
&lt;p&gt;这天大娃生病了，早上带他看医生。诊所人满为患。排队的时候，我把网上几篇关于R包开发入门的帖子扫了几遍，好像不太难哦。从诊所出来，十点多了，一到办公室，就干劲十足地折腾。事情出乎意料的顺利。我原以要到明年才能把这个包写出来，结果当天下午就写完了。这个过程里，多亏了几位前人的工作，几年前还很繁琐复杂的R包开发，现在分分钟就能写一个玩玩。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_rose.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;既然这么容易，我顺手把&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt;也写成了个包。然后把平时常用的方程写成了第三个包。我还准备写个R包开发菜鸟教程，于是又写了个示例包。&lt;/p&gt;
&lt;p&gt;从对R包开发一无所知，到一口气干掉四个包，花了不到两天工夫。用力过猛，有点撑了，我隐隐觉得不妙：好像不该这么顺利吧。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ice.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;果然，postr放到github当天晚上，就有人留言了。我很好奇这哥们儿是怎么在第一时间发现我这么个无名之辈发布了一个包。这哥们儿先说，postr这个名字起得好，很容易记住。这得感谢益辉，他给我的域名提的建议也让人说容易记。然后这哥们儿说：这个包他运行无法通过。&lt;/p&gt;
&lt;p&gt;这时我陡然发现，这才是R包开发的关键。写个包发布到github并不难，难的是解决用户的问题。&lt;/p&gt;
&lt;p&gt;前面等待的，将是一个又一个的坑。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_night.jpg&#34; /&gt;

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R bookdown&#43;: 用 R bookdown 写期刊论文、日记、信件、日历、吉他书、化学方程式</title>
      <link>http://www.pzhao.org/zh/post/bookdown-plus/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-plus/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;strong&gt;注意：本文所述的&lt;code&gt;bookdown+&lt;/code&gt;这个项目已经停止开发，继承者是我新开的R包项目&lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus&lt;/a&gt; ，这是因为我学会了写R包。当然，说不定有些朋友不喜欢安装R包，喜欢下载个文件夹直接免安装用，那么本文所述的方法仍然可以继续使用，只是我不再更新了而已。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R bookdown 能做的事情很多，可是那些功能迟迟不来，我只好自己动手，写了个 &lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;，目前大体实现了用 bookdown 写期刊论文、化学分子式、信件、日记、日历等功能。当然，有些还没完全实现，革命不够彻底，带着浓重的&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;旧社会的气息。革命尚未成功，同志仍需努力。&lt;/p&gt;
&lt;p&gt;下面是 &lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt; 的简介和快速使用方法。&lt;/p&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;背景&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;，听起来像是跟R&lt;span class=&#34;citation&#34;&gt;[@R-base]&lt;/span&gt;的扩展包&lt;code&gt;bookdown&lt;/code&gt;&lt;span class=&#34;citation&#34;&gt;[@R-bookdown]&lt;/span&gt;有关吧?&lt;/p&gt;
&lt;p&gt;一点没错！我们知道，&lt;code&gt;bookdown&lt;/code&gt;天生是个用来写编程书籍的称手工具。只是，这仅仅是硬币的一面。&lt;code&gt;bookdown&lt;/code&gt;的功能远远不止如此。它就像一个美味的蛋糕，我等啊等啊，等着谁把它切开，实在等不及了，就自己下手吧。所以，我弄了个&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;是&lt;code&gt;bookdown&lt;/code&gt;的扩展。我数年前收集了一些&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;模板，现在我把他们整理到&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt;里，这样就可以开开心心在&lt;code&gt;bookdown&lt;/code&gt;的环境里做喜欢的事情。&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;bookdown+&lt;/a&gt; 展示了硬币的另一面：你可以用它来写写期刊论文、化学分子式、信件、日历、甚至日记。&lt;/p&gt;
&lt;p&gt;另一方面，我从个人角度对&lt;code&gt;bookdown&lt;/code&gt;的使用做了简化。官方提供的&lt;code&gt;bookdown&lt;/code&gt;模板虽然很好用，但对新手来说略显繁琐，需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;index.Rmd&lt;/code&gt;和&lt;code&gt;_output.yml&lt;/code&gt;两个文件里设置yaml，&lt;/li&gt;
&lt;li&gt;需要在&lt;code&gt;_bookdown.yml&lt;/code&gt;里设置文件名；&lt;/li&gt;
&lt;li&gt;对中文用户来说，还得跟LaTeX打交道，需要考虑&lt;code&gt;before_body.tex&lt;/code&gt;, &lt;code&gt;after_body&lt;/code&gt;, &lt;code&gt;preamble.tex&lt;/code&gt;里面的设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些操作可能让新手望而生畏。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;用起来就容易多了，只需在一个叫做&lt;code&gt;_runme.R&lt;/code&gt;的文件里设置好书名、作者，选好模板，binggo！就可以开始放心写自己的文字了。&lt;/p&gt;
&lt;p&gt;功能扩展，操作简化，这就是&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus&#34;&gt;R bookdown+&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在不久的未来，肯定会出现很多官方的bookdown模板，但是我不想等了。你要是也等不及，就跟我来一起使用或开发[bookdown+]吧！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;快速入门&lt;/h1&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;预备&lt;/h2&gt;
&lt;p&gt;在开始前，你需要安装 R, RStudio, bookdown，和其他依赖的软件和包(例如 &lt;code&gt;Pandoc&lt;/code&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;, &lt;code&gt;rmarkdown&lt;/code&gt;, &lt;code&gt;rticle&lt;/code&gt;, &lt;code&gt;knitr&lt;/code&gt;等)。详见&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown官方手册&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;准备好后，从Github&lt;a href=&#34;https://github.com/pzhaonet/bookdown-plus/archive/master.zip&#34;&gt;下载&lt;code&gt;bookdown+&lt;/code&gt;&lt;/a&gt;压缩文件。解压缩到你的电脑里，在得到的文件夹里找到 &lt;code&gt;_start.Rproj&lt;/code&gt;文件，双击就会在RStudio里打开一个项目。&lt;/p&gt;
&lt;p&gt;文件夹里还有个&lt;code&gt;_runme.R&lt;/code&gt;文件。你可以双击打开并运行。下面是对这个文件里代码的详细解释。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第1步：标题和作者&lt;/h2&gt;
&lt;p&gt;改成你自己书的标题和作者名。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;title &amp;lt;- &amp;#39;bookdown+: Authoring Articles, Mails, Guitar books, Chemical Molecular Formulae and Equations with R bookdown&amp;#39;
author &amp;lt;- &amp;#39;Peng Zhao&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;2-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第2步: 模板&lt;/h2&gt;
&lt;p&gt;在给定的可用模板里选择你想要的。这里我们选第8个。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;templates  &amp;lt;- c(&amp;#39;article&amp;#39;,     #1, academic article
                &amp;#39;article_zh&amp;#39;,  #2, academic article in Chinese
                &amp;#39;calendar&amp;#39;,    #3, calendar, in progress
                &amp;#39;chemistry&amp;#39;,   #4, chemical molecular formulae and equations
                &amp;#39;chemistry_zh&amp;#39;,#5, in Chinese,
                &amp;#39;guitar&amp;#39;,      #6, guitar book
                &amp;#39;mail&amp;#39;,        #7, mail, in progress
                &amp;#39;journal&amp;#39;,     #8, laboratory journal, or personal diary
                &amp;#39;mini&amp;#39;,        #9, a mini demo by Yihui
                &amp;#39;original&amp;#39;,    #10, the original demo by Yihui
                &amp;#39;book_zh&amp;#39;      #11, the demo in Chinese by Yihui
)
template &amp;lt;- templates[8]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行 &lt;code&gt;fun/build.R&lt;/code&gt;。&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;source(&amp;#39;fun/build.R&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;3-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;第3步: 成书&lt;/h2&gt;
&lt;p&gt;现在按下 &lt;code&gt;ctrl+shift+b&lt;/code&gt; 快捷键，你就会在新生成的&lt;code&gt;book/&lt;/code&gt;文件里找到一本示例书。打开看看吧！&lt;/p&gt;
&lt;p&gt;你自己的文字只需在&lt;code&gt;body.Rmd&lt;/code&gt;修改，写完后重复本步即可。&lt;/p&gt;
&lt;p&gt;祝你玩得愉快！&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section level1&#34;&gt;
&lt;h1&gt;模板效果展示&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;article&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_mdpi1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_mdpi.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;article_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+article_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;calendar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+calendar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;chemistry&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+chemistry.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;guitar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+guitar.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;journal&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+journal.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;mail&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+mail2.png&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poem&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poem.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_classic&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_classic.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_ubt&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_ubt.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;thesis_zju&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+thesis_zju.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_demo&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_demo.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_mini&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_mini.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;yihui_zh&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+yihui_zh.jpg&#34; /&gt;

&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;poster&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_ocean.jpg&#34; /&gt;

&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/pzhaonet/bookdown-plus/master/showcase/bookdown+poster_eco.jpg&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>初恋</title>
      <link>http://www.pzhao.org/zh/post/cawas/</link>
      <pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/cawas/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;有一次回乡，见到我的中学老师范先生，谈起当年种种情形，范先生说，我们班是他作为班主任带过的第一个班。我们班之后的十几年来，他也带过很多个班，对他们不可谓不爱，但那份感情在微妙之处却总有不同。我们班让他刻骨铭心，他对我们班的感情，“宛若初恋”。&lt;/p&gt;
&lt;p&gt;我不由得笑道：范先生把工作热情与爱情相比，其中的幽默感当真是可歌可泣。&lt;/p&gt;
&lt;p&gt;转眼间，范先生关于初恋的比喻已是几年前的旧事。前两日，整理移动硬盘里的旧文件，在一个多年没碰过的文件夹里，我发现了一些跟以前的工作单位有关的旧物，已遗忘多年，打开一看——&lt;/p&gt;
&lt;p&gt;旧物里有入职满一年时，我为单位设计的logo。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/cawastech.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;那年，我们要编写大量的技术手册和办公文档，我很单纯地想，为他们设计一个logo会显得好看一点。说是“设计”，我哪里懂呢，只是把学到的一点flash技术使劲往上靠。这个工作单位属于国家气象局，那就往里加气象元素呗；我所在的部门主要职责是安装、维修和标校仪器，那就画个扳手呗。我们还要对来自全国各地的同行进行培训，于是我配套设计了几个颜色渐变动画版，打算在培训幻灯片里用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.pzhao.org/img/cawastech1.gif&#34; /&gt; &lt;img src=&#34;http://www.pzhao.org/img/cawastech2.gif&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可惜做完之后并未派上用场。如今，我连源文件都打不开了。&lt;/p&gt;
&lt;p&gt;旧物里有入职第二年，我制作的电子贺卡。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/cawas_214.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;那年，春节和情人节接踵而至。刚刚学了一点编程的我，绞尽脑汁把用我学到的所有visual basic技术全都用上，制作了一张&lt;a href=&#34;http://www.pzhao.org/download/bainian.exe&#34;&gt;电子卡片(点击下载)&lt;/a&gt;，以部门的名义，发给同单位其他部门的同事联络感情。在这张卡片上，有“喜欢”和“不喜欢”两个按钮，但是有个小把戏：鼠标永远追不上“不喜欢”；鼠标一放上去，它就跳到别的地方去了。所以，你对我们部门只能喜欢，别无选择。&lt;/p&gt;
&lt;p&gt;我就从没想过，贸然发给同事个exe文件，说不定讨人嫌吧？如今，我已经把visual basic忘得一干二净，代码读都读不懂了。&lt;/p&gt;
&lt;p&gt;旧物里有入职第三年，我做的合唱伴奏音乐。&lt;/p&gt;
&lt;p&gt;那时，我们单位举办春节联欢会，节目的演员是各所职工。我们中心表演的节目是大合唱。提前一个多月，我们就开始着手准备，指导老师请好了，演员也动员好了，排练时间也安排好了，曲目也选好了，是刘欢原唱的《在路上》。这时却发现，原唱音频文件的消声效果不够好，而专门的伴奏又找不到。我自告奋勇，连熬两个通宵，使出浑身解数，愣是用一个吉他谱制作软件把&lt;a href=&#34;http://www.pzhao.org/download/on_the_way.mid&#34;&gt;伴奏音乐(点击下载)&lt;/a&gt;硬生生做了出来。这里面，除了主旋律是在网上找到的简谱外，其他音轨都是我从原唱里一个音一个音听写下来，记在纸上，再输入电脑，反复调整才得来的。我记得，做完的时候已是凌晨5点，躺下眯了两小时，就跳起来挤公交上班，到单位继续亢奋地修仪器。&lt;/p&gt;
&lt;p&gt;回望这段往事，我感到不可思议。logo并没有领导要求我做，电子贺卡的编程完全属于自愿，而合唱伴奏的制作弄得通宵不睡，更是自作自受——你不做又会怎么样呢？节目照演，春节照过。我问问自己：你为她投入的这份热忱，是她需要的吗？她要求你做到的事情，你做到了吗？你的所谓付出，哪些是出于爱她，哪些是出于爱自己，哪些是二者兼有？&lt;/p&gt;
&lt;p&gt;此情可待成追忆，只是当时已惘然。入职第四年，我辞职出国深造，与旧单位分道扬镳。&lt;/p&gt;
&lt;p&gt;如今翻起旧物，我清楚地知道，为工作单位设计logo、制作贺卡、制作伴奏这样的事情，今后恐怕再也不会自发自愿地发生在我身上；即使发生，也难以倾注当年那么大的热情。那份热情不计付出，熊熊燃烧，那是青春的见证。&lt;/p&gt;
&lt;p&gt;宛若初恋。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;正值&lt;a href=&#34;http://www.goosetown.cn/?thread-21.htm&#34;&gt;鹅城话题博文活动举办第二期&lt;/a&gt;，本文恰巧契合主题，顺便报名参加。&lt;/p&gt;
&lt;p&gt;
感谢本次活动赞助者：&lt;a href=&#34;https://www.9doe.com&#34; target=&#34;_blank&#34;&gt;小懿&lt;/a&gt;、&lt;a href=&#34;http://cctv.com.im&#34; target=&#34;_blank&#34;&gt;醉卧烟雨&lt;/a&gt;、&lt;a href=&#34;https://chinr.net&#34; target=&#34;_blank&#34;&gt;忘想&lt;/a&gt;、&lt;a href=&#34;http://www.munanzi.com&#34; target=&#34;_blank&#34;&gt;牧南子&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
本次活动由&lt;a href=&#34;http://storeweb.cn/&#34;&gt;个站商店&lt;/a&gt;提供冠名支持。
&lt;/p&gt;
&lt;p&gt;
参加本次话题博文活动的还有：
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pewae.com/2017/04/phenix_on_hairpin_reunion.html&#34; target=&#34;_blank&#34;&gt;大致：钗头凤·重逢&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://blog.cctv.com.im/2068.html&#34; target=&#34;_blank&#34;&gt;醉卧烟雨：写给儿时的火烈鸟&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.mhcf.net/577.html&#34; target=&#34;_blank&#34;&gt;姜辰：雨中客，送伞人&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://quluwei.com/archives/1476&#34; target=&#34;_blank&#34;&gt;曲曲：老爸的柔情&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R vs Python: 2017年欧洲地学年会</title>
      <link>http://www.pzhao.org/zh/post/egu2017/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/egu2017/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;a href=&#34;http://dapengde.com/archives/17969&#34;&gt;欧洲地学学会EGU年会&lt;/a&gt;每年一次，都在维也纳国际会议中心举办，原因是别的地方很难找到这样一个会场，能容得下这么大的规模。为期一周的会议，参加人数上万，分会场有五百个以上。因为离得近，乘火车4小时，我们组年年都参加。去年我申请到一个口头报告，今年再次申请，会议协调人说：你们组申请了两个口头报告，但只能给你们组一个名额，你们内部定吧。我和同事商量了一下，决定他做口头报告，我做海报。&lt;/p&gt;
&lt;p&gt;这两天，准备海报和年会日程时，我发现个有趣的新现象。一打开“短期课程”类日程表，就感到一股杀气扑面而来。年会擂台的两位选手即将上阵，一个叫R，一个叫Python。&lt;/p&gt;
&lt;p&gt;首先亮相的是Python。第一天的第一批分会场，Python先发制人，发起个课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25679&#34;&gt;“使用Python和Jupiter做数据分析”&lt;/a&gt;，一个半小时，要求携带笔记本电脑，手把手教你用Python语言读取不同格式数据、分析和作图，并使用 Jupyter Notebook 来记录和分享工作。Python语言就相当于R语言，Jupyter Notebook就相当于 R markdown。这是明摆着对R的挑衅啊！我决定放弃另外一个感兴趣的学术分会场，来参加这一个。&lt;/p&gt;
&lt;p&gt;R当然不甘示弱，见招拆招。当天下午有个课程，叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25731&#34;&gt;“水文学中使用R”&lt;/a&gt;，内容是学习用R语言进行水文学的时间序列分析和地理信息系统GIS数据处理、水文建模。水文学不是我的专业，但是有关联。好想参加，可惜跟我必须参加的另一个会场时间冲突了，只能忍痛割爱，暗暗希望R在这个回合打败Python。&lt;/p&gt;
&lt;p&gt;问题是Python还有后招。星期四，Python有个课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25651&#34;&gt;“Python处理多维度地理科学大数据：xarray扩展包入门教程”&lt;/a&gt;。课程将介绍Python处理数据的基本用法，包括下标系统、选择、分组、作图、计算、自定义函数，并演示如何用 Python+xarry+Jupyter来轻松教没有编程经验的硕士生处理气候模型数据。这课听起来好诱人。一看行程表，我到时候没安排，那必须去了。&lt;/p&gt;
&lt;p&gt;R会如何应战？我发现还有个课程，叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25726&#34;&gt;“出版流程里的可重复计算研究”&lt;/a&gt;——这是R markdown的强项啊。此课时长3小时，前1.5小时是手把手教你用R, Python和ReproZip对地理空间数据进行分析，并撰写可重复性报告：后1.5小时是讨论，参与者有出版方、审稿人、教育工作者等各个领域的专家学者。看这架势，不知R跟Python是要对决还是要合作呢？真想去目睹这一盛况，但是，又跟我专业的分会场冲突了。真难取舍。&lt;/p&gt;
&lt;p&gt;除了明争，还有暗斗。星期四晚上有一门课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25343&#34;&gt;“一图胜千言：利用数据可视化进行科学交流”&lt;/a&gt;，讲的是如何制作高效精辟的数据图表，没有明说，但暗藏玄机，不知主角是R，还是Python，还是Matlab，还是别的新秀？&lt;/p&gt;
&lt;p&gt;除了R语言这种跟科研密切相关的技术活，居然还有一门课程叫做&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25170&#34;&gt;“WordPress写博客详解”&lt;/a&gt;，居然还有一门课程&lt;a href=&#34;http://meetingorganizer.copernicus.org/EGU2017/session/25580&#34;&gt;教你写诗&lt;/a&gt;，说什么博客和诗都能更好地传播科学……&lt;/p&gt;
&lt;p&gt;回头一看我的私人日程表，乖乖，这哪像个学术会议呀……&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的浏览器小图标</title>
      <link>http://www.pzhao.org/zh/post/hugo-icon/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-icon/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;img src=&#34;http://www.pzhao.org/img/myicon.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;网站图标，就是上图的这些东东，用浏览器打开网站时显示在地址栏的顶端。R blogdown安装的hugo-academic主题，默认图标是个蓝色学位帽，挺好看的，不改也行，只是如果大家都用的话，泯然众人，识别度就低了。&lt;/p&gt;
&lt;p&gt;改的方式很简单：将你自己的图标图片保存为.png格式，并命名为icon.png，替换&lt;code&gt;\themes\hugo-academic\static\img\icon.png&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;update: 更好的方案来自&lt;a href=&#34;https://disqus.com/home/discussion/pzhao/hugo/#comment-3287700912&#34;&gt;yang Cao的提议&lt;/a&gt;：把icon.png放在&lt;code&gt;static/img/&lt;/code&gt;，避免在更新themes时将自定义图标覆盖。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的RSS</title>
      <link>http://www.pzhao.org/zh/post/hugo-rss/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-rss/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;R blogdown 搭建的 Hugo 网站，小细节很多，可以一点一点完善，好在都不难搞定。今天添加了个RSS订阅按钮。&lt;/p&gt;
&lt;p&gt;自从 Google Reader 死后，我就觉得 RSS 没有多大趣味，就好像子期死后伯牙摔琴一样。但是，没有 RSS 提醒的话，还真不知道谁的博客更新了，于是就勉强用 feedly 凑合。眼看我的新网站构架基本完成，就在 feedly 里订阅了一下自己的网站，输入 &lt;code&gt;pzhao.org&lt;/code&gt;，发现没找到。嗯？研究一下才明白，我的主页完整地址是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个路径对应的本地文件夹下面，不仅有个&lt;code&gt;index.html&lt;/code&gt;，还有个&lt;code&gt;index.xml&lt;/code&gt;，后者就是 RSS 订阅的文件。所以，在feedly添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就把我的新网站添进去了。这是订阅全站。如果只想订阅其中的博客，或新发表的学术文章，或新做的报告，那么：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/post/index.xml
http://pzhao.org/zh/publication/index.xml
http://pzhao.org/zh/talk/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个RSS链接，我该放到主页的什么位置，来方便网友订阅呢？我决定放到我的头像下面的社交按钮里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.pzhao.org/img/social.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;头像下的社交按钮是在&lt;code&gt;config.toml&lt;/code&gt;里设置的，只需添加个&lt;code&gt;[[params.social]]&lt;/code&gt;就可以了，图标去&lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/icons/&#34;&gt;fa&lt;/a&gt;或&lt;a href=&#34;https://jpswalsh.github.io/academicons/&#34;&gt;ai&lt;/a&gt;两个包的主页找便是。 实在缺乏社交，只好把自己卡拉OK的录音和腾讯视频加进去凑数，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  [[params.social]]
    icon = &amp;quot;rss&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://www.pzhao.org/zh/index.xml&amp;quot;

  [[params.social]]
    icon = &amp;quot;music&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://kg.qq.com/node/personal?uid=649d9d85212c3489&amp;quot;

  [[params.social]]
    icon = &amp;quot;video-camera&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://v.qq.com/vplus/0f8190586a3f2f22a25e9827b38c171e&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>斜杠</title>
      <link>http://www.pzhao.org/zh/post/slash/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/slash/</guid>
      <description>&lt;p&gt;在我的新书在线试读章节，益辉同学提出了&lt;a href=&#34;http://dapengde.com/xuer/post/2017-04-15_blogdown/#comment-3258130059&#34; target=&#34;_blank&#34;&gt;一个话题&lt;/a&gt;，那就是斜杠。这个小东西已经困扰我多年了，事儿不大，我憋着一直没敢说，这回有益辉这么一位神级人肉盾牌罩着，就趁机吐个槽。&lt;/p&gt;

&lt;p&gt;斜杠就是&lt;code&gt;/&lt;/code&gt;，在英文叫做slash，或者叫forward slash，就是向前倾斜，而&lt;code&gt;\&lt;/code&gt;就是back slash，向后倾斜。只需想着&lt;code&gt;|&lt;/code&gt;是个直立的小人顺着文字的方向走，那么前倾
后倾一目了然，名字跟形状是吻合的。或者用“吉他法”，吉他手 &lt;em&gt;背&lt;/em&gt; 面对着我那就是&lt;em&gt;back&lt;/em&gt; slash（当然前提是右撇子）。无论如何，英文名称是合乎我的逻辑和理解力的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/CvOSYNzVMAAgXh_.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我不想提它的原因，是因为中文名字的翻译总让我糊涂。&lt;code&gt;/&lt;/code&gt;叫做斜杠或斜线，&lt;code&gt;\&lt;/code&gt;叫做反斜杠，我老是搞不清楚，写本帖的时候还要搜一下确认。凭什么呀？逻辑上这俩都是“斜”的啊？凭什么沿着从上往下从左往右的正常笔画顺序来写的&lt;code&gt;\&lt;/code&gt;叫做&lt;strong&gt;反&lt;/strong&gt;斜杠啊？人家反在哪里了？明明人家是顺的啊！我为&lt;code&gt;\&lt;/code&gt;叫屈。要是我翻译，就叫&lt;code&gt;/&lt;/code&gt;为“前俯”键，&lt;code&gt;\&lt;/code&gt;叫“后仰”键，信达雅兼顾。或者叫“右倾”键和“左倾”键更直接。但是怕被误会成政治倾向，那就叫“东倒”键“西歪”键，左西右东嘛。你们非要叫斜杠和反斜杠，不符合我的逻辑框架，老是得犹豫一下，还不确定谁正谁反，那干脆还是别提他们了。&lt;/p&gt;

&lt;p&gt;R 语言里，表示路径的时候，两级文件夹之间要用&lt;code&gt;/&lt;/code&gt;或&lt;code&gt;\\&lt;/code&gt;分隔，否则就报错。这个问题初学者常遇见，我特意写进了新书的“答疑”一章。以前我跑 windows 和 Ubuntu 双系统时还会考虑正反斜杠，现在只用 windows，如果在 R 代码里需要本地路径，我都是在totalcommander 里 ctrl + 3 来获取完整路径到剪切板，再粘贴到代码里。要改成&lt;code&gt;\\&lt;/code&gt;，只需在原有的一个&lt;code&gt;\&lt;/code&gt;后面再添一个就行了。而改成&lt;code&gt;/&lt;/code&gt;，我得先删掉原有的&lt;code&gt;\&lt;/code&gt;，再敲一个&lt;code&gt;/&lt;/code&gt;，工作量加倍。我就是懒&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;我用&lt;code&gt;\&lt;/code&gt;的另一个理由就比较小众了，一般人可能难以理解：我人在德语国家，用的是德语键盘。不是系统设置成德语键盘，而是实体德语键盘，见下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.smartkeyboardsolutions.com/images/KB_50029UB_German_zoom.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;p&gt;除了布局不同外，德语键盘比普通键盘多一个功能键叫 &lt;code&gt;AltGr&lt;/code&gt;，在空格键右边，用来输入更多特殊字符。德语键盘输入&lt;code&gt;/&lt;/code&gt;，需要双手互博，左手shift+右手7，或者找数字小键盘的除号，而输入&lt;code&gt;\&lt;/code&gt;只需一只手，右手拇指AltGr+中指ß就行了。那我当然倾向于&lt;code&gt;\&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这回亮出德语键盘，顺便解释一下为何我是R语言的箭头党。因为，德语键盘如果用等号&lt;code&gt;=&lt;/code&gt;作为赋值号，那么得按shift+0。为了代码整洁，前后还得各敲个空格。而箭头呢，在RStudio里按Alt+_，就是箭头，同时自动附送两个空格。那我当然用箭头，更不用提箭头是雄性的标志了。&lt;/p&gt;

&lt;p&gt;你瞧，一说起德语键盘，又有吐不完的槽，比如你会发现Z和Y两个键是跟英文键盘反着的。我对此不理解，就问德国人，德国人的回答是：你们英文键盘干嘛非要跟我们反着？你们英国人为啥非要靠左行驶？你们英国人为啥计量单位不用十进制？&amp;hellip;&amp;hellip;.&lt;/p&gt;

&lt;p&gt;一扯就又扯到二战去了。本帖就此打住。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题的多语言界面</title>
      <link>http://www.pzhao.org/zh/post/hugo-multilingual/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-multilingual/</guid>
      <description>&lt;p&gt;几年前我弄过&lt;a href=&#34;http://dapengde.com/archives/15265&#34; target=&#34;_blank&#34;&gt;双语博客&lt;/a&gt;， 后来放弃了，因为 WordPress 的双语方案有些遗留问题让我不爽，另外我没有精力写英文博客。现在，新网站是个科研网站，博客可以只出现在中文版里，而英文版只放自己的学术情况就行了，不用像博客更新那么频繁。所以，双语界面几乎是排在第一梯队的需求。&lt;/p&gt;

&lt;p&gt;我对Hugo的架构并不熟悉，原以为会很麻烦，结果弄一会儿就搞定了，原来这么简单。有些步骤在&lt;a href=&#34;http://dapengde.com/blogdown_demo_academic/post/getting-started/&#34; target=&#34;_blank&#34;&gt;主题的说明文档里&lt;/a&gt;提到了，但不够全。完整的步骤是这样的(看起来长，是因为我啰嗦，其实很快就能设置完)：&lt;/p&gt;

&lt;p&gt;1、开启双语。这需要在&lt;code&gt;config.toml&lt;/code&gt;里末尾找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这说明网站现在是英文的。在后面添加中文，也就是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;

[languages.zh]
  languageCode = &amp;quot;zh-cn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、设置默认语言。这需要在&lt;code&gt;config.toml&lt;/code&gt;里开头不远处找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Default language to use (if you setup multilingual support)
defaultContentLanguage = &amp;quot;zh&amp;quot;
defaultContentLanguageInSubdir = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原先是en，改成zh就可以让网站默认打开是中文。&lt;/p&gt;

&lt;p&gt;3、菜单栏增加中文界面。菜单栏就是网页顶部那一排按钮。这需要在&lt;code&gt;config.toml&lt;/code&gt;里找到菜单栏的设定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;Home&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面是默认语言英语的设置。在下面添加中文设置，格式是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[languages.zh.menu.main]]
  name = &amp;quot;主页&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，就把&lt;code&gt;Home&lt;/code&gt;按钮替换成了&lt;code&gt;主页&lt;/code&gt;按钮。其他按钮类似。&lt;/p&gt;

&lt;p&gt;4、其他地方的翻译。这需要把&lt;code&gt;\themes\hugo-academic\i18n\&lt;/code&gt; 文件夹拷贝到根目录，然后删掉里边不需要的语言文件。我们只保留&lt;code&gt;en.yaml&lt;/code&gt;和&lt;code&gt;zh.yaml&lt;/code&gt;。用文本编辑器打开&lt;code&gt;zh.yaml&lt;/code&gt;，把里边翻译不当的地方修改一下，比如 interests 翻译成了“兴趣爱好”，我改成了“研究领域”。&lt;/p&gt;

&lt;p&gt;5、新增帖子的双语。这个最好办，每次在&lt;code&gt;content\&lt;/code&gt;文件夹里新增文件时，如果要增加英文，就在文件扩展名前面加个&lt;code&gt;.en&lt;/code&gt;就行了。例如，我在&lt;code&gt;content\talk\&lt;/code&gt;下面新建了个&lt;code&gt;egu-2017.md&lt;/code&gt;，里面是中文，会出现在中文界面上。那么我想让这个项目也在英文版出现，只需把&lt;code&gt;egu-2017.md&lt;/code&gt;复制一份，命名为&lt;code&gt;egu-2017.en.md&lt;/code&gt;，那么这个项目就会在英文界面出现了。打开&lt;code&gt;egu-2017.en.md&lt;/code&gt;把里面的中文改成英文即可。&lt;/p&gt;

&lt;p&gt;6、在菜单栏增加中英文界面切换的按钮。只需在&lt;code&gt;config.toml&lt;/code&gt;里的菜单设置出增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;中文&amp;quot;
  url = &amp;quot;../zh&amp;quot;
  weight = 7
  
[[languages.zh.menu.main]]
  name = &amp;quot;EN&amp;quot;
  url = &amp;quot;../en&amp;quot;
  weight = 7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，双语界面全部搞定。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Word 永远转不成 Markdown</title>
      <link>http://www.pzhao.org/zh/post/word-never-markdown/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/word-never-markdown/</guid>
      <description>&lt;p&gt;R bookdown 用扩展的 Markdown 语法来写书，可以很方便地导出 Word 格式，虽然不完美，但只需稍微调一下样式，就是一个漂漂亮亮的文档。但是，如果在 Word 里做了修改，想转回 Markdown 该怎么办？&lt;/p&gt;

&lt;p&gt;多年来，我一直奢望能找到这样一款软件，哪怕是把 Word 转成 LaTeX 也行。随着时间的流逝，希望却是越来越渺茫; 我越来越深信，这样的软件过去不曾有，现在还没有，将来永远都不会有。因为，逻辑上是不可能实现的。&lt;/p&gt;

&lt;p&gt;Markdown 和 LaTeX 能相互转换，是因为两者都是标记语言，是逻辑上有对应关系的。Markdown 里的标题标记&lt;code&gt;#&lt;/code&gt;，翻译成 LaTeX 标记就是&lt;code&gt;\section{}&lt;/code&gt;; Markdown里的粗体标记&lt;code&gt;** **&lt;/code&gt;，翻译成 LaTeX 标记就是&lt;code&gt;\textbf{}&lt;/code&gt;。这就是所想即所得，大家虽然你说英语我说德语，但想法是一样的，只要有本字典，以词为单位互换，那么大体意思就能通。想完美的话，根据各自的语法规则调整调整就行了。&lt;/p&gt;

&lt;p&gt;但是 Word 不是这样的。你看见一个大字体加粗的词，看上去像是标题，乐观一点可能是用 Word 的标题样式设置的，一般情况下是用户把正文样式的文字直接点加粗换字号得到的，悲观一点说不定是插入的文本框或图片&amp;hellip;&amp;hellip;所见即所得，你永远猜不透一个大字体背后的逻辑是什么。这就好比你说英语而我画了一幅水墨山水画，你猜我是什么意思？你猜我大量的留白该翻译成那句英语？就像小说《三体》里说的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;教授挂出了两幅大图片，一幅是画面庞杂精细的《清明上河图》，另一幅是一张空旷的天空照片，空荡荡的蓝天上只有一缕似有似无的白云。教授问这两幅画中哪一幅所包含的信息量更大，答案是后者要比前者大一至两个数量级!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Word 的一个简单格式背后，藏着的信息量比 Markdown 大几个数量级，你怎么转换？&lt;/p&gt;

&lt;p&gt;Markdown 跟 LaTeX 对话，就像男人跟男人对话，说什么就是什么; Markdown 跟 Word 对话，就像男人跟女人对话，男人永远猜不透女人到底是哪层意思。所以还是歇了吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://s-media-cache-ak0.pinimg.com/564x/11/3c/a3/113ca3e206ea97715c6aff9133368f5b.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;p&gt;那么，难道 Markdown 永远理解不了 Word 吗？&lt;/p&gt;

&lt;p&gt;也不是。我觉得等人工智能成熟的时候就可以了。你只需吩咐一句“小A，把这篇Word 书稿转换成 Markdown，我要在 R bookdown 里修改”就行了。&lt;/p&gt;

&lt;p&gt;但人工智能可能会回答你：“主人，我已经全部帮你把书改好并且已经出版了。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题首页的文摘显示问题</title>
      <link>http://www.pzhao.org/zh/post/hugo-academic-summary/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-academic-summary/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;在 RStudio 里用 R blogdown 来维护网站时，可以通过点击工具栏的 Addins - New Post 来创建新帖子，很方便。但是，如果用的是 Hugo 的 academic 主题，那么创建的新帖子在网站首页会显示全文，不大好看，尤其是全文很长的时候，根本就不像个首页了。这是因为，academic 首页的 posts 模块默认显示文摘。如果没有为每篇帖子设置文摘，就会显示全文。而上面说的创建新帖的方法里，并没有设置文摘的选项。那么，文摘在哪里设置呢？&lt;/p&gt;
&lt;p&gt;直接说答案：手动在新帖的YAML文件头添加一行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;summary: &amp;quot;我的文摘别太长。&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;答案来自&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/21#issuecomment-269555683&#34;&gt;blogdown 项目主页&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;就这么个小问题，让我走了点弯路。我发现问题后，首先观察了一下主题自带的示例文档，文件头是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2016-04-20T11:00:00&amp;quot;
draft = false
tags = [&amp;quot;academic&amp;quot;, &amp;quot;hugo&amp;quot;]
title = &amp;quot;Customizing the homepage with widgets&amp;quot;
math = false
summary = &amp;quot;&amp;quot;&amp;quot;
Enable/disable and configure widgets to customize your homepage.
&amp;quot;&amp;quot;&amp;quot;
+++&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;跟 R blogdown 生成的 .md 和 .Rmd 文件的文件头不同，这个文件头居然是用前后各三个加号表示的。里面的&lt;code&gt;summary&lt;/code&gt;开始数三行，就是用来设置文摘的。&lt;/p&gt;
&lt;p&gt;于是我就把这三行拷贝粘贴到 .Rmd 文件里，当然是编译出错了。接着我想当然地把上面这段前后共六个加号的文件头拷贝粘贴到 .Rmd 里，仍然报错。问题搁置了几天，才想起去 blogdown 项目主页搜搜看，就找到了答案。&lt;/p&gt;
&lt;p&gt;永远记不住的教训：遇到问题，别瞎试。上网搜，你绝不是第一个遇到这个问题的人。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的 Disqus 加载问题</title>
      <link>http://www.pzhao.org/zh/post/hogo-disques-problem/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hogo-disques-problem/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;今天，复活节假期前夕，同事们都休假了。我虽然在办公室，却无心上班，发了一会儿呆，想想与其痛苦地工作，不如快乐地解决一下&lt;a href=&#34;http://pzhao.org&#34;&gt;新网站&lt;/a&gt;的一个小问题：disqus 评论框的加载。&lt;/p&gt;
&lt;p&gt;用 R blogdown 打建好站，disqus评论框就一直没成功加载过。后来听说是&lt;code&gt;config.toml&lt;/code&gt;里 &lt;code&gt;disqus shortname&lt;/code&gt;指的不是我的disqus ID，而是要&lt;a href=&#34;https://help.disqus.com/customer/portal/articles/466208-what-s-a-shortname-&#34;&gt;专门设置&lt;/a&gt;一下， 我说“啊,还有这事儿？”于是就设置了一下，但是仍然不能成功加载。这个问题放了几天，今天心血来潮&lt;a href=&#34;http://applyr.blogspot.co.at/2017/01/blogging-about-r-from-r-studio.html&#34;&gt;一搜&lt;/a&gt;，嗯，兴许是路径的问题，于是就把&lt;code&gt;config.toml&lt;/code&gt;开头的路径改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://www.pzhao.org&amp;quot;
# relativeurls = true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行R语言的建站函数：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::build_site(local=FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意！此处千万不要运行&lt;code&gt;blogdown::serve_site()&lt;/code&gt;，不然新生成的文件就又没法加载 Disqus 了。&lt;a href=&#34;http://applyr.blogspot.co.at/2017/01/blogging-about-r-from-r-studio.html&#34;&gt;网上说&lt;/a&gt;是&lt;code&gt;serve_site()&lt;/code&gt;忽略了&lt;code&gt;config.toml&lt;/code&gt;里的某些设置而造成的。我不懂，总之就是建站函数运行完就直接上传。&lt;/p&gt;
&lt;p&gt;然后GitHub同步，几秒钟后，Netlify上完成了更新，Disqus评论框就乖乖出现了。&lt;/p&gt;
&lt;p&gt;欢迎&lt;a href=&#34;http://pzhao.org/zh/post/hogo-disques-problem/&#34;&gt;来留言测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;啥，你看不见？嗯，听说好像是被墙了。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
