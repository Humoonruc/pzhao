<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogdown on Peng Zhao</title>
    <link>http://www.pzhao.org/zh/tags/blogdown/index.xml</link>
    <description>Recent content in Blogdown on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <atom:link href="/zh/tags/blogdown/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo 网站的浏览器小图标</title>
      <link>http://www.pzhao.org/zh/post/hugo-icon/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-icon/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;img src=&#34;http://www.pzhao.org/img/myicon.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;网站图标，就是上图的这些东东，用浏览器打开网站时显示在地址栏的顶端。R blogdown安装的hugo-academic主题，默认图标是个蓝色学位帽，挺好看的，不改也行，只是如果大家都用的话，泯然众人，识别度就低了。&lt;/p&gt;
&lt;p&gt;改的方式很简单：将你自己的图标图片保存为.png格式，并命名为icon.png，替换&lt;code&gt;\themes\hugo-academic\static\img\icon.png&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;update: 更好的方案来自&lt;a href=&#34;https://disqus.com/home/discussion/pzhao/hugo/#comment-3287700912&#34;&gt;yang Cao的提议&lt;/a&gt;：把icon.png放在&lt;code&gt;static/img/&lt;/code&gt;，避免在更新themes时将自定义图标覆盖。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的RSS</title>
      <link>http://www.pzhao.org/zh/post/hugo-rss/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-rss/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;R blogdown 搭建的 Hugo 网站，小细节很多，可以一点一点完善，好在都不难搞定。今天添加了个RSS订阅按钮。&lt;/p&gt;
&lt;p&gt;自从 Google Reader 死后，我就觉得 RSS 没有多大趣味，就好像子期死后伯牙摔琴一样。但是，没有 RSS 提醒的话，还真不知道谁的博客更新了，于是就勉强用 feedly 凑合。眼看我的新网站构架基本完成，就在 feedly 里订阅了一下自己的网站，输入 &lt;code&gt;pzhao.org&lt;/code&gt;，发现没找到。嗯？研究一下才明白，我的主页完整地址是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个路径对应的本地文件夹下面，不仅有个&lt;code&gt;index.html&lt;/code&gt;，还有个&lt;code&gt;index.xml&lt;/code&gt;，后者就是 RSS 订阅的文件。所以，在feedly添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就把我的新网站添进去了。这是订阅全站。如果只想订阅其中的博客，或新发表的学术文章，或新做的报告，那么：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://pzhao.org/zh/post/index.xml
http://pzhao.org/zh/publication/index.xml
http://pzhao.org/zh/talk/index.xml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个RSS链接，我该放到主页的什么位置，来方便网友订阅呢？我决定放到我的头像下面的社交按钮里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://www.pzhao.org/img/social.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;头像下的社交按钮是在&lt;code&gt;config.toml&lt;/code&gt;里设置的，只需添加个&lt;code&gt;[[params.social]]&lt;/code&gt;就可以了，图标去&lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/icons/&#34;&gt;fa&lt;/a&gt;或&lt;a href=&#34;https://jpswalsh.github.io/academicons/&#34;&gt;ai&lt;/a&gt;两个包的主页找便是。 实在缺乏社交，只好把自己卡拉OK的录音和腾讯视频加进去凑数，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  [[params.social]]
    icon = &amp;quot;rss&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://www.pzhao.org/zh/index.xml&amp;quot;

  [[params.social]]
    icon = &amp;quot;music&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://kg.qq.com/node/personal?uid=649d9d85212c3489&amp;quot;

  [[params.social]]
    icon = &amp;quot;video-camera&amp;quot;
    icon_pack = &amp;quot;fa&amp;quot;
    link = &amp;quot;http://v.qq.com/vplus/0f8190586a3f2f22a25e9827b38c171e&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题的多语言界面</title>
      <link>http://www.pzhao.org/zh/post/hugo-multilingual/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-multilingual/</guid>
      <description>&lt;p&gt;几年前我弄过&lt;a href=&#34;http://dapengde.com/archives/15265&#34; target=&#34;_blank&#34;&gt;双语博客&lt;/a&gt;， 后来放弃了，因为 WordPress 的双语方案有些遗留问题让我不爽，另外我没有精力写英文博客。现在，新网站是个科研网站，博客可以只出现在中文版里，而英文版只放自己的学术情况就行了，不用像博客更新那么频繁。所以，双语界面几乎是排在第一梯队的需求。&lt;/p&gt;

&lt;p&gt;我对Hugo的架构并不熟悉，原以为会很麻烦，结果弄一会儿就搞定了，原来这么简单。有些步骤在&lt;a href=&#34;http://dapengde.com/blogdown_demo_academic/post/getting-started/&#34; target=&#34;_blank&#34;&gt;主题的说明文档里&lt;/a&gt;提到了，但不够全。完整的步骤是这样的(看起来长，是因为我啰嗦，其实很快就能设置完)：&lt;/p&gt;

&lt;p&gt;1、开启双语。这需要在&lt;code&gt;config.toml&lt;/code&gt;里末尾找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这说明网站现在是英文的。在后面添加中文，也就是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[languages.en]
  languageCode = &amp;quot;en-us&amp;quot;

[languages.zh]
  languageCode = &amp;quot;zh-cn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、设置默认语言。这需要在&lt;code&gt;config.toml&lt;/code&gt;里开头不远处找到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Default language to use (if you setup multilingual support)
defaultContentLanguage = &amp;quot;zh&amp;quot;
defaultContentLanguageInSubdir = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原先是en，改成zh就可以让网站默认打开是中文。&lt;/p&gt;

&lt;p&gt;3、菜单栏增加中文界面。菜单栏就是网页顶部那一排按钮。这需要在&lt;code&gt;config.toml&lt;/code&gt;里找到菜单栏的设定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;Home&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面是默认语言英语的设置。在下面添加中文设置，格式是&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[languages.zh.menu.main]]
  name = &amp;quot;主页&amp;quot;
  url = &amp;quot;#about&amp;quot;
  weight = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，就把&lt;code&gt;Home&lt;/code&gt;按钮替换成了&lt;code&gt;主页&lt;/code&gt;按钮。其他按钮类似。&lt;/p&gt;

&lt;p&gt;4、其他地方的翻译。这需要把&lt;code&gt;\themes\hugo-academic\i18n\&lt;/code&gt; 文件夹拷贝到根目录，然后删掉里边不需要的语言文件。我们只保留&lt;code&gt;en.yaml&lt;/code&gt;和&lt;code&gt;zh.yaml&lt;/code&gt;。用文本编辑器打开&lt;code&gt;zh.yaml&lt;/code&gt;，把里边翻译不当的地方修改一下，比如 interests 翻译成了“兴趣爱好”，我改成了“研究领域”。&lt;/p&gt;

&lt;p&gt;5、新增帖子的双语。这个最好办，每次在&lt;code&gt;content\&lt;/code&gt;文件夹里新增文件时，如果要增加英文，就在文件扩展名前面加个&lt;code&gt;.en&lt;/code&gt;就行了。例如，我在&lt;code&gt;content\talk\&lt;/code&gt;下面新建了个&lt;code&gt;egu-2017.md&lt;/code&gt;，里面是中文，会出现在中文界面上。那么我想让这个项目也在英文版出现，只需把&lt;code&gt;egu-2017.md&lt;/code&gt;复制一份，命名为&lt;code&gt;egu-2017.en.md&lt;/code&gt;，那么这个项目就会在英文界面出现了。打开&lt;code&gt;egu-2017.en.md&lt;/code&gt;把里面的中文改成英文即可。&lt;/p&gt;

&lt;p&gt;6、在菜单栏增加中英文界面切换的按钮。只需在&lt;code&gt;config.toml&lt;/code&gt;里的菜单设置出增加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[menu.main]]
  name = &amp;quot;中文&amp;quot;
  url = &amp;quot;../zh&amp;quot;
  weight = 7
  
[[languages.zh.menu.main]]
  name = &amp;quot;EN&amp;quot;
  url = &amp;quot;../en&amp;quot;
  weight = 7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，双语界面全部搞定。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题首页的文摘显示问题</title>
      <link>http://www.pzhao.org/zh/post/hugo-academic-summary/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-academic-summary/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;在 RStudio 里用 R blogdown 来维护网站时，可以通过点击工具栏的 Addins - New Post 来创建新帖子，很方便。但是，如果用的是 Hugo 的 academic 主题，那么创建的新帖子在网站首页会显示全文，不大好看，尤其是全文很长的时候，根本就不像个首页了。这是因为，academic 首页的 posts 模块默认显示文摘。如果没有为每篇帖子设置文摘，就会显示全文。而上面说的创建新帖的方法里，并没有设置文摘的选项。那么，文摘在哪里设置呢？&lt;/p&gt;
&lt;p&gt;直接说答案：手动在新帖的YAML文件头添加一行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;summary: &amp;quot;我的文摘别太长。&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;答案来自&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/21#issuecomment-269555683&#34;&gt;blogdown 项目主页&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;就这么个小问题，让我走了点弯路。我发现问题后，首先观察了一下主题自带的示例文档，文件头是这样的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2016-04-20T11:00:00&amp;quot;
draft = false
tags = [&amp;quot;academic&amp;quot;, &amp;quot;hugo&amp;quot;]
title = &amp;quot;Customizing the homepage with widgets&amp;quot;
math = false
summary = &amp;quot;&amp;quot;&amp;quot;
Enable/disable and configure widgets to customize your homepage.
&amp;quot;&amp;quot;&amp;quot;
+++&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;跟 R blogdown 生成的 .md 和 .Rmd 文件的文件头不同，这个文件头居然是用前后各三个加号表示的。里面的&lt;code&gt;summary&lt;/code&gt;开始数三行，就是用来设置文摘的。&lt;/p&gt;
&lt;p&gt;于是我就把这三行拷贝粘贴到 .Rmd 文件里，当然是编译出错了。接着我想当然地把上面这段前后共六个加号的文件头拷贝粘贴到 .Rmd 里，仍然报错。问题搁置了几天，才想起去 blogdown 项目主页搜搜看，就找到了答案。&lt;/p&gt;
&lt;p&gt;永远记不住的教训：遇到问题，别瞎试。上网搜，你绝不是第一个遇到这个问题的人。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 网站的 Disqus 加载问题</title>
      <link>http://www.pzhao.org/zh/post/hogo-disques-problem/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hogo-disques-problem/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;今天，复活节假期前夕，同事们都休假了。我虽然在办公室，却无心上班，发了一会儿呆，想想与其痛苦地工作，不如快乐地解决一下&lt;a href=&#34;http://pzhao.org&#34;&gt;新网站&lt;/a&gt;的一个小问题：disqus 评论框的加载。&lt;/p&gt;
&lt;p&gt;用 R blogdown 打建好站，disqus评论框就一直没成功加载过。后来听说是&lt;code&gt;config.toml&lt;/code&gt;里 &lt;code&gt;disqus shortname&lt;/code&gt;指的不是我的disqus ID，而是要&lt;a href=&#34;https://help.disqus.com/customer/portal/articles/466208-what-s-a-shortname-&#34;&gt;专门设置&lt;/a&gt;一下， 我说“啊,还有这事儿？”于是就设置了一下，但是仍然不能成功加载。这个问题放了几天，今天心血来潮&lt;a href=&#34;http://applyr.blogspot.co.at/2017/01/blogging-about-r-from-r-studio.html&#34;&gt;一搜&lt;/a&gt;，嗯，兴许是路径的问题，于是就把&lt;code&gt;config.toml&lt;/code&gt;开头的路径改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://www.pzhao.org&amp;quot;
# relativeurls = true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行R语言的建站函数：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::build_site(local=FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意！此处千万不要运行&lt;code&gt;blogdown::serve_site()&lt;/code&gt;，不然新生成的文件就又没法加载 Disqus 了。&lt;a href=&#34;http://applyr.blogspot.co.at/2017/01/blogging-about-r-from-r-studio.html&#34;&gt;网上说&lt;/a&gt;是&lt;code&gt;serve_site()&lt;/code&gt;忽略了&lt;code&gt;config.toml&lt;/code&gt;里的某些设置而造成的。我不懂，总之就是建站函数运行完就直接上传。&lt;/p&gt;
&lt;p&gt;然后GitHub同步，几秒钟后，Netlify上完成了更新，Disqus评论框就乖乖出现了。&lt;/p&gt;
&lt;p&gt;欢迎&lt;a href=&#34;http://pzhao.org/zh/post/hogo-disques-problem/&#34;&gt;来留言测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;啥，你看不见？嗯，听说好像是被墙了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R blogdown 搭建个人博客或科研网站</title>
      <link>http://www.pzhao.org/zh/post/r-blogdown/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/r-blogdown/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;本文收录在《学 R 》一书的附录中。&lt;/p&gt;
&lt;p&gt;互联网时代有个自己的网站，就好像真实世界里有了自己的房子（服务器）和固定地址（域名）；自我介绍时附上自己的网站，就像生活里邀请朋友来访或者职场上递上名片，都甚为方便。然而，建立一个网站并不容易，涉及诸多领域的知识和技能，门槛比较高。好在，我们有万能的R语言，搭建网站只需几分钟，而并不需要多少网络知识。你甚至不用懂 R 语言是什么，照我下面说的做就行，包教包会，学不会免费再教。&lt;/p&gt;
&lt;p&gt;这里，我提供两个示范，演示如何使用 R 语言的 blogdown 扩展包&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;，用来搭建一个&lt;a href=&#34;http://dapengde.com/blogdown_demo_default/&#34;&gt;个人博客&lt;/a&gt;和一个&lt;a href=&#34;http://dapengde.com/blogdown_demo_academic/&#34;&gt;科研小组网站&lt;/a&gt;。截至本文成稿之日，blogdown 含苞待放，尚未正式发布，但是已经能够正常安装使用了。我们来尝尝鲜，提前一睹她的芳容。&lt;/p&gt;
&lt;div id=&#34;r-blogdown-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R blogdown 简介和安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;R blogdown 是什么&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R语言的一个扩展包，用来制作网站的工具。&lt;/li&gt;
&lt;li&gt;可以用非常简洁的方式快速搭建静态网页构成的网站。&lt;/li&gt;
&lt;li&gt;虽然名字里有“博客”（blog）字样，但并不仅限于博客。非常适合搭建一个科研小组的展示窗口。&lt;/li&gt;
&lt;li&gt;基于 markdown 扩展语法，可以在网页中方便地插入图表、脚注、数学公式、R 代码等元素。&lt;/li&gt;
&lt;li&gt;非常容易将 bookdown 生成的论文转化成网页展示。&lt;/li&gt;
&lt;li&gt;非常易于维护，迁移，备份。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本书的官方网站就是用 R blogdown 搭建的。网站里给大家提供的 R 示例代码、试读章节、勘误表等，都是直接从书稿中拷贝粘贴到文本文件里，然后运行一下 blogdown 的指令，网站就自动更新了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;blogdown 的背景平台是 R 语言，用户界面首选 RStudio ，产生的网站框架是 Hugo ，掰手指头数一数，要安装4样东西，略显繁琐，但并不难，一劳永逸。安装方式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R。去R的服务器&lt;a href=&#34;https://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt;，点击Download R for Windows（其他操作系统的用户请自便），在打开的新网页最上方点击&lt;code&gt;base&lt;/code&gt;，就找到下载链接了。下载完毕后安装，一路“下一步”的傻瓜式安装即可。&lt;/li&gt;
&lt;li&gt;RStudio。去&lt;a href=&#34;https://www.rstudio.com/&#34;&gt;官网&lt;/a&gt;下载安装文件运行即可。&lt;/li&gt;
&lt;li&gt;blogdown。运行RStudio，在左上面板的代码窗口输入并运行以下代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if(!require(devtools)) install.packages(&amp;#39;devtools&amp;#39;)
devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解释一下：由于 blogdown 目前只发布到了 GitHub 服务器上，尚未发布到CRAN，所以上面第一条代码先安装开发工具 &lt;code&gt;devtools&lt;/code&gt; 包，第二行用这个包的&lt;code&gt;install_github()&lt;/code&gt; 函数从 GitHub 安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hugo 框架。在 RStudio 左上面板的代码窗口输入并运行以下代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::install_hugo()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完毕。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-r-blogdown-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;用 R blogdown 搭建个人博客&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;创建示例网站&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在自己博客建立了个子站，作为 R blogdown &lt;a href=&#34;http://dapengde.com/blogdown_demo_default/&#34;&gt;个人博客的示例&lt;/a&gt;。下面我们看看这个博客是如何创建的。&lt;/p&gt;
&lt;p&gt;首先，在你的电脑里新建一个文件夹，准备存放网站文件，假定是&lt;code&gt;c:\blogdown_default&lt;/code&gt;，那么创建网站只需在RStudio里运行两行代码：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd(&amp;#39;c:\\blogdown_default&amp;#39;)
blogdown::new_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;示例网站搭建完毕。对，就这么简单！&lt;/p&gt;
&lt;p&gt;去&lt;code&gt;c:\blogdown_default&lt;/code&gt;看看吧，出现了好多新文件夹。别的不用管也不用动，只注意&lt;code&gt;content\&lt;/code&gt; 和&lt;code&gt;public\&lt;/code&gt; 这两个就行了。打开 &lt;code&gt;public\index.html&lt;/code&gt;，这就是网站的主页。随便点开上面的几个链接试试看。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发布到网上&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面搭建的网站，目前只存在于本地电脑里，下面我们发布到网上。&lt;/p&gt;
&lt;p&gt;如果你像我一样，已经有了自己租用的服务器，上面有了WordPress博客，那最简单，在服务器的&lt;code&gt;public_html\&lt;/code&gt;文件夹下面创建一个新文件夹，例如叫做&lt;code&gt;test&lt;/code&gt;，那么只需将刚刚在本地新建的博客或科研网站的 &lt;code&gt;public&lt;/code&gt;文件夹里所有文件上传到服务器的&lt;code&gt;test&lt;/code&gt; 文件夹即可。访问&lt;code&gt;你的域名/test&lt;/code&gt;，就可以看到新网站了！&lt;/p&gt;
&lt;p&gt;如果你没有自己的服务器，那么最简单的是在 &lt;a href=&#34;https://www.netlify.com/&#34;&gt;netlify&lt;/a&gt; 免费注册个账号，然后按提示将你本地的 &lt;code&gt;public\&lt;/code&gt; 文件夹拖进去，会自动布署，等几分钟，就可以访问了。你可以免费申请个子域名，也可以买个自己的域名绑定上去。我已经申请了一个，打算作为&lt;a href=&#34;http://zhao.netlify.com/&#34;&gt;自己的科研主页&lt;/a&gt;。这是从blogdown 创建的科研网站示例（创建方法见下文）修改而来的，而且还没改完，里面的英文内容都是示例里别人的工作。&lt;/p&gt;
&lt;p&gt;那么，如何将自动生成的网站更新成自己的，并添加新内容呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网站更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前文提醒你注意，新建的网站文件夹里有个&lt;code&gt;content\&lt;/code&gt;文件夹。这里就是更新网站内容的地方。你只需用记事本或RStudio，打开其中的&lt;code&gt;.md&lt;/code&gt;或 &lt;code&gt;.Rmd&lt;/code&gt; 文件，修改成自己的内容后保存，然后运行建站函数：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::build_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，&lt;code&gt;public\&lt;/code&gt; 就自动更新了，再发布到网上即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.md&lt;/code&gt;或 &lt;code&gt;.Rmd&lt;/code&gt; 文件使用 markdown语法，见我以前写的帖子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dapengde.com/archives/17033&#34;&gt;九分钟学会 Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dapengde.com/archives/17712&#34;&gt;精品网络应用：Markdown篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dapengde.com/archives/19141&#34;&gt;R bookdown 快速入门和语法速查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果要发表新帖子，那么有两种方式最简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一：将原有的&lt;code&gt;.md&lt;/code&gt;或 &lt;code&gt;.Rmd&lt;/code&gt;拷贝粘贴，改一下标题和内容即可；&lt;/li&gt;
&lt;li&gt;方法二：在RSudio代码窗口点击 Addins- New Post， 按提示填写即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写完保存，运行建站函数，上传。完毕。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动同步&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也许你嫌每次更新上传太麻烦。我们当然可以选择自动同步。&lt;/p&gt;
&lt;p&gt;如果网站搭建在Netlify，那么只需做三件事：&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;下载并安装 GitHub 客户端，申请个免费账号，并创建一个项目，例如叫做myweb，将前面我们举例的&lt;code&gt;c:\blogdown_default&lt;/code&gt; 文件夹设为项目的文件夹，并同步到云端。&lt;/li&gt;
&lt;li&gt;在你的Netlify设置里，设为自动跟你的GitHub里的myweb项目同步，同步内容是 &lt;code&gt;public&lt;/code&gt;文件夹。&lt;/li&gt;
&lt;li&gt;以后每次更新并运行完建站函数后，在GitHub客户端同步一下即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;-r-blogdown-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;用 R blogdown 搭建科研网站&lt;/h2&gt;
&lt;p&gt;上文说到，我申请了一个Netlify免费账号，并且创建了&lt;a href=&#34;http://zhao.netlify.com/&#34;&gt;自己的科研主页&lt;/a&gt;，是从blogdown 创建的科研网站示例修改而来的。这个示例的本来面貌可以来我博客上看：&lt;a href=&#34;http://dapengde.com/blogdown_demo_academic/&#34;&gt;科研网站的示例&lt;/a&gt;。这个科研网站的构架比个人博客复杂，有简介、新闻、发表论文、科研项目等基本模块，还可以根据需要新增，非常适合作为科研小组的展示窗口。&lt;/p&gt;
&lt;p&gt;这个网站的搭建也很简单，跟个人博客类似。在你的电脑里新建文件夹，比如 &lt;code&gt;c:\blogdown_academic&lt;/code&gt;，在RStudio里运行两行代码：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setwd(&amp;#39;c:\\blogdown_default&amp;#39;)
blogdown::new_site(theme=&amp;#39;gcushen/hugo-academic&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;去&lt;code&gt;c:\blogdown_academic&lt;/code&gt; 看看吧，科研网站搭建完毕！&lt;/p&gt;
&lt;p&gt;但是，如果你这时双击打开&lt;code&gt;c:\blogdown_academic\public\index.html&lt;/code&gt; 的话，会发现界面并不好看（css未载入），并且点击页面的那些链接也无效。别急，我们再做个小改动就行了。&lt;/p&gt;
&lt;p&gt;用记事本将&lt;code&gt;c:\blogdown_academic\config.toml&lt;/code&gt; 打开，删掉第一行，然后添加下面两行并保存文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;/&amp;quot;
relativeurls = true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在RStudio运行建站函数&lt;code&gt;build_site()&lt;/code&gt;：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::build_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;好了，现在可以打开&lt;code&gt;c:\blogdown_academic\public\index.html&lt;/code&gt; 正常浏览了！&lt;/p&gt;
&lt;p&gt;解释一下：config.toml 文件里的默认设置不支持本地浏览，而且发布到网上时需要布署。这里改成相对路径&lt;code&gt;relativeurls = true&lt;/code&gt;，就可以直接在本地打开 index.html 浏览了。&lt;/p&gt;
&lt;p&gt;其他的发布、更新、同步，跟前文讲述的一致，这里不再赘述。需要特别指出的是，&lt;strong&gt;科研网站&lt;/strong&gt;示例的首页，个人信息需要在前面提到的&lt;code&gt;config.toml&lt;/code&gt;里的&lt;code&gt;[params]&lt;/code&gt; 修改。&lt;/p&gt;
&lt;p&gt;这里的科研网站示例，使用的是Hugo-academic主题。Hugo还有很多其他主题可以使用。我们相信，只要深入研究一下，一定可以搭建让人更合心意的网站。同时，blogdown也在进一步完善中，让我们期待她的盛装绽放吧！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Yihui Xie. blogdown: Create Blogs and Websites with R Markdown. R package version 0.0.24.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
