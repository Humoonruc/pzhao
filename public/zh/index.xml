<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peng Zhao on Peng Zhao</title>
    <link>http://www.pzhao.org/zh/index.xml</link>
    <description>Recent content in Peng Zhao on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/zh/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>我把青春献给你：排版 (1)</title>
      <link>http://www.pzhao.org/zh/post/latex-and-me-1/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-and-me-1/</guid>
      <description>&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2017 年快要过去了。如果剩下这四十天不出什么幺蛾子的话，我今年的最蠢事情排行榜，基本是板上钉钉。名列榜首的，就是过早给《学 R》一书大肆宣传。跟罗永浩当年头一回卖锤子手机一样一样的，还没量产，就先吹牛，结果吹破了，打了自己的脸。&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://5b0988e595225.cdn.sohucs.com/images/20170715/d6a28e43a55b48128265e4029fb4e6c2.gif&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;其实，这本书早在今年 6 月就写完了，7 月做了最后一次修改。当时书号已经批了，封面也有了模样，我以为马上就能印出来了，于是告诉了我能告诉的每一个朋友。朋友们都很讲义气，把白花花的银子拍在桌上，就等着付钱买了。当了教授的老同学说：放心，到时候我送给我的学生人手一本！&lt;/p&gt;
&lt;p&gt;谁知道，一晃四个多月过去了，书还没出来。我的前期宣传算是白费了。让人欣慰的是，直到现在，仍然有铁杆粉丝惦记着我，时不时发来鼓励的短信：“喂，你那书烂尾了吧？啊哈哈哈哈~~~~”&lt;/p&gt;
&lt;p&gt;谢谢。&lt;/p&gt;
&lt;p&gt;那么，四个月里，这书干嘛去了？&lt;/p&gt;
&lt;p&gt;在排版。&lt;/p&gt;
&lt;p&gt;《学 R》这本书，一直排不出理想的模样。&lt;/p&gt;
&lt;p&gt;四个月是在反反复复修改排版里度过的。一直拖到上周，我们仍然看不到任何排版成功的迹象。2017 年所剩无几的耐心消耗殆尽，一咬牙一跺脚，我们决定壮士断腕。合作作者 Y 从出版社讨来排版文件，并且自己花钱购买了专业软件，自己排；我同时用 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 排，齐头并进。谁先排好就用谁的。我们谁都不想再拖，再拖就真的要吐血了。&lt;/p&gt;
&lt;p&gt;当做出这个决定的第二天，Y 看到我用 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 做出的 pdf 书稿小样得到了印刷厂的认可，就放下了手里的专业软件，决定不干了：“&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 真厉害，有空我学一下……”&lt;/p&gt;
&lt;p&gt;我立马拦住：“最好别去学。这个坑太大。一入 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;，坑深似海。”&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;出版社负责录入和排版的工作，简称“录排”。&lt;/p&gt;
&lt;p&gt;这四个月来，录排可谓兢兢业业，全心全力为《学 R》排版。可惜，辛苦不一定有回报，排出的书稿，一直有层出不穷的问题。&lt;/p&gt;
&lt;p&gt;比如说，丢失公式和特殊字符。原稿里的诸如 &lt;em&gt;R&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt;， &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; 等都莫名其妙消失了。&lt;/p&gt;
&lt;p&gt;比如说，字体。原稿里的代码都是用等宽字体表示的，录排之后都成了跟正文一样的字体。&lt;/p&gt;
&lt;p&gt;比如说，标点符号。原稿里的所有标点符号，包括代码里的逗号、引号、括号、冒号，都变成了中文标点符号。加上非等宽字体，书里的代码惨不忍睹。&lt;/p&gt;
&lt;p&gt;最要命的是，原稿里的很多空格也都不翼而飞。比如录排稿：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/xuer1.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;是不是一头雾水？实际上原稿是：&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.pzhao.org/img/xuer2.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;每次从录排稿里挑问题，都恨不得把一双近视眼珠子抠出来，再拿着放大镜逐字逐句看。后来，索性放弃了很多想法。比如说，原先代码是彩色的，得知需要录排逐个字符手动修改，算了不要了；原先打算增加个小贴士目录，得知需要排完页码手动添加，算了不要了；原先打算给常用函数做个索引，方便读者从书里找示例，看样子也得手动做，算了不要了……&lt;/p&gt;
&lt;p&gt;即便如此，每次的排版仍然会出现奇奇怪怪的问题。如此往返三次，《学 R》这本书我已经读得想呕吐了。&lt;/p&gt;
&lt;p&gt;我百思不得其解：这到底是怎么回事？&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;来回折磨了四个月。终于， Y 试用了一下录排用的排版软件—— Adobe InDesign，俗称 ID，是国内出版业主流的专业排版软件。&lt;/p&gt;
&lt;p&gt;Y 立刻对我说：“我明白问题出在哪里了！”&lt;/p&gt;
&lt;p&gt;原来，录排是把我们提交的原稿，转成了 txt 文本文件；书里的插图，全部转成了 tif 图片。然后，把这些素材导入 ID，然后手动按照原稿 pdf 的样子做调整。&lt;/p&gt;
&lt;p&gt;这正是录排一贯的工作流程。&lt;/p&gt;
&lt;p&gt;这个流程，对文学类书籍没有问题。一篇小说，重要的是内容，不是格式；只要把文字分好段，就不会有大错。&lt;/p&gt;
&lt;p&gt;然而，这个流程用在《学 R》 这本书上，就是个灾难。因为这本书，内容和格式，都很重要。&lt;/p&gt;
&lt;p&gt;然而，这一点，录排不知道。&lt;/p&gt;
&lt;p&gt;然而，我们不知道录排不知道。&lt;/p&gt;
&lt;p&gt;然而，录排不知道我们不知道录排不知道。&lt;/p&gt;
&lt;p&gt;四个月的大好青春，就是这样搭进去的。&lt;/p&gt;
&lt;p&gt;对此我感到抱歉，让录排白白花了那么多时间和精力，我的吹毛求疵一定让录排很受折磨。同时我也感到遗憾，如果重来一次，这个坑恐怕仍然绕不开。&lt;/p&gt;
&lt;p&gt;4，&lt;/p&gt;
&lt;p&gt;好在我们及时止损了。&lt;/p&gt;
&lt;p&gt;上周，我们从头做起，不仅四个月来积攒的问题一扫而空，而且彩色代码的格式保住了，索引也作出来了。&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 在这里显示了无与伦比的强大力量。以致于 Y 饶有兴趣地说：“&lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 真厉害，有空我学一下……”&lt;/p&gt;
&lt;p&gt;我立马拦住：“最好别去学。这个坑太大。一入 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;，坑深似海。”&lt;/p&gt;
&lt;p&gt;如果你以为本文是为 &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt; 做广告，呵呵，那你就错了。为啥？下回再说。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R bookdown 的小技巧</title>
      <link>http://www.pzhao.org/zh/post/bookdown-tips/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-tips/</guid>
      <description>&lt;p&gt;本帖用来收集整理 R 语言 bookdown 扩展包的一些使用技巧。有些是在网上搜来的，有些是我在别处讨论得来的，有些是我尚未发布的，都写在这里备用。&lt;/p&gt;
&lt;div id=&#34;-markdown-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;输出 Markdown 文件&lt;/h2&gt;
&lt;p&gt;使用 bookdown 编译 Rmd 文件，可以得到的输出格式五花八门。对此，&lt;a href=&#34;https://bookdown.org/yihui/bookdown/output-formats.html&#34;&gt;bookdown 的官方文档&lt;/a&gt; 有详细介绍，包括 github， pdf，epub，word，html 单个文档等，偏偏没有提 markdown 格式。&lt;/p&gt;
&lt;p&gt;其实，markdown 文件是有的，在编译过程里作为过渡文档存在，编译结束后自动删除。编译顺利的时候，在文件夹里“刷”地闪一下就消失了。我以前的做法是“快手”，在它消失之前迅速用 notepad++ 打开，就存下来了。这显然不是办法，凑合着过日子而已。&lt;/p&gt;
&lt;p&gt;一般来说，如果仅仅是使用 rmarkdown，只需在 yaml 设置里声明一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;output:
  md_document:
    variant: markdown_github&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后 knit 一下，就可以得到 markdown 文件了。想当然地，我把这段代码加到了 bookdown 的yaml 里，却得到警告，说 bookdown 不支持。&lt;/p&gt;
&lt;p&gt;这事儿被我搁置了很久，最后我终于在 bookdown 的项目主页找到了&lt;a href=&#34;https://github.com/rstudio/bookdown/issues/317#issuecomment-275262486&#34;&gt;答案&lt;/a&gt;：参数 &lt;code&gt;clean = FALSE&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bookdown::render_book(&#39;index.Rmd&#39;, clean = FALSE)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我很喜欢 markdown 格式。我用 bookdown 写论文，Rmd 的正文里插了不少诸如 &lt;code&gt;r pi&lt;/code&gt; 这样的调用。跟合作作者讨论时，看 Rmd 文件吧不直观，看 html 吧不方便修改，md 大概是最好的格式。&lt;/p&gt;
&lt;p&gt;bookdown 的编译，我习惯按快捷键 ctrl+alt+b，或者点击右上方面板的 Build 按钮编译的，输出格式取决于 yaml。这样就得不到 md 文件。要想得到 md 文件，看来以后得改成命令行编译了。&lt;/p&gt;
&lt;p&gt;我的 &lt;a href=&#34;https://github.com/pzhaonet/bookdownplus&#34;&gt;bookdownplus 最新版本 v1.3.1&lt;/a&gt; ，把 &lt;code&gt;clean&lt;/code&gt; 参数默认设置为 FALSE，并且在编译后把用不着的 .lol 文件删除。这样，新用户第一次用bookdown 时，就又多得到一种漂亮的输出结果。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pdf-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;pdf 的参考文献引用格式&lt;/h2&gt;
&lt;p&gt;bookdown 里引用参考文献，在 bookdown 的官方文档里有说明。例如标识为’zhao2017’ 的 bib 条目，引用的方式和输出结果为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@zhao2017&lt;/code&gt;，得到 &lt;code&gt;Zhao (2017)&lt;/code&gt;， 相当于 LaTeX 里的 &lt;code&gt;\citet{zhao2017}&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[@zhao2017]&lt;/code&gt; ，得到 &lt;code&gt;(Zhao, 2017)&lt;/code&gt;， 相当于 LaTeX 里的 &lt;code&gt;\citep{zhao2017}&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是，如果有多篇参考文献连续引用（我经常需要），就出问题了。我想得到的是 &lt;code&gt;(Xie, 2016; Zhao, 2017)&lt;/code&gt;，但无论输入 &lt;code&gt;[@zhao2017][@xie2016]&lt;/code&gt;, 或是&lt;code&gt;[@zhao2017 @xie2016]&lt;/code&gt;，或是&lt;code&gt;(@zhao2017; @xie2016)&lt;/code&gt;，都不管用。&lt;/p&gt;
&lt;p&gt;管用的方法是使用 LaTeX 方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\citep{zhao2017,xie2016}&lt;/code&gt;，得到&lt;code&gt;(Xie, 2016; Zhao, 2017)&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新：经 Yihui 提示，应当用 &lt;code&gt;[@zhao2017; @xie2016]&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-pdf-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;往 pdf 里插入网络图片&lt;/h2&gt;
&lt;p&gt;假定往文档里插入下面这张网络图片：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url &amp;lt;- &#39;https://bookdown.org/yihui/bookdown/images/cover.jpg&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般有两种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;knitr::include_graphics(url)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;![](https://bookdown.org/yihui/bookdown/images/cover.jpg)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;得到的网页输出格式里没有任何问题，但是 pdf 却不行。&lt;/p&gt;
&lt;p&gt;这是因为，生成 pdf 的 LaTeX 不支持插入网络图片。LaTeX 界的解决办法是，先用 &lt;code&gt;wget&lt;/code&gt; 把网络图片下载到本地，再插入到tex 文档里。那么，我在 bookdown 里也如法炮制：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;download.file(url,&amp;#39;cover.jpg&amp;#39;, mode = &amp;#39;wb&amp;#39;)
knitr::include_graphics(&amp;#39;cover.jpg&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这事儿其实已经解决了，但是不够完美。如果用 bookdown 同时输出网页格式和 pdf，那么网页格式的文档里插入的图片是本地图片；如果发布到 bookdown.org，那么插入的图片来自 bookdown.org。两者都不是该图片的原始地址。有点资源浪费。&lt;/p&gt;
&lt;p&gt;完美的解决方式来自&lt;a href=&#34;https://stackoverflow.com/questions/46331896/how-can-i-insert-an-image-from-internet-to-the-pdf-file-produced-by-r-bookdown-i&#34;&gt;Yihui 的回答&lt;/a&gt;，在 Rmd 里这么写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (!file.exists(cover_file &amp;lt;- &amp;#39;cover.jpg&amp;#39;))
  download.file(url, cover_file, mode = &amp;#39;wb&amp;#39;)
knitr::include_graphics(if (identical(knitr:::pandoc_to(), &amp;#39;html&amp;#39;)) url else cover_file)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这段代码自动判断，如果输出网页文档，就插入原始图片链接，否则就下载到本地再插入。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;主控文档和子文档&lt;/h2&gt;
&lt;p&gt;Word 有个很好的功能，叫做“主控文档”：如果文件太大，那么各章可以分别写在一个 word 文档（子文档）里，然后插入到另一个文档里合并。LaTeX 里也有同样的功能，用 include 指令就行了。&lt;/p&gt;
&lt;p&gt;bookdown 当然也可以。官方文档对此有&lt;a href=&#34;https://bookdown.org/yihui/bookdown/usage.html&#34;&gt;说明&lt;/a&gt;，只需在’_bookdown.yml’里声明即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rmd_files: [&amp;quot;chapter1.Rmd&amp;quot;, &amp;quot;chapter2.Rmd&amp;quot;, &amp;quot;chapter3.Rmd&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果希望在不同格式的输出文件里包含不同的章节，比如网页格式的书里包含 1 到 3 章，而 pdf 的只包含第 1 和第 3 章，那么：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rmd_files:
  html: [&amp;quot;chapter1.Rmd&amp;quot;, &amp;quot;chapter2.Rmd&amp;quot;, &amp;quot;chapter3.Rmd&amp;quot;]
  latex: [&amp;quot;chapter1.Rmd&amp;quot;, &amp;quot;chapter3.Rmd&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是，这种方法只适合并列关系的章节，如果是总分关系的呢？比如，我想在 chapter1 里某段插入 ‘mytext.md’ 这个文本，在 chapter2 里再插入一次，该怎么办？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://disqus.com/home/discussion/yihui/r_markdown_notebook_jupyter_ipython_notebook/#comment-3426121547&#34;&gt;这样办&lt;/a&gt;：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cat(readLines(&amp;quot;mytext.md&amp;quot;), sep = &amp;quot;\n&amp;quot;) # 结合代码段选项 results=&amp;quot;asis&amp;quot;, echo=FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果深入一步，考虑上一节“往 pdf 里插入网络图片”的方法，就可以玩出更多花样，例如书的网页格式里插入 mytext.md，而 pdf 里不插。&lt;/p&gt;
&lt;p&gt;如果再跟上面的 yaml 声明相结合，各个文本文件就成了乐高积木块，随心所欲组合了。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bookdown.org-&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;bookdown.org 的多账号管理&lt;/h2&gt;
&lt;p&gt;在 bookdown.org 发布书稿，点击RStudio 左上面板的发布符号，会引导你用 google 账号登录。第一次登录会让你设置在 bookdown.org 的用户名，这个要重视，想个你喜欢的名字，以后就没法改了。&lt;/p&gt;
&lt;p&gt;用同一账号发布书稿，一点问题都没有。但是当我用多个账号发布书稿，遇见了一些小麻烦。&lt;/p&gt;
&lt;p&gt;首先，我用 &lt;code&gt;bookdown::publish_book()&lt;/code&gt; 的 &lt;code&gt;account&lt;/code&gt; 参数指定一个新账号，得到了错误信息:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: Unknown account name &amp;#39;newaccount&amp;#39; (you can use the setAccountInfo function to add a new account)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一查 setAccountInfo，不是 bookdown 包的函数，而是 rsconnect 包的函数：&lt;code&gt;rsconnect::setAccountInfo()&lt;/code&gt;。然后就不知道怎么办了。&lt;/p&gt;
&lt;p&gt;其实，添加账号应该点击 Rstudio 左上面板的发布按钮- Manage Account - Connect - RStudio Connect - 输入 bookdown.org，然后往下照提示走就行了。&lt;/p&gt;
&lt;p&gt;添加账号后，照理说用 &lt;code&gt;bookdown::publish_book()&lt;/code&gt; 的 &lt;code&gt;account&lt;/code&gt;指定一下账号，就应该能发布了吧？不，还是失败了，说 &lt;code&gt;name&lt;/code&gt; 参数有问题。其实没问题。&lt;/p&gt;
&lt;p&gt;怎么办？我发现必须从 Mange Account 里删掉旧 bookdown 的账号，就可以用新的账号成功发布了。&lt;/p&gt;
&lt;p&gt;上面说了这么多，其实就是一句话：用不同账号往 bookdown.org 发布书稿，只需在 Manage Account 里添加并保留唯一一个账号即可。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>如何在 R markdown 里输出 r pi 并前后加上小撇`</title>
      <link>http://www.pzhao.org/zh/post/backticks-in-rmd/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/backticks-in-rmd/</guid>
      <description>&lt;p&gt;其实本文的标题应该是：如何在文章里显示 &lt;code&gt;`r pi`&lt;/code&gt; 这样的文字。但是我不知道怎么把这个格式弄到标题里。所以，就这样凑合过吧。&lt;/p&gt;
&lt;p&gt;这个问题的答案，要分几层意思来说。&lt;code&gt;`r pi`&lt;/code&gt; 是代码格式（本博客显示为粉底红字），并且包含的`符号同样是代码格式，并且 pi 并没有被编译成 3.1415927。别看它短，这三点每个都是个坑。&lt;/p&gt;
&lt;p&gt;这个问题在编写 R markdown 教程时常见。其实，等你明白这个问题的答案后，会发现答案并不难，难的是如何描述这个问题。我费了好大劲，都想不出一个准确描述的办法，并且在那些支持 markdown 的论坛上，我连这个小撇都输不出来，这叫人怎么问？最后我只能这么提问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请问在输出文档里怎么显示’撇 r pi 撇’并且别让它编译出来 3.1415927？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;-1--&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;第 1 层意思，那个小撇 `，它到底叫什么？总不能总叫“小撇”吧？&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/KB_Germany.svg/550px-KB_Germany.svg.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;我用的是德语键盘，挪，就是上图第一行右起第二个键的上面那个小可爱。&lt;/p&gt;
&lt;p&gt;查&lt;a href=&#34;https://en.wikipedia.org/wiki/Grave_accent&#34;&gt;维基百科&lt;/a&gt;才知道，` 的学名叫 &lt;em&gt;Grave accent&lt;/em&gt; ，中文叫“重音符”。在程序猿的世界里，它又被称作 &lt;em&gt;backquote&lt;/em&gt; 或 &lt;em&gt;backtick&lt;/em&gt;，中文叫反引号。所以，跟这个有关的问题可以这么问：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://meta.stackexchange.com/questions/82718/how-do-i-escape-a-backtick-in-markdown&#34;&gt;How do I escape a backtick ` in Markdown?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/20409172/how-to-display-verbatim-inline-r-code-with-backticks-using-rmarkdown&#34;&gt;How to display verbatim/literal inline r code with backticks using Rmarkdown?&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-2-&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;第 2 层意思：怎么把反引号显示出来？&lt;/h3&gt;
&lt;p&gt;如果仅仅输入个反引号 &lt;code&gt;，在同一段里后面没有了还好办，万一又出现一个反引号&lt;/code&gt;，就会把他俩自动配对儿，两者之间的文字当成了代码。瞧，就是上句话这个德性。&lt;/p&gt;
&lt;p&gt;为了棒打鸳鸯不让他俩自动配对儿，那就用转义符\。输入\`，就避免反引号自动配对变代码了。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-3--r-&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;第 3 层意思，是怎么把 r 语言的输出结果显示到代码环境里。&lt;/h3&gt;
&lt;p&gt;这个就开始有点绕了。&lt;/p&gt;
&lt;p&gt;比如，我想在Rmd 源文件里输入 pi，而输出的文档里显示 &lt;code&gt;3.1415927&lt;/code&gt;。注意，光是输出 3.1415927 这容易，输入&lt;code&gt;`r pi`&lt;/code&gt; 就行了，但是怎么显示成代码格式（这里是粉底红字）？在 &lt;code&gt;`r pi`&lt;/code&gt; 外边加一层反引号是不行的。&lt;/p&gt;
&lt;p&gt;正确的方法是: &lt;code&gt;两个反引号&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; + &lt;code&gt;一个反引号&lt;/code&gt; + &lt;code&gt;r&lt;/code&gt; + &lt;code&gt;pi&lt;/code&gt; + &lt;code&gt;一个反引号&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; + &lt;code&gt;两个反引号&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也就是说，&lt;code&gt;两个反引号&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; 相当于更外一层的反引号。 R markdown 先看到内层的反引号，进行编译，得到 3.1415927：然后，看到外层的反引号，于是把内层的编译结果表示成代码格式。&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-4--3.1415927-r-pi-r-pi&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;第 4 层意思，怎么让上面那个 3.1415927 在输出文档里显示源码’r pi’，并且都在代码环境（粉底红色）里，即 &lt;code&gt;r pi&lt;/code&gt;？&lt;/h3&gt;
&lt;p&gt;方法有两种。第一种是用&lt;a href=&#34;https://yihui.name/knitr/faq/&#34;&gt;knitr&lt;/a&gt; 的 &lt;code&gt;inline_expr()&lt;/code&gt; 函数：&lt;code&gt;`r knitr::inline_expr(&#39;pi&#39;)`&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二种是用第 3 层意思里说的方法，即 &lt;code&gt;两个反引号&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; &lt;code&gt;r&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; + &lt;code&gt;pi&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; + &lt;code&gt;两个反引号&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;牢记&lt;strong&gt;&lt;code&gt;两个反引号&lt;/code&gt; + &lt;code&gt;一个空格&lt;/code&gt; = &lt;code&gt;更外一层的反引号&lt;/code&gt;&lt;/strong&gt;，就稍微容易理解一点。&lt;/p&gt;
&lt;p&gt;写到这个地方，我已经要晕车了，但是还没完。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-5--4-&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;第 5 层意思，怎么在第 4 层意思的基础上再加两个反引号，并显示成粉底红字，即&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;`r pi`&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我现在用的方法是：&lt;code&gt;``&lt;/code&gt; &lt;code&gt;r &#39;\x60r pi\x60&#39;&lt;/code&gt; &lt;code&gt;``&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个 &lt;code&gt;\x60&lt;/code&gt; 就是反引号。相当于把反引号弄到字符串里处理。&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;-6-&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;完了吗？还没完，还有第 6 层意思。&lt;/h3&gt;
&lt;p&gt;反引号就像个俄罗斯套娃；上文你看到的结果都是渲染出来的，而实际书写的源文档，总会比你看见的外面再多一层。&lt;/p&gt;
&lt;p&gt;写到这里，我不行了，容我扶墙出去呼吸两颗新鲜空气。&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>外国国名的中文含义</title>
      <link>http://www.pzhao.org/zh/post/country-names/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/country-names/</guid>
      <description>&lt;p&gt;有一天，德国朋友苏珊兴奋地问我：听说 Germany 在中文的意思是&lt;strong&gt;美德的国度&lt;/strong&gt;，对吗？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 对。德国，美德之国。&lt;/p&gt;

&lt;p&gt;我爱中文！再多讲讲。France 怎么说？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 法国。法制之邦。&lt;/p&gt;

&lt;p&gt;嗯，有道理。那么 America 呢？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 美国。美丽之国。&lt;/p&gt;

&lt;p&gt;真的？那 Britain 呢？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 英吉利。幸运的花儿。&lt;/p&gt;

&lt;p&gt;有趣！Netherlands？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 荷兰。荷花和兰花。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Finland&lt;/em&gt;?&amp;rsquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash; 芬兰。芬芳的兰花。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Denmark&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&amp;ndash; 丹麦。红色的麦子。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Czech&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&amp;ndash; 捷克。打败敌人，赢得战争！&lt;/p&gt;

&lt;p&gt;天哪! &lt;em&gt;Austria&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&amp;ndash; 奥地利，占据地利的国家。&lt;/p&gt;

&lt;p&gt;为什么是地利？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 因为有个 Belgium，比利时，占据天时的国家！&lt;/p&gt;

&lt;p&gt;好吧。&lt;em&gt;Portugal&lt;/em&gt;?&amp;rsquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash; 葡萄牙。葡萄的牙齿。&lt;/p&gt;

&lt;p&gt;啥？那 Spain？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 西班牙。在西边分开的牙齿！&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://haonowshaokao.files.wordpress.com/2013/04/europe_map_political.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我懂了！亚洲国家呢？Vietnam？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 越南。百越部族的南边。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thailand&lt;/em&gt;?&amp;rsquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash; 泰国。国泰民安。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Korea&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;&amp;ndash; 朝鲜。明亮的早晨。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Japan&lt;/em&gt; 是什么意思?&lt;/p&gt;

&lt;p&gt;&amp;ndash; 日本，太阳的根。&lt;/p&gt;

&lt;p&gt;这些远东国家的名字在中文里更有意义。那么 China 呢？&lt;/p&gt;

&lt;p&gt;&amp;ndash; 我们才不是远东呢。中国，我们是中央之国。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advection campaign at Torgnon started </title>
      <link>http://www.pzhao.org/zh/post/advection-tn/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/advection-tn/</guid>
      <description>&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;http://www.arpa.vda.it/images/stories/ARPA/camb_clim/news/20170714_PascoloTorgnon/setup.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;At the beginning of July, Kathi and I went to the Aosta Valley to set up the advection measurement at Torgnon. Thanks a lot to Marta and other colleagues!&lt;/p&gt;
&lt;p&gt;Our institute is collecting post cards from the fieldwork in the meanwhile. Here is one from us.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uibk.ac.at/ecology/postcards-from-the-field/&#34;&gt;&lt;img src=&#34;https://www.uibk.ac.at/ecology/postcards-from-the-field/bilder/postcard-from-aosta.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>世界上最长的单词</title>
      <link>http://www.pzhao.org/zh/post/longest-word/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/longest-word/</guid>
      <description>&lt;p&gt;学过这么多年英语，你知道英文里最长的单词是什么吗？&lt;/p&gt;

&lt;p&gt;据说是肌联蛋白。它是目前已知的最大的蛋白质。按照化学上的科学命名法，它的学名由大约 19 万个字母组成，单它一个单词就可以占据一本字典了，独孤求败，不要太寂寞。大家用可怜的眼光看着它，然后起了个俗名，叫做 &lt;em&gt;titin&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;在字典上，最长的英文单词据说是 *pneumonoultramicroscopicsilicovolcanoconiosis*，45个字母，中文译作“超微粒硅酸盐尘埃沉着症”，简称“火山肺矽病”，是肺尘病里的一种。拆开来是：*pneumono*（关于肺）-*ultra*（超）-*microscopic*（微小）-*silico*（硅，即“矽”）-*volcano*（火山）-*coniosis*（尘埃引致的疾病）。看起来吓人，其实不难记，是个纸老虎。&lt;/p&gt;

&lt;p&gt;德语里，这样的纸老虎很多，吓了我无数次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://steemitimages.com/0x0/https://qg5vba.dm2302.livefilestore.com/y2pQ5yUtzjO2SG8ygAjtHOer8WMx-uc-QjSF0korfCFH2ZLnOhzcWsWW1faOu_K7oozi-U39gerzvlb7n6uQxEnSdoWvzKKGDj3UGo3Rb0WFBI/2010-11-29_de.jpg?psid=1&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上面这幅漫画，就来自我所在的棚房办公室男厕所马桶上方。一直不知道画中的兄弟在折腾个啥，很久之后等我具备了一点德语水平才弄懂。翻译如下：&lt;/p&gt;

&lt;p&gt;标题：马桶刷使用指南。&lt;/p&gt;

&lt;p&gt;第一幅：完全错误。&lt;/p&gt;

&lt;p&gt;第二幅：错误。&lt;/p&gt;

&lt;p&gt;第三幅：接近正确。&lt;/p&gt;

&lt;p&gt;第四幅：正确。&lt;/p&gt;

&lt;p&gt;这个漫画的标题是个超级长的单词：*Toilettenbürstenbenutzungsanweisung*。这是&lt;strong&gt;一个&lt;/strong&gt;由36个字母组成的单词，意思是“马桶-刷-使用-指南”。跟上文介绍的英语单词类似，德语把很多个词连在一起构成一个新词，而这些词之间是没有空格也没有连字符的；跟英语不同的是，德语里这样的词在字典里查不到，得你自己把它断成 *Toiletten-bürsten-benutzungs-anweisung*，再逐个去查。这让初学者望而却步：遇见的是一个生词，不懂只能查字典，字典上又查不到，我又不知道怎么断开它。你让我怎么办？难道是逼我带着智能手机上厕所吗？万一掉进去谁赔？&lt;/p&gt;

&lt;p&gt;记得第一次买盐，我特意先查了字典，知道 &lt;em&gt;salt&lt;/em&gt; 的德语是 *salz*，可我把超市翻了三遍也没找到叫 &lt;em&gt;salz&lt;/em&gt; 的东西。只得硬着头皮问收银员。收银员带我到货架一指，我一看几乎晕倒，盒子上写着：*Markensalz*。&lt;/p&gt;

&lt;p&gt;德语字典里出现的最长的单词，据说是 *Donaudampfschiffahrtselektrizit?tenhauptbetriebswerkbauunterbeamtengesellschaft*，以79个字母的长度，载入了吉尼斯世界纪录。这个词是维也纳一家俱乐部的名字。而事实上，根据德语的构词法，最长的单词是无限长。德语里的数，不管有多少位，都作为一个单词来处理， 例如 &lt;em&gt;777777&lt;/em&gt; 这个六位数，德语写作：&lt;em&gt;siebenhundertsiebenundsiebzigtausendsiebenhundertsiebenundsiebzig&lt;/em&gt; 。所以只要来个无理数，德国单词的长度就能傲视群雄，无词能及。&lt;/p&gt;

&lt;p&gt;每当孩子玩磁力小火车，把托马斯、培西、詹姆士等前后连成一串开起来的时候，我就想到了这种BT的构词法。还是中文简洁啊。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://steemitimages.com/0x0/https://ae01.alicdn.com/kf/HTB1OWoeKpXXXXbhXpXXq6xXFXXXN/Wooden-Magnetic-Thomas-and-Friends-the-Tank-Engine-Circus-Donald-Lady-Skarloey-James-Gordon-Pink-Lucie.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bookdownplus 的两个魔法</title>
      <link>http://www.pzhao.org/zh/post/bookdownplus-magic/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdownplus-magic/</guid>
      <description>&lt;p&gt;bookdown 是个好东西，只是入手有点难，酒香巷深。&lt;/p&gt;
&lt;p&gt;对于 R 初学者来说，如果身边没有人指导，使用者可能需要花大量精力应付 LaTeX，YAML，Pandoc，而很多初学者可能从来没听说过这些，站在 bookdown 的门口往里张望了一下，说不定就被吓跑了，从而错过了门里的精彩世界。&lt;/p&gt;
&lt;p&gt;bookdownplus 扩展包，可以让新手对 bookdown 快速上手。从此，bookdown 这坛好酒就不必去深巷苦寻，它就放在你手边。&lt;/p&gt;
&lt;p&gt;从 v1.2.0 开始，bookdownplus 增加了两个魔法，更是让新手对 bookdown 一见钟情。如果你对 bookdown 感兴趣却苦于入门的烦恼，那么可以试试这两个魔法。&lt;/p&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;准备工作&lt;/h2&gt;
&lt;p&gt;首先，安装好必需的软件，包括 R, RStudio, &lt;span class=&#34;math inline&#34;&gt;\(\LaTeX\)&lt;/span&gt;等。详见 &lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34;&gt;bookdown 官方手册&lt;/a&gt;。然后，安装开发版的bookdownplus：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;pzhaonet/bookdownplus&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再用 &lt;code&gt;setwd()&lt;/code&gt; 将R的工作目录设置到一个空文件夹里。&lt;/p&gt;
&lt;p&gt;一切准备就绪后，接下来就是见证奇迹的时刻。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;第一个魔法&lt;/h2&gt;
&lt;p&gt;在 R 里运行下面的代码，然后去喝个茶：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in template()[1:19])
  bookdownplus(template = i, 
               more_output = more_output()[1:3])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;回来以后，你会在工作目录里看到很多文件和文件夹。打开那个叫做 &lt;code&gt;_book/&lt;/code&gt;的文件夹，Duang！19个示例文档，每个都以 pdf、Word、网页和电子书格式乖乖地等在那里，等你打开了。其中，电子书 epub 格式可以在手机上阅读，也可以在台式机用免费的Calibre软件打开阅读。&lt;/p&gt;
&lt;p&gt;这些示例文档，从学术论文到诗歌乐谱，从中文到英文，展示了 bookdown 能胜任的工作。是不是动心了？&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section level2&#34;&gt;
&lt;h2&gt;第二个魔法&lt;/h2&gt;
&lt;p&gt;运行下面的代码，然后看两眼窗外的风景，bookdownplus 就把事情做完了：&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (mf in mail_font()) {
  for (ms in mail_style()) {
    for (mt in mail_theme()) {
      outputname &amp;lt;- paste(&amp;#39;mail&amp;#39;, ms, mf, mt, sep = &amp;#39;_&amp;#39;)
      bookdownplus(template = &amp;#39;mail&amp;#39;, 
                   mail_style = ms, 
                   mail_font = mf, 
                   mail_theme = mt, 
                   output_name = outputname)
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;仍然打开那个叫做 &lt;code&gt;_book/&lt;/code&gt;的文件夹，Duang！ 不同字体、不同主题、不同布局的信件示例文档就全部在那里了。&lt;/p&gt;
&lt;p&gt;如果看了这个你还没动心，那么只能说明跟 bookdown 没缘分，趁早放手吧！&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
