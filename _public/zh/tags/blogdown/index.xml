<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogdown on Peng Zhao</title>
    <link>http://www.pzhao.org/zh/tags/blogdown/</link>
    <description>Recent content in Blogdown on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <lastBuildDate>Fri, 08 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.pzhao.org/zh/tags/blogdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>当 github 的项目做了可视化，我感觉像是上帝在创世纪</title>
      <link>http://www.pzhao.org/zh/post/gource/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/gource/</guid>
      <description>用 blogdown 制作和维护本博客已经一年有余。昨天，我把本网站的发展过程做了一个 5 分钟的视频，从开始到现在。
视频里，先是飞出来一个小人儿，一发功，biu biu biu，就激发出几个星系。小人儿在星系间穿梭，所到之处，如漫天烟花绽放。在抬手一挥间，一个个星球诞生，一个个星球毁灭。最后，整个宇宙稳定下来，成为 pzhao.org 现在的静稳态。
 Youtube 视频
那个小人儿就是我。创世的感觉，有没有？
简单解释一下：
 视频里，每个圆球代表本网站在 gihub 的项目里的一个文件； 小人儿用手电筒照亮一个圆球，代表生成或修改这个文件。 顶部显示的是实际时间。  回顾这一年使用 blogdown 做博客的历程，出现过三次爆炸：
 第一次当然是开头，创世纪嘛，产生了很多新文件。 第二次是 2017 年 11 月，content 文件夹大爆炸。这是我把 wordpress 的旧博客全部搬家过来的大事记。 第三次是 2018 年 4 月，我把 public 文件夹给毁灭了，从此再也不在本地编译了，写完 .md 文件就直接同步，全权交给 netlify 处理。  视频很酷，制作起来是不是很麻烦？
不费吹灰之力。
这个可视化视频是用 gource 制作的。只要在本地安装这个软件，然后 cmd 进入本地 github repo 的文件夹，运行 gource就行了。想录制成视频，只需设定合适的参数，然后用 ffmpeg 转换一下即可。
爽极了。
比这个更爽的，是团队合作 github 项目的可视化。
我在 steemit 社交平台混了有一段时间了。前不久，召集一群义士合编了一本书，叫《Steem 指南》。我们在 github 上写，用的是 bookdown 框架。</description>
    </item>
    
    <item>
      <title>R blogdown 科研网站的公式和参考文献</title>
      <link>http://www.pzhao.org/zh/post/rblogdown-bib/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/rblogdown-bib/</guid>
      <description>本网站的公式和参考文献一直未能正常显示，直到今天我才把这两个问题解决。
公式公式的问题迟迟未解决，是因为我看到人们在讨论往html文件里加 Load mathjax 代码这种解决方案，一看就头大，不想做。
其实，我用的hugo-academic主题，据说是支持数学环境的，据说在 config.toml 里设置 math = true就开启全站支持，在单篇post的yml头里这样设置就开启单篇支持。可是我两样都试过，然后运行 blogdown::serve_site()测试，在RStudio的Viewer里都不能成功显示公式。
今天突然灵光一现，心想不会是RStudio Viewer的问题吧？于是点击Viewer左上角的 Show in new window 按钮，用外部浏览器打开一看，Duang！帖子里的公式就都可以正常显示了！这里秀一个：
帖子里输入下面的 \(\LaTeX\) 公式：
$$\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}$$网页就会显示：
\[\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}\]
参考文献两个多月前，就有个哥们儿问“有没有可能在blogdown创建的网站里添加参考文献?”作者回答得干脆：“有。”两人对话戛然而止，让我目瞪口呆。由于在blogdown 官方手册里并未看到添加参考文献的方法，我一直以为这个功能尚在开发中，直到今天也没见动静，有些起疑，就随便试了一下，步骤跟在 bookdown 里一样：
把参考文献库 .bib 文件考到 content\post\.在帖子 .Rmd 文档的 yml 头里声明 .bib 文件的名称和路径。这里我设成 bibliography: [book.bib, packages.bib].在帖子里引用 .bib 里的文献条目，例如 [@R-blogdown].运行建站函数 blogdown::build_site().就这样，说时迟那时快，只见Duang！帖子里的引用就显示成了 (Xie 2017) ！而帖子末尾的参考文献列表就自动出来了！
blogdown 可以如此方便地往帖子里插入计算代码、图表、公式、参考文献，我实在找不出第二个这样的工具。建科研网站，非 blogdown 莫属！
最后顺便提一下：虽然最新正式版的 RStudio 1.0.143 并 没有 blogdown 和 bookdown 的入口，但是我欣喜地发现，在 RStudio 的开发版 1.</description>
    </item>
    
    <item>
      <title>Hugo 网站的浏览器小图标</title>
      <link>http://www.pzhao.org/zh/post/hugo-icon/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-icon/</guid>
      <description>网站图标，就是上图的这些东东，用浏览器打开网站时显示在地址栏的顶端。R blogdown安装的hugo-academic主题，默认图标是个蓝色学位帽，挺好看的，不改也行，只是如果大家都用的话，泯然众人，识别度就低了。
改的方式很简单：将你自己的图标图片保存为.png格式，并命名为icon.png，替换\themes\hugo-academic\static\img\icon.png即可。
update: 更好的方案来自yang Cao的提议：把icon.png放在static/img/，避免在更新themes时将自定义图标覆盖。</description>
    </item>
    
    <item>
      <title>Hugo 网站的RSS</title>
      <link>http://www.pzhao.org/zh/post/hugo-rss/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-rss/</guid>
      <description>R blogdown 搭建的 Hugo 网站，小细节很多，可以一点一点完善，好在都不难搞定。今天添加了个RSS订阅按钮。
自从 Google Reader 死后，我就觉得 RSS 没有多大趣味，就好像子期死后伯牙摔琴一样。但是，没有 RSS 提醒的话，还真不知道谁的博客更新了，于是就勉强用 feedly 凑合。眼看我的新网站构架基本完成，就在 feedly 里订阅了一下自己的网站，输入 pzhao.org，发现没找到。嗯？研究一下才明白，我的主页完整地址是：
http://pzhao.org/zh/这个路径对应的本地文件夹下面，不仅有个index.html，还有个index.xml，后者就是 RSS 订阅的文件。所以，在feedly添加：
http://pzhao.org/zh/index.xml就把我的新网站添进去了。这是订阅全站。如果只想订阅其中的博客，或新发表的学术文章，或新做的报告，那么：
http://pzhao.org/zh/post/index.xmlhttp://pzhao.org/zh/publication/index.xmlhttp://pzhao.org/zh/talk/index.xml这个RSS链接，我该放到主页的什么位置，来方便网友订阅呢？我决定放到我的头像下面的社交按钮里。
头像下的社交按钮是在config.toml里设置的，只需添加个[[params.social]]就可以了，图标去fa或ai两个包的主页找便是。 实在缺乏社交，只好把自己卡拉OK的录音和腾讯视频加进去凑数，代码如下：
 [[params.social]]icon = &amp;quot;rss&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://www.pzhao.org/zh/index.xml&amp;quot;[[params.social]]icon = &amp;quot;music&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://kg.qq.com/node/personal?uid=649d9d85212c3489&amp;quot;[[params.social]]icon = &amp;quot;video-camera&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://v.qq.com/vplus/0f8190586a3f2f22a25e9827b38c171e&amp;quot;</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题的多语言界面</title>
      <link>http://www.pzhao.org/zh/post/hugo-multilingual/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-multilingual/</guid>
      <description>几年前我弄过双语博客， 后来放弃了，因为 WordPress 的双语方案有些遗留问题让我不爽，另外我没有精力写英文博客。现在，新网站是个科研网站，博客可以只出现在中文版里，而英文版只放自己的学术情况就行了，不用像博客更新那么频繁。所以，双语界面几乎是排在第一梯队的需求。
我对Hugo的架构并不熟悉，原以为会很麻烦，结果弄一会儿就搞定了，原来这么简单。有些步骤在主题的说明文档里提到了，但不够全。完整的步骤是这样的(看起来长，是因为我啰嗦，其实很快就能设置完)：
1、开启双语。这需要在config.toml里末尾找到：
[languages.en] languageCode = &amp;quot;en-us&amp;quot;  这说明网站现在是英文的。在后面添加中文，也就是：
[languages.en] languageCode = &amp;quot;en-us&amp;quot; [languages.zh] languageCode = &amp;quot;zh-cn&amp;quot;  2、设置默认语言。这需要在config.toml里开头不远处找到：
# Default language to use (if you setup multilingual support) defaultContentLanguage = &amp;quot;zh&amp;quot; defaultContentLanguageInSubdir = true  原先是en，改成zh就可以让网站默认打开是中文。
3、菜单栏增加中文界面。菜单栏就是网页顶部那一排按钮。这需要在config.toml里找到菜单栏的设定：
[[menu.main]] name = &amp;quot;Home&amp;quot; url = &amp;quot;#about&amp;quot; weight = 1  上面是默认语言英语的设置。在下面添加中文设置，格式是
[[languages.zh.menu.main]] name = &amp;quot;主页&amp;quot; url = &amp;quot;#about&amp;quot; weight = 1  这样，就把Home按钮替换成了主页按钮。其他按钮类似。
4、其他地方的翻译。这需要把\themes\hugo-academic\i18n\ 文件夹拷贝到根目录，然后删掉里边不需要的语言文件。我们只保留en.yaml和zh.yaml。用文本编辑器打开zh.yaml，把里边翻译不当的地方修改一下，比如 interests 翻译成了“兴趣爱好”，我改成了“研究领域”。
5、新增帖子的双语。这个最好办，每次在content\文件夹里新增文件时，如果要增加英文，就在文件扩展名前面加个.en就行了。例如，我在content\talk\下面新建了个egu-2017.md，里面是中文，会出现在中文界面上。那么我想让这个项目也在英文版出现，只需把egu-2017.md复制一份，命名为egu-2017.en.md，那么这个项目就会在英文界面出现了。打开egu-2017.en.md把里面的中文改成英文即可。</description>
    </item>
    
    <item>
      <title>迁都</title>
      <link>http://www.pzhao.org/archives/19323/</link>
      <pubDate>Sat, 15 Apr 2017 18:31:46 +0000</pubDate>
      
      <guid>http://www.pzhao.org/archives/19323/</guid>
      <description>话说天下大势，汾酒必喝，喝酒必汾。北京市政府某些部门迁往通州不久，雄安开始作为新区开发，而我的博客，也迎来了迁站的好时机。
4 年前，这个博客开始使用 WordPress 框架；3 年前，开始使用 suffision 主题。从那以后，就再也没有折腾过。弱水三千只取一瓢，我对博客的框架一直是很满意的，用Stackedit 的 Markdown 书写，用 WordPress 的 Markdown 插件发布，从此不操心格式的问题，只想专心写内容。生活类帖子本来就用不着太多格式，而技术类帖子顶多就是折腾一下 R 语言，顶多就是把 Rmd 文件编织成 html 格式再发布，知足常乐嘛。
不过，隐隐之中，总觉得哪里有点缺憾，但又说不出来。
直到最近，我才闹明白是怎么回事。
原来，缺憾在于，我是个做科研的，心底有种写科研博客的诉求，只是我自己不知道。科研工作里的一些方法，未成形的科学想法，我想用博客的形式来记录和分享。我需要在帖子里插入图表、公式、参考文献，而我手头的图表、公式和参考文献都是 R 语言和 LaTeX 完成的。插进 WordPress，不是不可以，但我嫌麻烦，懒得折腾，就不知不觉放弃了写科研博客的念头。并且，pzhao.org 这个域名，当初申请时并不太严肃，有种“先玩玩再说”的意思。而科研博客，怎么着也得实名吧。
因为只有腿，我就只想着跑，顶多就是跑快点儿，从未想过，自己心底其实是想飞的。
这时，神说要有光， R blogdown 就来了，并且在益辉同学的指点下，我申请到一个满意的实名域名 pzhao.org。我感觉，这就是我等待已久的那对儿翅膀。
不能再等了。本博客就此一分为三。主站转移到我的实名网站 pzhao.org(RSS)，以科研和技术（包括 R 语言）为主，正经一点；而关于最近出书的动态，全部记录在该书的专属网站上 xuer.pzhao.net(RSS)；“大鹏志”的繁华我还不忍心拆掉，那就作为陪都吧，记录生活博客，估计主要是育儿。
从今天起，开始飞翔。
原文链接</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题首页的文摘显示问题</title>
      <link>http://www.pzhao.org/zh/post/hugo-academic-summary/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-academic-summary/</guid>
      <description>在 RStudio 里用 R blogdown 来维护网站时，可以通过点击工具栏的 Addins - New Post 来创建新帖子，很方便。但是，如果用的是 Hugo 的 academic 主题，那么创建的新帖子在网站首页会显示全文，不大好看，尤其是全文很长的时候，根本就不像个首页了。这是因为，academic 首页的 posts 模块默认显示文摘。如果没有为每篇帖子设置文摘，就会显示全文。而上面说的创建新帖的方法里，并没有设置文摘的选项。那么，文摘在哪里设置呢？
直接说答案：手动在新帖的YAML文件头添加一行：
summary: &amp;quot;我的文摘别太长。&amp;quot;答案来自blogdown 项目主页。
就这么个小问题，让我走了点弯路。我发现问题后，首先观察了一下主题自带的示例文档，文件头是这样的：
+++date = &amp;quot;2016-04-20T11:00:00&amp;quot;draft = falsetags = [&amp;quot;academic&amp;quot;, &amp;quot;hugo&amp;quot;]title = &amp;quot;Customizing the homepage with widgets&amp;quot;math = falsesummary = &amp;quot;&amp;quot;&amp;quot;Enable/disable and configure widgets to customize your homepage.&amp;quot;&amp;quot;&amp;quot;+++跟 R blogdown 生成的 .md 和 .Rmd 文件的文件头不同，这个文件头居然是用前后各三个加号表示的。里面的summary开始数三行，就是用来设置文摘的。
于是我就把这三行拷贝粘贴到 .Rmd 文件里，当然是编译出错了。接着我想当然地把上面这段前后共六个加号的文件头拷贝粘贴到 .Rmd 里，仍然报错。问题搁置了几天，才想起去 blogdown 项目主页搜搜看，就找到了答案。</description>
    </item>
    
    <item>
      <title>Hugo 网站的 Disqus 加载问题</title>
      <link>http://www.pzhao.org/archives/19317/</link>
      <pubDate>Fri, 14 Apr 2017 17:27:05 +0000</pubDate>
      
      <guid>http://www.pzhao.org/archives/19317/</guid>
      <description>今天，复活节假期前夕，同事们都休假了。我虽然在办公室，却无心上班，发了一会儿呆，想想与其痛苦地工作，不如快乐地解决一下新网站的一个小问题：disqus 评论框的加载。
打建好站，disqus评论框就一直没成功加载过。后来听说是config.toml里 disqus shortname指的不是我的disqus ID，而是要专门设置一下， 我说“啊,还有这事儿？”于是就设置了一下，但是仍然不能成功加载。这个问题放了几天，今天心血来潮一搜，嗯，兴许是路径的问题，于是就把config.toml开头的路径改为
baseurl = &amp;quot;http://www.pzhao.org&amp;quot; # relativeurls = true  然后运行R语言的建站函数：
blogdown::build_site(local=FALSE) Disqus评论框就乖乖出现了。欢迎来留言测试。
啥，你看不见？嗯，听说好像是被墙了。
原文链接</description>
    </item>
    
    <item>
      <title>Hugo 网站的 Disqus 加载问题</title>
      <link>http://www.pzhao.org/zh/post/hogo-disques-problem/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hogo-disques-problem/</guid>
      <description>今天，复活节假期前夕，同事们都休假了。我虽然在办公室，却无心上班，发了一会儿呆，想想与其痛苦地工作，不如快乐地解决一下新网站的一个小问题：disqus 评论框的加载。
用 R blogdown 打建好站，disqus评论框就一直没成功加载过。后来听说是config.toml里 disqus shortname指的不是我的disqus ID，而是要专门设置一下， 我说“啊,还有这事儿？”于是就设置了一下，但是仍然不能成功加载。这个问题放了几天，今天心血来潮一搜，嗯，兴许是路径的问题，于是就把config.toml开头的路径改为
baseurl = &amp;quot;http://www.pzhao.org&amp;quot;# relativeurls = true然后运行R语言的建站函数：
blogdown::build_site(local=FALSE)注意！此处千万不要运行blogdown::serve_site()，不然新生成的文件就又没法加载 Disqus 了。网上说是serve_site()忽略了config.toml里的某些设置而造成的。我不懂，总之就是建站函数运行完就直接上传。
然后GitHub同步，几秒钟后，Netlify上完成了更新，Disqus评论框就乖乖出现了。
欢迎来留言测试。
啥，你看不见？嗯，听说好像是被墙了。</description>
    </item>
    
    <item>
      <title>用 R blogdown 搭建个人博客或科研网站</title>
      <link>http://www.pzhao.org/archives/19304/</link>
      <pubDate>Tue, 11 Apr 2017 14:10:56 +0000</pubDate>
      
      <guid>http://www.pzhao.org/archives/19304/</guid>
      <description>我正在撰写新书《 R 菜鸟入门》，新书预计今年下半年出版。本文是其中一个章节。
 用 R blogdown 搭建个人博客或科研网站   互联网时代有个自己的网站，就好像真实世界里有了自己的房子（服务器）和固定地址（域名）；自我介绍时附上自己的网站，就像生活里邀请朋友来访或者职场上递上名片，都甚为方便。然而，建立一个网站并不容易，涉及诸多领域的知识和技能，门槛比较高。好在，我们有万能的R语言，搭建网站只需几分钟，而并不需要多少网络知识。你甚至不用懂 R 语言是什么，照我下面说的做就行，包教包会，学不会免费再教。  这里，我提供两个示范，演示如何使用 R 语言的 blogdown 扩展包1，用来搭建一个个人博客和一个科研小组网站。截至本文成稿之日，blogdown 含苞待放，尚未正式发布，但是已经能够正常安装使用了。我们来尝尝鲜，提前一睹她的芳容。  R blogdown 简介和安装   R blogdown 是什么   R语言的一个扩展包，用来制作网站的工具。   可以用非常简洁的方式快速搭建静态网页构成的网站。   虽然名字里有“博客”（blog）字样，但并不仅限于博客。非常适合搭建一个科研小组的展示窗口。   基于 markdown 扩展语法，可以在网页中方便地插入图表、脚注、数学公式、R 代码等元素。   非常容易将 bookdown 生成的论文转化成网页展示。   非常易于维护，迁移，备份。    本书的官方网站就是用 R blogdown 搭建的。网站里给大家提供的 R 示例代码、试读章节、勘误表等，都是直接从书稿中拷贝粘贴到文本文件里，然后运行一下 blogdown 的指令，网站就自动更新了。  安装  blogdown 的背景平台是 R 语言，用户界面首选 RStudio ，产生的网站框架是 Hugo ，掰手指头数一数，要安装4样东西，略显繁琐，但并不难，一劳永逸。安装方式如下：   R。去R的服务器CRAN，点击Download R for Windows（其他操作系统的用户请自便），在打开的新网页最上方点击base，就找到下载链接了。下载完毕后安装，一路“下一步”的傻瓜式安装即可。   RStudio。去官网下载安装文件运行即可。   blogdown。运行RStudio，在左上面板的代码窗口输入并运行以下代码：   if(!</description>
    </item>
    
    <item>
      <title>R blogdown 搭建个人博客或科研网站</title>
      <link>http://www.pzhao.org/zh/post/r-blogdown/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/r-blogdown/</guid>
      <description>本文收录在《学 R 》一书的附录中。
互联网时代有个自己的网站，就好像真实世界里有了自己的房子（服务器）和固定地址（域名）；自我介绍时附上自己的网站，就像生活里邀请朋友来访或者职场上递上名片，都甚为方便。然而，建立一个网站并不容易，涉及诸多领域的知识和技能，门槛比较高。好在，我们有万能的R语言，搭建网站只需几分钟，而并不需要多少网络知识。你甚至不用懂 R 语言是什么，照我下面说的做就行，包教包会，学不会免费再教。
这里，我提供两个示范，演示如何使用 R 语言的 blogdown 扩展包1，用来搭建一个个人博客和一个科研小组网站。截至本文成稿之日，blogdown 含苞待放，尚未正式发布，但是已经能够正常安装使用了。我们来尝尝鲜，提前一睹她的芳容。
R blogdown 简介和安装R blogdown 是什么
R语言的一个扩展包，用来制作网站的工具。可以用非常简洁的方式快速搭建静态网页构成的网站。虽然名字里有“博客”（blog）字样，但并不仅限于博客。非常适合搭建一个科研小组的展示窗口。基于 markdown 扩展语法，可以在网页中方便地插入图表、脚注、数学公式、R 代码等元素。非常容易将 bookdown 生成的论文转化成网页展示。非常易于维护，迁移，备份。本书的官方网站就是用 R blogdown 搭建的。网站里给大家提供的 R 示例代码、试读章节、勘误表等，都是直接从书稿中拷贝粘贴到文本文件里，然后运行一下 blogdown 的指令，网站就自动更新了。
安装
blogdown 的背景平台是 R 语言，用户界面首选 RStudio ，产生的网站框架是 Hugo ，掰手指头数一数，要安装4样东西，略显繁琐，但并不难，一劳永逸。安装方式如下：
R。去R的服务器CRAN，点击Download R for Windows（其他操作系统的用户请自便），在打开的新网页最上方点击base，就找到下载链接了。下载完毕后安装，一路“下一步”的傻瓜式安装即可。RStudio。去官网下载安装文件运行即可。blogdown。运行RStudio，在左上面板的代码窗口输入并运行以下代码：if(!require(devtools)) install.packages(&amp;#39;devtools&amp;#39;)devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)解释一下：由于 blogdown 目前只发布到了 GitHub 服务器上，尚未发布到CRAN，所以上面第一条代码先安装开发工具 devtools 包，第二行用这个包的install_github() 函数从 GitHub 安装。
Hugo 框架。在 RStudio 左上面板的代码窗口输入并运行以下代码：blogdown::install_hugo()安装完毕。</description>
    </item>
    
  </channel>
</rss>