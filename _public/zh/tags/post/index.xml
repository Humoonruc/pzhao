<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on Peng Zhao</title>
    <link>http://www.pzhao.org/zh/tags/post/</link>
    <description>Recent content in Post on Peng Zhao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2017 Peng Zhao</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.pzhao.org/zh/tags/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>日志</title>
      <link>http://www.pzhao.org/zh/home/posts/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/home/posts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>几何平均值与几何标准差</title>
      <link>http://www.pzhao.org/zh/post/geometric-mean/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/geometric-mean/</guid>
      <description>如何合并几何平均值和几何标准差？今天，小师妹问了我这样一个棘手的问题。
这两个概念我从前学过，但从来没用过。于是查了一下维基百科:
几何平均数（Geometric mean），是求一组数值的平均数的方法中的一种。适用于对比率数据的平均，并主要用于计算数据平均增长（变化）率。
计算公式是：
\(G = \sqrt[n]{\prod_{i = 1}^{n} x_i} = \sqrt[n]{x_1\cdot x_2 \cdot \cdot \cdot x_n}\)
而几何标准差的解释是这样的：
在机率论与统计学中，几何标准差形容一组数值有多分散，用于当这一组数字理应优先选用的平均数为几何平均数之时。对于这类数据，几何标准差可能优于普通的标准差。留意几何标准差是个乘法因数，因此是无量纲的，而不似普通的算术标准差，与输入数值有同样的量纲。
计算公式：
\(\sigma = \exp(\sqrt{\frac{\sum_{i = 1}^{n} (\ln \frac{x_i}{G})^2)}{n}})\)
这里吐槽一下维基百科：同一个量在不同的页面就不能使用同一个符号来表示吗？害得我这个小白费解了半天。
好了，现在我们来合并两组数据的几何平均值和几何标准差。
请听题：假定：
第 1 组数据是 \((x_i, x_2, ... x_n)\), 其几何平均值是 \(G_x\)，几何标准差是 \(\sigma_x\)。第 2 组数据是 \((y_i, y_2, ... y_n)\), 其几何平均值是 \(G_y\)，几何标准差是 \(\sigma_y\)。那么，这两组数据的合集 \((x_i, x_2, ... x_n, y_i, y_2, ... y_n)\) 的几何平均值 \(G_{x,y}\) 和几何标准差\(\sigma_{x,y}\)如何计算？</description>
    </item>
    
    <item>
      <title>R bookdown 用户的狂欢节：首届 bookdown 大奖赛</title>
      <link>http://www.pzhao.org/zh/post/bookdown-contest/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-contest/</guid>
      <description>这是令我感到非常困惑的一件事情：首届 bookdown 大奖赛已经开赛一个多月了，距离截止日期还剩三周，奖品超级丰厚，可是参赛的稿件只有寥寥十篇。目前看来，只要参加就有奖！奖品价值 150 元到 3000 元不等！
不知道人们还在等个啥……
奖品  三等奖 10 名，奖品价值 &amp;gt; 300 元
 售价 150 元的 bookdown: Authoring Books and Technical Documents with R Markdown 一书，作者亲笔签名哦！ 售价 180 元的 RStudio 的体恤衫一件。    二等奖 2 名，奖品价值 &amp;gt; 1500 元
 售价 150 元的 bookdown: Authoring Books and Technical Documents with R Markdown 一书，作者亲笔签名哦！ 总价不超过 200 美元的任意数量的 RStudio 的体恤衫和马克杯。 RStudio 贴纸若干（我也不知道这贴纸有啥用）。    一等奖 1 名，奖品价值 &amp;gt; 3000 元</description>
    </item>
    
    <item>
      <title>当 github 的项目做了可视化，我感觉像是上帝在创世纪</title>
      <link>http://www.pzhao.org/zh/post/gource/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/gource/</guid>
      <description>用 blogdown 制作和维护本博客已经一年有余。昨天，我把本网站的发展过程做了一个 5 分钟的视频，从开始到现在。
视频里，先是飞出来一个小人儿，一发功，biu biu biu，就激发出几个星系。小人儿在星系间穿梭，所到之处，如漫天烟花绽放。在抬手一挥间，一个个星球诞生，一个个星球毁灭。最后，整个宇宙稳定下来，成为 pzhao.org 现在的静稳态。
 Youtube 视频
那个小人儿就是我。创世的感觉，有没有？
简单解释一下：
 视频里，每个圆球代表本网站在 gihub 的项目里的一个文件； 小人儿用手电筒照亮一个圆球，代表生成或修改这个文件。 顶部显示的是实际时间。  回顾这一年使用 blogdown 做博客的历程，出现过三次爆炸：
 第一次当然是开头，创世纪嘛，产生了很多新文件。 第二次是 2017 年 11 月，content 文件夹大爆炸。这是我把 wordpress 的旧博客全部搬家过来的大事记。 第三次是 2018 年 4 月，我把 public 文件夹给毁灭了，从此再也不在本地编译了，写完 .md 文件就直接同步，全权交给 netlify 处理。  视频很酷，制作起来是不是很麻烦？
不费吹灰之力。
这个可视化视频是用 gource 制作的。只要在本地安装这个软件，然后 cmd 进入本地 github repo 的文件夹，运行 gource就行了。想录制成视频，只需设定合适的参数，然后用 ffmpeg 转换一下即可。
爽极了。
比这个更爽的，是团队合作 github 项目的可视化。
我在 steemit 社交平台混了有一段时间了。前不久，召集一群义士合编了一本书，叫《Steem 指南》。我们在 github 上写，用的是 bookdown 框架。</description>
    </item>
    
    <item>
      <title>独狼死，群狼活：R 语言女子学习小组 &amp; 书友之窗</title>
      <link>http://www.pzhao.org/zh/post/xuer-girls/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/xuer-girls/</guid>
      <description>文科女生 @dancingapple 买了《学 R》这本书，郑重宣告开始学习 R 语言。这个圈子里，据我所知，买了这书的还有：
@tvb, @nostalgic1212, @veronicazhu, @hqy&amp;hellip;
都是女生！
感慨之余，我做了个文案：
 长得好看、唱歌好听、文笔优美、脑瓜聪颖的文科女生都开始学编程了，我为适龄小伙子们感到深深的忧虑。
 不忧虑能行吗？用 @windowglass 的话来说：
 电脑问题被客服解决了……
扛米扛油的问题被天猫超市解决了……
打不开的瓶瓶盖盖被电吹风解决了……
男人，哪里才是你发挥作用的地方？:P
 现在，连 R 语言编程领域也沦陷了……
不过，男同胞们不要担忧，光靠买本书自己啃，哪怕这本书写得像个段子集，她们仍然有半途而废的风险。
除非，除非她们组成一支“女子学习小组”，互相帮忙互相敦促。
想当初我学 R 语言，开始时就是翻了很多本书，死活入不了门，最后全靠身边的同学同事帮带才算迈过门槛。
一旦迈过去，一切山重水复，全都柳暗花明。
 One wolf dies, but the pack survives.
&amp;mdash; Game of Thrones
独狼死，群狼活。
&amp;mdash;权力的游戏
 那么，为啥非要“女子小组”呢？“男女混合”不好吗？
在编程语言这个事情上，我觉得不好。至于哪里不好，我不想说……
若有意加入这个小组的，请联系 @dancingapple。我会为这个小组的 R 语言学习提供全方位的支持！
虽然，我现在也不知道自己能做点啥。
思来想去，我就先对《学 R》一书的网站做了全方位的调整吧。为学习小组新增了个“书友之窗”的栏目，主要用来转载跟书相关的帖子，包括读后感、学习笔记、吐槽、纠错……
咦，怎么里面混进来个男的？
先不管了。如果书将来再版，那么这个栏目里的文章，有可能收进书的正文、封底、腰封……
欢迎大家往“书友之窗”投稿！联系方式见《学 R》一书的主页。</description>
    </item>
    
    <item>
      <title>答《学 R》读者</title>
      <link>http://www.pzhao.org/zh/post/xuer-faq/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/xuer-faq/</guid>
      <description>我主笔的《学 R》一书正在热销。有些朋友问了一些问题，我在此一并作答。
1. 《学 R》能在当当网买吗？ 能。目前已在天猫、当当、京东、微店四大平台的几十家书店上架。搜索书名就能找得到。
2. 买到的书会不会是盗版？ 目前不会，因为刚开始卖，来不及盗。R 语言目前算是小众软件，估计盗版商应该盯不上吧。
将来如果卖得特别好就不好说了。我也是头一回出书。欢迎大家交流这方面的经验。
3. 能不能公布电子版？ 暂时不能。不是版权的问题。虽然印刷品的版权归出版社，而电子版的版权我随便，然而出版社为出书投入了大量的人力和物力，人家也是要吃饭过日子的，出书的目的之一是赚钱。要是公布电子版，导致书卖不出去赔了，人家以后就不跟我玩了。
不过，书的雏形在我的博客上有，只需搜索“大鹏 R 菜鸟入门”就会找到我博客上的相关帖子，可以试读，觉得有用、想进一步学习的话再买。
4. 能不能打折？ 书价是出版社定的，网上商城的折扣是书店定的。各个书店有不同的让利折扣。是目前折扣最大的 6.9 折。
5. 你从写书里能赚多少钱？ 书定价 68 元，我拿的是版税，每卖出一本书，我得到大约 3 块钱人民币。
版税是跟出版社协商决定的。有时候作者拿到的是稿酬。例如，我的下一本书是翻译的一本面向中小学生的科普小册子（已经完稿），拿的就是稿酬，比较少。
上架初期，作者是拿不到收入的。一般要等书销售一段时间，出版社收回一些成本后，才开始支付给作者。这也是前面提到的为何不放出电子版的原因之一。
6. 你是怎么出的书？我也想出，该怎么办？ 我博客的读者（同时也是现实生活里的朋友）认识出版社的朋友。出版社在选题的时候，读者向出版社推荐我的“R 菜鸟入门”系列，认为风格有特点，解决了普通人学习 R 语言的痛点，有市场。出版社就联系我，在原有框架上去粗取精，扩充内容，推敲语言，才有了此书。
如果你也想出书，并且想赚点稿酬或版税的话，关键有两点：
 你的书能盈利； 你的书有比较高的阅读价值和社会反响。  只满足 1 的话，书商会有意向；只满足 2 的话，可以自费出书；两者都满足的话，基本没问题。
你可以先试发一些书稿，积攒一些口碑之后，再设法联系出版社来评估。
期待你早日出书，到时候希望我能买得到。</description>
    </item>
    
    <item>
      <title>雪山下的夏天</title>
      <link>http://www.pzhao.org/zh/post/baggersee/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/baggersee/</guid>
      <description>村里有个湖，景色不错，却取了个糟糕的名字，叫 Baggersee，直译就是“挖掘机湖”，因为这个湖不是天然形成的，而是人工用挖掘机挖出来的。还能有更糟糕的命名方法吗？
我们一般管这湖叫“人工湖”——这个名字也不怎么样，但总胜过挖掘机。
人工湖在旅游淡季是免费开放的，也就是 11 月到来年 4 月。从 5 月开始就要收门票了。湖里可以划船和游泳，湖边有供小朋友玩水的浅水区和儿童乐园，还可以打乒乓球——虽然我一次也没打过。
不是不想，而是没时间。我把时间都花在带娃、拍照和看美女了。
湖边，有很多美女穿着比基尼晒太阳。比基尼美女这些年见得多了，也见怪不怪审美疲劳了。不过，这里的不同之处在于，远处有雪山。雪山+比基尼的组合是不多见的。
自上而下，蓝天、雪山、针叶林、阔叶林、湖水、草地，出现强烈的层次感。这时再出现个美女——我只恨我的相机和我的摄影水平不专业，照不出我理想的效果。
然而，在孩子眼里，石子儿显然比拍照要有趣得多。
无意看到湖边有一双凉鞋，鞋的主人不知哪里去了，而那双鞋放在湖边的模样和角度，让我忍不住趴下来，拍了一张照片。我觉得这双鞋像两只小船，所以取名“远航”。
华为 mate 10 lite 拍摄。</description>
    </item>
    
    <item>
      <title>旧物断舍离：婴儿背带</title>
      <link>http://www.pzhao.org/zh/post/baby-carrier/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/baby-carrier/</guid>
      <description>我不知道这个东西为什么这么贵，新买一个要 99.99 欧。
这个东西德语叫 Babytrage，英文叫 baby carrier，字面上很好理解。但是，中文名叫“婴儿背带”，就是个很糟糕的翻译，猛一听还以为是给婴儿穿的背带裤的背带。
在德生刚出生没多久，我们就买了这个东西，当然仍然是买的二手货，那也要 60 欧元。实在找不着更便宜的了。好在原主人保管得很好，原价的价签还贴在包装上，看了之后算是得到一点心理安慰。
这个东西用起来是这样的：先把这个东西的腰带系好，然后把婴儿抱起来，两腿分开坐在里面，再把背带部分扣上。可以抱，也可以转到背后背着。
德生几个月大的时候，我就是这样抱着他。确实比用手臂抱着要省力多了，而且孩子也舒服，经常在里面睡着。大人的双手解放出来，就可以做一些其他有趣的事，比如干家务活儿。
不过，现在翻出这个东西，我心生疑惑：当时有婴儿车，为什么不把孩子放进婴儿车里呢？这个东西有必要吗？
我完全不记得买它的理由了。但是我清清楚楚地记得，当时的情形是必须要这么个东西来抱孩子。
记忆，真是个奇怪的东西。</description>
    </item>
    
    <item>
      <title>我主笔的《学 R：零基础学习 R 语言》一书已面世</title>
      <link>http://www.pzhao.org/zh/post/xuer-sale/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/xuer-sale/</guid>
      <description>书终于印好面世了。感谢北大的朱彤教授和 RStudio 公司的谢益辉博士慷慨作序。据我所知，这应该是国内第一本用 R bookdown 包来写作和排版的书。书的主页是 http://xuer.pzhao.net。
朱彤教授（北京大学环境科学与工程学院院长）推荐语：
 受作者邀请为此书写序，感到惶恐和高兴。多年来，我们研究组很多同学都在学习和使用 R 语言，作为老师的我却从来没有用过，要为一本关于 R 语言的书写序，自然感到很惶恐。而当我打开这本书，没有看到晦涩难懂的概念、公式，在风趣易懂的语言、引人入胜的描述下，很快阅读完了前几章，不仅迅速跨越了零基础的障碍，更为两名作者为广大的数据统计分析和 R 语言学习人员提供这样一本独特、有趣的入门书而感到高兴。
 益辉推荐语：
 这本书最大的亮点应该是作者真心倾注了热情在里面，从字里行间可以感受到他们总是在鼓励你试试这个、尝尝那个，仿佛一直在拿胳膊肘子捅你：喂，这里很好玩哟，这里是见证奇迹的时刻哟。我相信这样的书读起来一定会很吸引人。
在内容涵盖范围方面，我感觉这本书尤其适合学术界以及那些对 R 语言有钻研爱好的读者，当然我也相信它对其他读者一定也会有很多帮助。它介绍了很多“经世致用”的技能，可能那些圣贤书上都不会讲但又很实用，可以以很快的速度学以致用，这一点在这个所谓的“数据科学”时代尤其重要。这本书涵盖的统计学主题相对少一些，但作为一本入门读物也无妨，因为当你玩上瘾之后，继续深挖其它主题就会势如破竹。
 编辑推荐语：
 本书是一本真正站在学生角度的原创；没有枯燥的术语和公式，非常适合零基础和不懂统计学的读者学习如何使用R。本书可作为大学本科生和研究生自学用，也可作为高校教师教案。
 购买方式 购买方式：天猫，当当，京东，微店。如果链接失效，请在这些平台直接搜索“学 R 零基础学习 R 语言”即可。
要好的朋友们，很抱歉，我现在国外，这书我连一本都没拿到，也没法回去当面赠送或签名——反正我的签名也不值钱，所以缺个签名也没啥损失，对吧。
书名和内容 这本书书名叫《学 R》，副标题“零基础学习 R 语言”。内附我的清晰彩色正面露脸靓照一枚，可以辟邪，如假包换。全书有点厚， 360 页，重一斤一两，出门可用来防身，居家可睡卧当枕。
—— 啥是 R 语言？这个不重要，重要的是 R 语言能用来做什么。
除了科研必需的数据分析、统计计算及作图外，我现在用 R 来撰写学术论文、做备忘录、制作幻灯片、整理读书笔记、整理照片、写书、记录吉他谱、写博客、做网站。
此书号称“史上最容易上手的 R 语言教程”。不管你的背景是理工农医还是文史哲，都容易从这本书入手，掌握 R 语言这个利器。全书含有大量习题和解答，共 19 章。绝大多数章节（除了第 17 到 19 章由合作作者完成外）是我写的，所以感觉上当受骗的话，可以直接找我吐槽。
读者反馈 这本书的前身是我的系列博客“R 菜鸟入门”，自发布以来的几年里好评如潮——这也是为什么出版社找我写这本书的原因。读者的反馈被印在了书的封底。自夸一万句，也不如别人夸一句。感谢大家为我说好话！
有朋友已经买到了这本书，开始给我勘误了。例如，有位朋友反馈说：
 第 107 页的“考来考去”应为“拷来拷去”。</description>
    </item>
    
    <item>
      <title>独家！影视剧组的花絮照片</title>
      <link>http://www.pzhao.org/zh/post/kids-in-movies/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/kids-in-movies/</guid>
      <description>最近，我非常幸运地获得邀请，去几大影视剧组进行现场参观。这些剧组名气大极了，说出来是无人不知无人不晓。而我能获得如此殊荣，到今天都不明白是为什么。
下面是我偷拍的一组现场花絮照片，独家发布，谢绝转载。
入镜的演员是我家二娃德生，德生的校友kk，kk 的爸妈，以及不知名的小女孩。</description>
    </item>
    
    <item>
      <title>旧物断舍离：电动搅拌器</title>
      <link>http://www.pzhao.org/zh/post/bosch-stabmixer/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bosch-stabmixer/</guid>
      <description>翻出一个电动搅拌器，搁置几年不用了，放到了二手市场网。
这个东西德语叫 Stabmixer，可能中文不叫“搅拌器”，但我不知道确切叫什么。就是用来把食品弄碎，打成泥状。
德生小时候，我们买了这个东西给他用。然而德生不喜欢吃泥状食品，一长出牙齿就把这个东西打入冷宫了。基本没怎么用，而且以后也用不着了。
这样的东西迟早要处理掉，所以我从一开始就留了个心，把原包装都留着——买家会感觉舒服，而且说不定能卖个好价钱。
这个东西原价二十多欧，我出价 11 欧，留出了 1 欧元的还价空间。
很快就有人联系我了。我以为是个孩子爸，一见面才发现那气质不像。这个男人五十岁上下，说要拿这个东西做早餐。
我很惊讶：这东西不是给婴儿用的吗？
他哈哈大笑：没说是给婴儿用啊。谁都能用。
他痛痛快快付了钱，高高兴兴拿走了。没还价。
第二天早上，他发短信给我，说他用这东西做了早餐，东西不错。</description>
    </item>
    
    <item>
      <title>COS 的杯具</title>
      <link>http://www.pzhao.org/zh/post/cos/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/cos/</guid>
      <description>上周我们组的同事去维也纳开欧洲地学年会，带回来个马克杯。上面印着 COS。
转过来一看，是 OCS。
我一看就想笑：他们终于把 COS 和 OCS 弄到一个杯具上了。
COS 在化学上表示氧硫化碳——也就是把二氧化碳 CO2 其中的一个氧（O）原子换成硫（S）原子，就成了 COS。拍个照片就明白了。二氧化碳分子，是一个黑色的碳原子被两个红色的氧原子夹着：
而氧硫化碳分子，是一个黑色的碳原子被一个红色的氧原子跟一个黄色的硫原子夹着：
为了表示碳原子被夹着，COS也经常写成 OCS（照此逻辑，二氧化碳 CO2 也可以写成 OCO）。这两个写法在科研文献里并存，以至于我们组新来的学生在阅读文献是提出疑问：
 为啥这么乱？到底该咋写？
 这回，欧洲地学年会的 COS 社区弄了这么个杯子，两种写法都印在上面了。照我的理解，意思就是：
搁置争议，共同开发。
COS 又叫羰基硫、硫化碳。
COS 还是网站“统计之都”的简称（Capital of Statistics），域名是 cosx.org。我常在这个网站的 R 语言板块混，欢迎来这里探讨 R 语言学习和使用过程里的各种问题。</description>
    </item>
    
    <item>
      <title>森林里的背影</title>
      <link>http://www.pzhao.org/zh/post/kids-in-forest/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/kids-in-forest/</guid>
      <description>kk 跟我家德生以前在同一个幼儿园，玩得很好，算是校友。kk 家住在城市郊区，下楼就是一片广阔的儿童乐园，旁边有球场，象棋桌，乒乓球台，还有溪流，山坡，农田，实在是一处老少咸宜童叟无欺的遛娃圣地。
就选在这里遛娃咯。
远方的雪山白头犹在，近处的蒲公英开得正欢。
花儿朵朵向太阳
结伴玩起来就是好。跷跷板的另一头是 kk 爸，不入镜。
童年
这里玩起来我已经很满意了。可是 kk 爸突然有了新主意：不如去附近的森林里骑马玩。
西游记剧照
森林里的背影
拍上面这张照片的时候，我想起龙应台那段著名的文字：
 我慢慢地、慢慢地了解到，所谓父女母子一场，只不过意味着，你和他的缘分就是今生今世不断地在目送他的背影渐行渐远。你站立在小路的这一端，看着他逐渐消失在小路转弯的地方，而且，他用背影告诉你：不必追。
 可是，我们好想看看你的正面。德生，快，转过来照一张。
不给你看脸
那天德生穿了两只袜子不成双，一蓝一红。他说，幼儿园现在流行这么穿。
好吧。
森林里树木浓密，偶尔有阳光从树叶的缝隙洒下来，勾勒出我们的轮廓。
牵手</description>
    </item>
    
    <item>
      <title>旧物断舍离：自行车婴儿座椅</title>
      <link>http://www.pzhao.org/zh/post/baby-bike-seat/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/baby-bike-seat/</guid>
      <description>家里地下室小仓库越来越满，越来越乱。有些东西，直接扔掉吧，就会眼睁睁看着被垃圾车的锋利牙齿咬碎运走，可惜得很，不如整理整理，能卖就卖，卖不了的就送，送不了的再扔也不迟。
首当其冲的，就是自行车儿童座椅。
这个儿童座椅，是我们刚来德国时给大娃买的，二手货。当时还不了解资本主义发达国家的生活状态。为了省钱，开始想让大娃直接坐着自行车后座上。我们小时候不就是这样的嘛。
不过，很快我们就被朋友告知，那样是不行的。必须安装座椅，必须扎紧座椅上的安全带，孩子必须带上头盔。如果不这样，被警察抓住了会罚款。
想想也有道理。我小时候就有一次，脚伸到了自行车的后轮里，疼得哇哇大哭。那天阳光明媚，树影婆娑，几十年过去了我的都忘不了，可见是多大的心里阴影。
可是，新的座椅动辄上百欧元。于是，我们就去跳蚤市场买了个旧货，名牌，忘了花了几十欧元，就这也很心疼，换算成人民币几百块钱呢。几百块钱够买好几辆自行车了。
娃长得快，这个婴儿座椅很快就坐不进去了。后来二娃出生，继续用。孩子们飞快地长大，现在，连二娃也坐不进去了。
我把座椅放到二手市场网，出价 14 欧元。很快，就有人联系我，问能不能便宜点。
14 欧元怎么便宜？13 数字不吉利，12 又太贱了。我说，那我送你一个婴儿头盔好了。
这头盔也是我们买的二手货，以前从来没注意过，这次仔细看了看，居然是 2002 年生产的。
约好了时间，买家来了，是一对年轻的夫妻，提着婴儿篮，篮子里那个长得像外星人的娃娃正在呼呼大睡。</description>
    </item>
    
    <item>
      <title>雪山环抱的温泉</title>
      <link>http://www.pzhao.org/zh/post/kids-in-forest/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/kids-in-forest/</guid>
      <description>从我们村驱车1小时，有一家有名的温泉浴场，叫做 Aqua Dome，直译过来就是“水族圆顶”，四星级，闻名遐迩。一大特色是这个温泉的水池很大一部分是在室外露天的，周围是阿尔卑斯山的雪山环抱。
可是我们从来没去过。
最近，朋友送给我们一张半价优惠券，一张家庭天票（两个大人+三个小孩）原价八十多欧，现在只需四十多欧，不去一趟，实在暴殄天物——和天票啊。
一路驱车而去。为了省钱，我们躲开了高速公路，改走乡间路。虽然多花了 20 分钟，但沿途风景比高速要美多了。
跟乡间路并行的是火车轨道。孩子们看着火车轰隆隆而过，高兴地欢呼。
严格来说，温泉浴场是禁止拍照的。但是，至少得有个留念吧，我又不偷怕美女。这是室内：
这是室外：
室外这个圆锥形的玻璃建筑，里面是螺旋状楼梯。沿楼梯上行，有三个出口，通往旁边那三个大碗。每个大碗是一个独立的温泉池。
我匆匆拍完就把手机收起来了。还是看看官方的照片吧，比我拍得好看多了。这是夏天：
图片来源：wikimedia.org
室内有块专门给孩子玩的区域，还有个水滑梯：
图片来源：Aqua Dome 官网
这个区域旁边，还有个儿童乐园：
图片来源：Aqua Dome 官网
以温泉为中心，周围有配套的旅馆、餐厅，免费停车场，一个非常适合家庭度假的地方。
就是太花钱了……</description>
    </item>
    
    <item>
      <title>带娃去爬山</title>
      <link>http://www.pzhao.org/zh/post/hiking/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hiking/</guid>
      <description>阿尔卑斯山是个山脉，从西边的地中海一直蔓延到东边的斯洛文尼亚，很长。我家住在其中一座山的半山腰。
住在山里的坏处是出行和停车不便，动不动就上坡下坡，我的自行车基本用不上，连孩子的自行车拖车都被我卖掉了——人力实在蹬不动。
当然也有好处，那就是景致美，爬山方便，出门右转就进入了爬山路线。走个几分钟，就成了山路。每到周日，市里边的书店、图书馆、超市等地方到处都不营业，能去的地方很少，于是就常带孩子去爬山。
大娃走得快，往前一个劲儿猛冲。
我走在中间，给后面的妈妈和二娃拍照。
偶尔停下脚步，拍拍路边的野花，心里想：踩不踩，踩不踩，不踩白不踩……
这一段山路非常适合家用，可长可短，可难可易。选最容易的路段，十来分钟就从另一侧绕下来了，下面还有小桥流水。没人给我拍照，我在桥上自拍一个。
回来路经小山村。说是“山村”，其实是属于城市——这城市就建在山谷里。不过，说它是个“村”，是有道理的。比如这一家，把玉米摆成了个十字架挂出来晒，浓浓的田园风：
所以就是个城中村吧！
下面这是一家餐馆的窗子。传统结构，内层是玻璃窗，外层是木板。白天模板打开，晚上关上遮光。
路过一家民宅，白墙、明窗、木椅、自行车和垃圾桶。
有种时光停留的错觉。你能感觉到吗？
感觉不到是正常。我拍不出来。
山里的房子经常是整洁鲜艳的，我疑心他们是怎么维护的。这回，经过一条马路，因为来往车辆比较多，路边的房子有些脏了，而窗子的外框是白色的。有个男人正在用刷子蘸着白漆刷窗框。
我很想抓拍一张他举起刷子的特写，可是总被来往车辆挡住。后来，他突然转身回屋了，最终只好作罢。
在另外一个角落里，一扇玻璃窗映出了对面的人影。是个“灰姑娘”在擦玻璃，脸上洋溢着快乐。我赶紧举起手机，拍了个我跟美女的合影。
一家院子里，大自行车和儿童自行车一前一后停放，白墙上是宗教主题的浮雕，靠在墙上的是棕枝主日那天用的树枝。可惜隔着铁栅栏，拍照的时候有一根铁丝怎么躲也躲不开。</description>
    </item>
    
    <item>
      <title>植物园的复活节</title>
      <link>http://www.pzhao.org/zh/post/easter-inn-bg/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/easter-inn-bg/</guid>
      <description>我家原先在德国住的时候，那座小城里有个生态植物园，里面有森林、池塘、温室，面积很大，我们经常去带孩子散步，走一圈得花一个小时。因为离大学近，我们对植物园感情颇深，就像自己家的御用避暑山庄。
后来，举家搬到了奥地利，刚搬过来，就听说这里也有个植物园。于是，就兴冲冲地跑去看。这一看，大失所望——太小了，5分钟就能走一圈。不过，聊胜于无，节假日如果没有别处可去，我们就来植物园。
时间一长，渐渐爱上了这个小植物园。小有小的好处，孩子可以随便撒开跑，只要不出大门，就容易找得到——除非玩捉迷藏故意藏起来。而且，这个植物园，每年的复活节都有 Familienfest——这是德语的说法，写成英文就是 family festival，家庭节日。有惊喜哦！
去年的复活节，我们啥惊喜也没得到。今年的复活节，我们又来了。能不能有惊喜呢？
植物园的室外部分平时就是免费开放的。复活节这一天，温室也开放了。温室里有各种植物和小桥流水。跟往日不同，新增了很多展台，教小朋友们识别植物。
同行的 KK 爸是位物理学博士后。他一本正经地给孩子们讲解：
 这个最好别摸。摸的话，要用科学的方法……
 正在池塘观鱼，听说有木偶戏表演，就迅速杀了过去，并在后排抢到了座位。
别处的木偶戏没看过，不知道是啥样。这边的木偶戏一大特色就是跟观众互动频繁。比如问孩子们某个东西藏在舞台上的啥地方啊，比如把水喷前排孩子一身啊，比如撒个花让孩子们抢啊……
而复活节的重头戏，当然是找彩蛋了！有几十个彩蛋藏在园子里的各个角落。小朋友要做的，就是数一数有多少个，填表参加评奖。去年我们不懂规矩，把找到的彩蛋都装进了口袋，然后拿去换奖品……结果导致若干小朋友没有数对。
到了评奖的时候了。主持人现场公布答案，41 个彩蛋！我们数的是 39 个。现场发奖。
突然听到了二娃的名字。惊喜！我们中奖了！奖品是一盆小花。</description>
    </item>
    
    <item>
      <title>自制伴奏《春天里》</title>
      <link>http://www.pzhao.org/zh/post/in-spring/</link>
      <pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/in-spring/</guid>
      <description>春天来了，冬天还会远吗？最近，我的全民 K 歌账号的好友里，好几位打算唱汪峰的《春天里》。我也想唱，可是，听了好几个伴奏，包括汪峰的原版伴奏，我都不满意。
原因是，这歌当年我头回听的是旭日阳刚宿舍版，一把木吉他伴奏。先入为主，我觉得这歌只有木吉他伴奏味道才对。
全民 k 歌有旭日阳刚春晚版，伴奏令我很失望。
于是我自己弹木吉他，录了个伴奏在这里。希望别人来使用，合唱也好，独唱把我的嗓音覆盖也行，无所谓。用的时候别理歌词，因为跟伴奏对不上。
这歌我好多年没唱了，歌词忘了，所以录时只唱了没几句。吉他很久不弹，左手按弦没力气，但好歹是弹完了。
《春天里》原版是没有前奏的，我添了一段，来自《同桌的你》，不是串歌了，是我故意的。
下面是许多年前的春天，我弹唱这歌的录像。
 意外的发现，费玉清也唱过一首《春天里》。一听，这不就是姜昆以前在相声里用过的嘛。原唱赵丹，出自 1937 年的电影《十字街头》，词作者是关露：
 春天里来百花香，郎里格朗里格朗里格朗
和暖的太阳在天空照，照到了我的破衣裳
朗里格朗格朗里格朗, 穿过了大街走小巷
为了吃来为了穿，昼夜都要忙
朗里格朗朗里格朗，没有钱也得吃碗饭
也得住间房，哪怕老板娘作那怪模样
朗里格朗里格朗，朗里格朗朗里格朗
里格朗，里格朗，里格朗，里格朗
贫穷不是从天降，生铁久炼也成钢，也成钢
只要努力向前进，哪怕高山把路挡
朗里格朗格朗里格朗，遇见了一位好姑娘
亲爱的好姑娘，天真的好姑娘
不用悲不用伤，人生好比上战场
身体健，气力壮，努力来干一场
身体健，气力壮，大家努力干一场
 这么一比，汪峰的《春天里》显得好矫情。</description>
    </item>
    
    <item>
      <title>村立图书馆</title>
      <link>http://www.pzhao.org/zh/post/stadt-buecherei/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/stadt-buecherei/</guid>
      <description>我家不管男女老少，都喜欢本村的村立图书馆。
这家图书馆位于村中心，隐藏在一个小院里，我刚来的时候找它着实费了一些气力。图书馆的门口有个儿童乐园，非常小，只有一架双座秋千和一个弹簧车，以及一排木椅，然而因为朝向好，总是阳光充沛。孩子小的时候，经常是他们在荡秋千，我坐在椅子上晒太阳，很安静也很惬意。
现在，他们对这个儿童乐园不满足了，因为图书馆里的世界更精彩。
图书馆有两层。二楼全是书架，我们基本不去；一楼有存包柜，报刊角，咖啡机，很多人边喝咖啡边读报。
我们对咖啡和德语报纸没什么兴趣。最吸引我们的，是有几只舒服的大沙发和儿童活动角。
儿童活动角除了摆满了童书外，还有一书架桌面游戏。两个孩子挑一套游戏能玩半晌，而我则是以葛优躺的姿势卧在沙发上玩手机。这里有免费的无线网。周末，本来是我带孩子的时候，没时间上微信，但是如果我在不应该出现在微信上的时候在微信活跃，多半就是躺在图书馆的沙发里。
这里进出自由，不需要任何证件。如果想借书和游戏出去，需要办证，每年 8 欧元——相当于一本普通童书的价格。
而对我来说最划算的是这里的 DVD。满满一墙的 DVD，老的电影有《大独裁者》《乱世佳人》，新的有《权力的游戏》第七季。配音一般都是多语种，除了必备的英德双语外，经常还有法语、意大利语、土耳其语、西班牙语音轨——当然，对我来说没啥用。
我翻出了几张中国电影，都被译成了德语。猜猜看，你知不知道下面这几部电影的中文名？</description>
    </item>
    
    <item>
      <title>卖车</title>
      <link>http://www.pzhao.org/zh/post/car-sold/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/car-sold/</guid>
      <description>前几天，把我的旧车卖了，成交价 478 欧元，折合人民币约 3800 元，还不够买个像样的新手机。
这台欧宝（Opel Astra）是四年前买的，是我拥有的第一台车。当时买的时候，已经行驶了 12 万公里，三手车——在我之前已经有了两个主人。花了 3300 欧元。
当时我刚刚拿到欧盟驾照，怕把车磕磕碰碰的，心疼，再说也没有多少闲钱，就买了这么台旧车。
一晃四年过去了，除了被我老婆开的时候出了三次小事故之外，我没有出现任何设想的剐蹭什么的。欧宝很争气，虽然小毛病不断，但从来没有抛锚过。后备箱很大，装上大娃的滑雪设备、二娃的婴儿车、以及一天的吃吃喝喝，都毫无压力。陪我去过德国、奥地利、匈牙利、意大利、列支敦士登、瑞士六个国家。
今年年初，欧宝没有通过年检。去车行一检查，需要花 3000 欧元的维修费。
算了，还不如再买台新的旧车。于是，就四处打听卖车的事儿。
很多私人收购旧车，修理修理，就拉到罗马尼亚廉价卖掉。然而，我问了好几个，都表示对我的欧宝不感兴趣。
没办法，最后去了一家名叫“我们买你的车”的旧车收购商。现场估价 478 欧，有零有整。
我不想再拖，就签了字。最后看了一下里程表，18 万公里。</description>
    </item>
    
    <item>
      <title>我村惊现周杰伦</title>
      <link>http://www.pzhao.org/zh/post/jay-chou/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/jay-chou/</guid>
      <description>前些天，“奔跑吧兄弟”（跑男）来我们村拍摄。邓超、鹿晗都来了。我村很多华女人，不管未婚还是已婚，闻讯后纷纷去机场和酒店围追堵截。
老汉我一把年纪了，对邓超兴趣不大，连鹿晗是谁也不清楚。但是，听说周杰伦也来了。
周杰伦不是参加跑男，而是他老婆（我忘了叫啥名字）参加，他陪同。跑男这个节目我没看过，但是跑男跑男，怎么会混进来女人呢？
不论如何，我对周杰伦还是比较感兴趣的。无奈以老迈之躯，实在懒得起早贪黑地追星。于是，只是在本村的微信群里看他们聊追星的各种八卦。
直到明星们离开本村，我都没看见一张粉丝跟明星的合影。
看来，现场安保力度很大哦。
不过，有人晒出了下面这张照片。
我一看就惊叫：这不是我常带娃玩的儿童乐园嘛！距离我家步行只有十分钟！明星们的行程不包括我们小区，难道是老婆跟别的男人拍电视，周杰伦闲着没事儿干，自己转悠到这儿来了？
于是，我也去这个地方，拍了一张照片。距离周杰伦离开现场大约24小时。
吐槽一下，周杰伦的摄影师机位取得真低啊，为了让背景各个实物有相同的相对位置，我的摄像师(我老婆)几乎趴在了地上。
找找看，两张照片有几处不同相同？到底谁更老？</description>
    </item>
    
    <item>
      <title>华为手机拍春色</title>
      <link>http://www.pzhao.org/zh/post/easter-inn-bg/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/easter-inn-bg/</guid>
      <description>二娃去楼下玩，回来兴冲冲地告诉我：春天来啦！
于是，我就拿着新买的华为 mate 10 lite 手机下楼拍照。
这是水仙。
下面是番红花：
从我家步行下山，必经一个斜坡。这个斜坡，由于角度和光线的原因，会遇到漂亮的影子。
沿台阶而下，小径侧面的岩石上，经常看见蜥蜴。这是我来到这座城市后比较惊奇的地方。之前我几乎没有近距离接触过蜥蜴。
这里出没的蜥蜴，躯干一般有手掌长短。要是算上头尾，就有小臂那么长了。他们经常趴在路边的岩石上一动不动，像是个塑料模型，等你拍照。但是，一旦走近，他们就像突然有了生命，刷的一下就不见了。
当然，“刷”是我加上的。实际上，没有一点声响。
所以，当我把手机靠近一个蜥蜴拍照，它居然没走，我大气不敢出，连心跳都想停下来。
我对远处的孩子们招招手，让他们来看。等我一转眼，蜥蜴已经不见。 所以我们只能看蒲公英了。
一到春天，山里遍地都是蒲公英。孩子的姥爷姥姥经常去山里采蒲公英的叶子，也就是“婆婆丁”，当作野菜吃。免费、健康又下饭。</description>
    </item>
    
    <item>
      <title>世上安得两全法，不负如来不负卿</title>
      <link>http://www.pzhao.org/zh/post/monkey-king-3/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/monkey-king-3/</guid>
      <description>最近得知电影《西游记 女儿国》的上映。我对剧情完全无感，只对主题歌产生了兴趣：
男：
世上安得两全法 不负如来不负卿
反省凡心损梵行 从来如此莫聪明
既生苦难我西行 何生红颜你倾城
如何抹去你身影 如同忘却我姓名
女：
说什么王权富贵 怕什么戒律清规
心恋我百转千回 快带我远走高飞
念什么善恶慈悲 等什么望穿秋水
任来世枯朽成灰 换今生与你相随
歌词乍一看很好，却隐约觉得有些不对劲。
好自不必多言，不对劲在哪里呢？
歌词的作者，署名是“仓央嘉措/杨洁/赵英俊”。
仓央嘉措是谁呢？西藏六世达赖，生活在清康熙年间，身世传奇，有“情僧”之称。
一位活佛，被称为“情僧”，下场好不了。一边当活佛，一边谈恋爱，除非有济公吃鸡的本事，否则就像唐后主李煜：好诗人，却是个不务正业的糟糕领袖。
仓央嘉措怎么就成了词作者呢？因为歌词里有这么一句，据说是仓央嘉措所作：
世上安得两全法 不负如来不负卿
然而，细细考察，这两句却并非仓央嘉措的原句。
原句是什么？
是这样的：
མཛངས་མའི་ཐུགས་དང་བསྟུན་ན།།
ཚེ་འདིའི་ཆོས་སྐལ་ཆད་འགྲོ།།
དབེན་པའི་རི་ཁྲོད་འགྲིམསན།།
བུ་མོའི་ཐུགས་དང་འགལ་འགྲོ།།
晕了没？我是晕了。是的，原诗用藏语写成。藏学家于道泉（已故）将它直接翻译了过来，就是：
若要随彼女的心意
今生与佛法的缘分断绝了
若要往空寂的山岭间去云游
就把彼女的心愿违背了
后来，文学家曾缄（已故）觉得这个翻译丧失了韵味，于是重译为：
曾虑多情损梵行，
入山又恐别倾城。
已经翻译完了，但是感觉好像这诗没说完啊，于是译者加了两句，来深化主题：
世间安得双全法，
不负如来不负卿。
这样看来，这两句的作者与其说是仓央嘉措，倒不如说是曾缄。
这首歌的男声显然是唐三藏的口吻。唐朝的和尚唱起了清朝和尚、而且是汉传佛教高僧唱起了藏传佛教活佛署名的诗，弄得我有点想参加吐槽大会了。
好在意境上，仓央嘉措的诗句，跟唐僧的两难心境是相当吻合的。
然而，后面的歌词就不对路了。
快带我远走高飞
事实是唐僧要远走高飞，离开女儿国去西天取经，女王不肯离开她的国土和臣民，怎么唱成了女王想远走高飞呢？如果那样的话，不如随唐僧一路西行啊，权当收了个四徒弟。</description>
    </item>
    
    <item>
      <title>如何妥当地复制或同步文件</title>
      <link>http://www.pzhao.org/zh/post/sync/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/sync/</guid>
      <description>事情的起因是这样的：有人在群里问了个技术问题：从 Ubuntu 操作系统的电脑里，往另一台电脑里拷贝或同步一批文件，该如何操作？
虽然问题是针对 Ubuntu，但我们的解决方案对 Windows 和 Mac 用户也是大有用处的。
最方便的是网盘。
首选 Dropbox， 人送外号“丢丢盒”，是全人类网盘里的带头大哥，跨平台免费。只需在两台电脑上都安装 Dropbox，设置好同步文件夹，那么，往里丢就是了。电脑 A 里的指定文件夹的任何改动，都会实时同步到电脑 B。
Dropbox 提供免费的 2.5G 空间。邀请朋友可以最多得到大约 20G 的奖励。为了不骚扰朋友，我通过邀请自己的小号而达到了扩容的目的。20+G，足够，这些年来用起来毫无压力。
Dropbox 最让我称道的地方是历史版本功能。我经常在编辑文档时手贱，按下了 ctrl+s 并且关闭了文档又后悔。去 Dropbox 的网页上找旧版本文件就行了，这个功能救了我无数次。
带头大哥这么好，可惜，他在大陆被墙了。
一个替代方案是 Google Drive，免费 15 G 空间。这货最近改名叫 Backup and Sync 了，新名字令人发指。功能上不如 Dropbox，配合用一下也不错。
可惜，Google Drive 好像也被墙了。
那就腾讯微云或百度网盘（这个名字同样令人发指）吧，我不常用，不评价。好歹是个网盘吧。
如果文件少，而且是一次性的，那就 email 也行。
但是新的问题来了：如果用网盘或 email，那么文件势必经过中央服务器。如果是隐私文件，你不想在腾讯服务器上留一份吧？
嗯，有时候留一份也无妨，加密就行了，例如使用加密邮箱 protonmail。
如果文件多，邮箱不方便呢？
那么可以用点对点的同步工具，例如 resilio sync。
resilio sync 也是免费跨平台软件。手机、电脑等各个设备上安装一下，设置好各自的同步文件夹，那么只要设备连上网，就自动同步了，不经过中央服务器。
但是新的问题来了： resilio sync 不是开源的；他们说没经过中央服务器，你信么？
不信的话，可以用替代方案：syncthing。这是我此次微信聊天的最大收获。感谢提供这条方案的朋友。
syncthing 也是 P2P 同步工具，而且是开源的。这意味着，全世界的程序员都可以去检查它到底有没有往某个中央服务器传文件。如果发现有，就会被无情揭露，然后被搞死。目前它还活着，说明是安全的，真正的去中心化。
据说 Linux 里还有个 rsync 命令。rsync 的意思是 remote sync。这货没有图形界面，是黑底白字的命令行，我看见命令行就吓得哆嗦，所以就不去试用了。</description>
    </item>
    
    <item>
      <title>Windows 的又一个坑：R writeLines() 函数的换行符</title>
      <link>http://www.pzhao.org/zh/post/r-writelines-line-break/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/r-writelines-line-break/</guid>
      <description>昨天，又被 Windows 坑到了。
事情的背景是，我的工作环境是 Windows 操作系统。由于一些众所周知的原因，有些事情在 Linux 下做起来比较顺当。于是，我就用 virtualbox 装了个虚拟的 Ubuntu。由于不熟，只用到其中很小一部分功能，所以，凡是能在 Windows 下做的事情，我绝不去 Ubuntu。
昨天，我要写一批 bash 批处理文件，打算在 Ubuntu 里运行。这批 .sh 文件结构格式相同，只是内容略有不同。于是，我就动了点小心思，用 R 语言批量写好了文件内容，最后用 writeLines() 函数生成了这批 .sh 文件。
前面我提到了，这些操作都是在 windows 下完成了。保险起见，我特地指定了 writeLines(useBytes = TRUE)，来保证这批 .sh 文件的编码 UTF-8，心想这下应该没问题了吧。
但是，在 Ubuntu 里执行 这批 .sh 文件，居然出错！说什么文件找不到……
为了简化问题，我把从这批运行失败的 .sh 文件里面随便拎出一个，里面删得只剩两条指令：
cd ~ls然后另存为 test.sh 文件，用来测试。运行 test.sh，结果：
这么两条命令，居然还有错？
我记得在 Ubuntu 下直接写的 .sh 文件没这个问题啊。
那好，我就在 ubuntu 的文本编辑器里写了一个一模一样的文件，取名 test2.sh，内容也是只有这两条指令。然后运行，居然好了！
肉眼去看，两个文件都完全相同！我对比了一下两个文件的编码，都是 UTF-8。
这是遇见孙悟空和六耳猕猴了？
我祭出两面照妖镜：一个是 Totalcommander 的文本比较工具，一个是 notepad++ 的文本比较插件。比较的结果是，两个文件完全相同！</description>
    </item>
    
    <item>
      <title>我把青春献给你：排版 (4)</title>
      <link>http://www.pzhao.org/zh/post/latex-and-me-4/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-and-me-4/</guid>
      <description>9
bookdown 或者说 Pandoc 的伟大之处，就是把原先必须在 LaTeX 里做的事情，99.9% 都可以用 markdown 语法完成。剩下的 0.1%，例如公式、索引、控制换行、临时改变字体字号、强制分页等操作，所涉及的 LaTeX 命令都很简单（$$, \index{}、\mbox{}、\small、\newpage），偶尔用一下无伤大雅。只需找个漂亮的编辑器，在 bookdown 下写作就有不错的体验，而生成的 pdf 文档处处透露着 LaTeX 的优雅。平时自用一下，美得不行，仿佛梅开二度，枯木逢春。我为 bookdown 量身制作了 bookdownplus，pinyin 和 mindr 几个扩展包，沉浸在美妙之中不可自拔。
但是，直到这次真正给《学 R》排版，真正要送到印刷厂印个几千本的时候，光有 bookdown 的现成模板就不够用了。《学 R》是本中文书，LaTeX 对中文的支持先天不足，很多细小的问题，得自己一个一个抠。
比如中文里夹杂的英文词的中断换行（hyphenation），总是在不该断的地方瞎断。找不到完美的解决方案，最后我手动添加了 \mbox{} 凑合。
比如段首空两格。我明明记得原先是自动空两格的，不知哪一次升级以后，这个设置就不见了。好在这个不难解决。
比如脚注和上标。bookdown 里^[]表示脚注，两个^之间表示上标。问题是两个脚注连在一起怎么办？要是写成杨过^[]和小龙女^[]，那两个^之间的文字就变成了上标。我试来试去，最简单的就是在中间偷偷摸摸塞进去个空格，把上标结构破坏掉。想来英文不存在这个问题，到处都是空格。
10
所幸，我算是挺过来了。最后排出的文档，虽然不是尽善尽美，但已经达到了我能力的天花板。想要更多也没有了。
只是年轻的时候我从没想过，将来自己会跟排版这件事纠缠。那些投进去的时间和精力，花在别处，会不会更好？无论本职工作，还是业余爱好，我都不是干排版的啊。
可是，怪就怪在，排版里这些一个一个的坑，你不去亲自填，就没人给你填。就像自己的娃，打扮成啥样，全在爹妈。自己的书，正式的出版物，难看的排版，你能忍吗？诸葛亮是怎么死的？事无巨细事必躬亲累死的。可是难道诸葛亮自己想被累死吗？
回头看看来时的路，我把青春的尾巴献给了 R，LaTeX，Linux。Linux 已然渐行渐远，LaTeX 曾经聚聚散散，只有 R 自始至终在我身边，成为了长久的陪伴。而这次，LaTeX 想甩也甩不掉了，她借着 bookdown 这匹木马，藏在了 R 的深处，彻底把我攻陷。
用 LaTex 排出的《学 R》这本书，就当是青春的纪念。</description>
    </item>
    
    <item>
      <title>我把青春献给你：排版 (3)</title>
      <link>http://www.pzhao.org/zh/post/latex-and-me-3/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-and-me-3/</guid>
      <description>7
LaTeX 做出来的文档，确实漂亮。这种漂亮不是那种一眼就能看出哪儿漂亮的漂亮，而是一种说不出来的气质。这种气质来自字体、间距、断字等等诸多细节的堆积和交互作用。只要是用过 LaTeX 的人，拿来个文档用鼻子一闻，就知道是 Word 做的还是 LaTeX 做的。就好像你遇到了你的另一半，让你神魂颠倒，可就是说不出她究竟好在哪里; 她走在人群里，你一眼就能找到她。因为你眼里没别人。
然而，这种气质不是能轻易把握的。LaTeX 最为奇特的是，你为她投入了无数的时间，却竟然说不清楚到底是因为她太好还是她太糟。如果她太好，为何这么难用？如果她太糟，为何你甘心为她付出？
之所以能用 LaTeX 写完博士论文，我想来想去，这个奇迹是以下四点一起促成的：
组里的同事提供了现成的论文模板，
身边有同事可以随时问，
老板只看结果，对我实现的手段并不介意，
论文是英文写的，不需要跟中文排版死磕。
想学 LaTeX 的注意了！以上四点，只要缺了一样，那么学 LaTeX 的阻力就会提高一个数量级。此坑慎入！
如果有了这四个条件，那么基本上就不用额外操心，只管埋头写论文就是了。
然而，LaTeX 下埋头写作的体验并不美好。那感觉根本就不是写论文，而是写代码。不编译出来，你根本不知道自己写了几页，每页是啥模样。一天下来，脑袋胀胀的，心里乱乱的。相比之下，用 Word 写论文，每敲一个字符都有一点成就感，敲完一页后，就像已经出版了一样心满意足。
LaTeX 就像个绝世美人，不时让你为她的美貌倾倒。更大的诱惑是，你心里清楚，只要你努力，就能距离她的美貌更接近一点。于是，你就身不由己地投入大把大把的精力，把你的文档弄得越来越漂亮，虽然每次只是漂亮了那么一点点。
不像 Word，你知道，无论再怎么使劲，做出来的论文顶多也就那样了，不可能更美，所以心态反而平静下来，老老实实过日子。
一个像恋爱，一个像婚姻。
8
当完成博士论文的时候，我决定结束天天心惊胆战的 LaTeX 爱情长跑，回到 Word 的温柔乡。我把城墙修高加厚，厚得就像特洛伊城，把 LaTeX 拦住墙外，从此一刀两断。曾经在同一个战壕里的战友，变成了洪水猛兽。
到了新工作单位，观察了一下，老板和同事全部是正常人，不是 X-men。我松了一口气。
有一次，有个名叫 LyX 的使者来敲我的城门。从三个字母参差不齐的模样，我一眼就识破了他的伪装，知道是 LaTeX 派来的奸细，于是我轻轻吐出一个字：滚。
我以为，从此就跟 LaTeX 形同陌路了。
有一天，我在使用 R 语言的时候，神使鬼差地装上了一个名叫 bookdown 的扩展包。
很久以后，再次回忆那一刻，仍然不由得感慨万千。命中注定的事，逃不掉的劫数。
bookdown，就是攻陷特洛伊的木马; 里面藏着的，除了我的旧爱 LaTeX，还有 Pandoc 这个魔鬼。后者从名字上一看，就知道是潘多拉放出来的。
安装 bookdown 的那一瞬间，我把木马轰隆隆地拉进了我的城，而我却浑然不知。</description>
    </item>
    
    <item>
      <title>有那么几回，我也想跳楼：写给我的中年朋友们</title>
      <link>http://www.pzhao.org/zh/post/midlife-pressure/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/midlife-pressure/</guid>
      <description>1
中兴员工跳楼，让人唏嘘叹惋。有人说是因为行业衰落，有人抱怨程序员压力太大。在我看来，这些纯属借题发挥。在不了解现场详细过程的情况下，人们怎么就那么确定是这些原因呢？当事人年岁已过不惑，阅历丰富，儿女双全，有两套房，与其说是因为经济压力而突然跳楼，我还不如相信这是一个意外，比如死者以跳楼来威胁对方答应条件时不慎坠落，或者是受抑郁症驱使而一时失控等等——当事人已经不在了，真相谁会知道呢？
不过，死者遭遇的中年危机是事实。同样是中年人，同样是失业在即，同样是家有俩娃要还房贷，既然说起这个话题，我也借题发挥，谈谈我对自杀一事的看法。为死者讳，事后去妄加揣度这个中年人的工作、家庭和心理状态是极为不妥的，因此我下面所写的，都跟这个悲剧的当事人没有任何关系，只是由这个事件引发而已。因为，回顾自己这半辈子，有那么几回，我也想跳楼。
2
一路走来，回头去看，你有没有动过轻生的念头，哪怕只有一点点？
当年刚离开故乡，只身远赴千里之外的大学校园，没过多久，我就不想活了。
从上小学起，我的学习成绩傲视群雄，在五线小城里独孤求败；到了京城的大学一看，高手如云，上课一个字都听不懂，考试及格是奇迹，顿时学霸成学渣。
现在回头去看，这点破事儿算什么。完全是因为一路顺风顺水，不懂什么叫挫折，一时心里落差太大而造成的不适而已。但是回到当时，如果有点什么小事刺激一下，鬼使神差爬上楼顶……这种事时不时在校园里发生，只不过跳的不是我；我躲过此劫的原因之一，就是跟着同样沦为学渣的兄弟们混。你渣，自有人更渣，他们都不跳楼，你跳什么？
咬牙念完大学，混迹于滚滚红尘的江湖里，我觉得活着没啥奔头了。
江湖好混乱，人性太复杂。有人可以不劳而获坐享其成，有人却是累死累活还得背黑锅；微薄的薪水捉襟见肘地养着房贷和日渐成长的娃，往未来去看，看不到光明。
好在那时心境已经比读书时宽了许多，知道跟人攀比是没有尽头的。要是真攀比，谁活得长谁赢。于是，开始接受那些能接受的，改变那些能改变的。既不能接受又不能改变，那就选择躲开。
后来出国读书，熬博士论文期间，觉得生不如死。
在那个阶段里，天天过得暗无天日，真心觉得挺不下去了，还不如把这个学位放弃一死了之。
几年后的一天，已经距离博士毕业两年有余，遇见当年一起读博的韩国哥们儿，他抱着我想哭，后来一边喝酒一边谈笑。他花了 8 年，在我毕业之后一年多才干完。回忆当年一起在野外做观测的点点滴滴，觉得日子过得厚重。
跟中年人所承受的压力相比，回望这些经历，无非是青少年时期学业和事业里的小菜一碟，属于无病呻吟，为赋新词强说愁。那么，等到老年，回望中年的经历，会不会也觉得淡如云烟呢？
前提是得活到老年那一天。
3
有个老同学在朋友圈里分享了一篇文章，标题是“你失踪了，会惊动谁”。我留言说：会惊动房东和银行。我每个月得交房租，得还国内的房贷。
二十多岁，两手空空，拿累了就放下；三十来岁，左手拿累了就交给右手；四十多岁，双手都拎着东西，累了只能左右换一下。
中年人面对的考验，更多，更凶险。
我看到关于跳楼事件的一些言论，都是归罪于行业衰落和个人经济压力。如果是这样，那就给自杀找来了合理性，只怕将来会让更多人走上轻生的不归路。生活的压力不是什么新鲜事。如果不是衔着金汤匙出生，那么草根生活原本不就是这么累吗？
科幻小说《三体》里，外星文明即将对人类实施灭绝计划之前，对人类这样说：
生存本来就是一种幸运，过去的地球上是如此，现在这个冷酷的宇宙中也到处如此。但不知从什么时候起，人类有了一种幻觉，认为生存成了唾手可得的东西，这就是你们失败的根本原因。
从什么时候起，我们开始有了这种幻觉，觉得生存是件唾手可得的东西，而忘记生存本身的艰难呢？
记得以前同事里有个大姐，比我大十来岁，有一次听我抱怨，就说：
你们这些年轻人，不知足，年纪轻轻就自己租房买房了。我们这一代人，结婚了也一直跟父母一起住一辈子，哪里有条件去租房买房，想都别想。
没错。想想父辈，经历的是百废待兴；想想祖辈，经历的是战乱浩劫；而曾祖辈，还生活在积弱难返的晚清呢。他们哪一代人活得不比我们难？可是他们子又生孙，孙又生子，一代一代都挺过来了，我们凭什么不能？
小时候看过一部电视剧，剧名剧情全忘了，只记得一句歌词：
要生存，先把泪擦干；走过去，前面是个天。
4
那个中年人走了，如果真是自杀，那是他自己的事。但是，最让人揪心的，是他留下的一双小儿女，由谁来养大成人？两对老父母，谁来养老送终？
中年人的命，不只属于一个人。
再苦再难，只要留得青山在，就不愁没柴烧。不管遭遇何种困境，看得远一点，穿越到未来，回头一看，全部都是过眼云烟。
就让我把本文献给我的朋友们吧，他们大多数上有老、下有小、中间还要还房贷。这里，用电影《乱世佳人》里女主角 Scarlett 的一句台词，作为本文的结尾，与朋友们共勉：
As God is my witness, as God is my witness they’re not going to lick me. I’m going to live through this and when it’s all over, I’ll never be hungry again.</description>
    </item>
    
    <item>
      <title>逻辑娃 III</title>
      <link>http://www.pzhao.org/zh/post/logical-kid-3/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/logical-kid-3/</guid>
      <description>最近，逻辑娃的逻辑出了点毛病。
德生得到一个新玩具，说明书上说适合两人以上玩。
我：去跟哥哥玩吧。
德生：这是给小小孩玩的。
我：给几岁小小孩玩？
德生：给四岁小小孩玩。不给十岁小孩玩。（看看奶奶）也不给六十多岁的玩。但是给三十多岁的玩。
这是什么逻辑！
在以前的幼儿园，德生能说会道，据说呜哩哇啦从早到晚说一天。
换到新幼儿园没几天，老师就问我：德生会不会说德语？
我说：会呀。
老师说：德生在幼儿园一句话都不说。
私下里我就问：今天在幼儿园你跟老师说话了吗？
德生：没说话。
我：为什么不说话？
德生：中文要在家里说，德语要在以前的幼儿园说。新幼儿园，我不说。
这是什么逻辑！
家里汽车年检没过，大修的话，花的钱还不如买个新的。于是，我们讨论换车的事儿，主要讨论价格和性能。两个孩子在旁边插嘴讨论颜色。
德生：我喜欢白色的车。
我：为什么？
德生：因为外面下雪了。白色的车不怕雪。
这是什么逻辑！</description>
    </item>
    
    <item>
      <title>R bookdownplus 升级手记，以及北大论文模板</title>
      <link>http://www.pzhao.org/zh/post/-bookdownplus-update/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/-bookdownplus-update/</guid>
      <description>bookdownplus 这个 R 语言程序包，自用起来感觉不错，当初发布的时候还小得意了一把。时过境迁，现在回头看起来是越来越不满意。CRAN 上，bookdownplus 的总下载量接近三千（与此相比，bookdown 的总下载量是七万），大约每小时就有一次下载。Google ‘bookdownplus’ 可以搜到 已经有中文用户在写使用体验了。越是这样，我越惶恐，因为我知道，这个包写得粗糙，可改进的地方数都数不过来。
向我反馈问题的用户超出了预期，主要是兼容性的问题：在 macOS上如何，在 Linux 上如何，这些问题我都没有办法回答，因为我只在 Windows 7 上测试了，其他操作系统既无精力也无条件测试。开发个软件，自用是一回事，让别人能用完全是另外一回事，这两回事之间真是相差了一个筋斗云。
所以我决定先把自己看不过去的问题解决一下，那就是代码的构架问题。
bookdownplus v.1.3 以后的版本包含了 20 个模板。写这个包的时候，因为懒，我就把所有模板的 .tex 文件混到一个文件夹里，style 和 cls 文件混在另一文件夹里，到最后自己都搞不清楚哪个模板用哪个文件了。用户每次想运行 bookdownplus() 生成一个新文档时，都把所有有用没用的文件一股脑考进来（反正也不大），连我自己都看不下去了。此外，我还指望着别人贡献一些新模板，可是目前乱糟糟的，谁愿意把好东西往垃圾堆里扔呢？
于是这两天我花了一个上午，把这些文件重新整理归类，让他们各回各家各找各妈，每个 bookdown 模板都对应一个 zip 压缩文件，扔在 bookdownplus 的安装目录里。而且，如果再开发新 bookdown 模板，只需按照现有模板 zip 文件里的结构，将所需文件压缩并甩进 bookdownplus 安装目录，就可以用 bookdownplus() 直接调用了，连升级都不用。
虽然功能上没有多大增强，但架构上舒服多了，所以我把版本号从1.3.x 升到了 1.4.0。
我还有一块心病，是北京大学学位论文的 LaTeX 模板，我迟迟没能转成 bookdown 模板。原因是这个 LaTeX 模板本身在我电脑上就编译不成功。这次不知怎么开了窍，突然被我搞定了，作为第 21 个模板，收进了 bookdownplus v.1.4.0 里。
此外，新增了一下几个模板：
益辉制作了 Chapman &amp;amp; Hall 出版社的模板，现成的，我稍微改了一下。看上去是这样的：这提醒我，直接去 bookdown.</description>
    </item>
    
    <item>
      <title>全面迁站：从 Wordpress 到 Hugo</title>
      <link>http://www.pzhao.org/zh/post/migrated-to-hugo/</link>
      <pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/migrated-to-hugo/</guid>
      <description>从今天起，我的旧博客 dapengde.com 停止更新。旧博客的全部帖子已经搬到了 pzhao.org，欢迎收藏（ctrl + d）和订阅。
半年多以前，我用 R 语言的 blogdown 包搭建了新网站，与旧博客并存至今。当时我就说，我要等着益辉同学把blogdown 的使用说明书“迁站”一章写好，就照步骤把旧博客内容全搬过去。前些日子，blogdown 书终于出版了，从 wordpress 搬到 hugo 的迁站方法写得很详细。迁站的时机成熟了。
然而，迁站的过程并不是很顺利。我照着书里推荐的步骤，试图用 travis-exitwp 将 wordpress 导出的 xml 文件转换成 Hugo 的markdown 文件。前面都还好，到了最后一步（第8步），我始终得不到右下角的绿色对勾，自然也得不到文件的下载链接。起初我以为是 xml 文件太大的缘故（10 M，五百多篇帖子），于是试着只导出少量帖子来生成 xml，从头操作，但是一觉睡醒还没得到下载链接。
于是改变策略，我给 wordpress 博客安装了插件 wordpress-to-hugo-exporter，直接将帖子导出为 Hugo 的markdown 格式。除了文件名里的中文乱码外，我相当满意。于是将文件批量重命名，只保留日期。文件内容可以用益辉写的 convert.R 代码来清理。
不过，对我来说仍然不够，看来还得自己动手，才能丰衣足食。因为我用的是 hugo-academic 主题，网页上会显示每篇帖子的摘要，需要每篇帖子的 yaml 里设置一个 “summary” 条目。这个好办，用 R 语言把每篇帖子的第一段摘出来当作 summary 插进去就行了（R 代码附后）。
此外，我还想在每篇帖子末尾增添一个“原文链接”，链到旧博客，万一哪篇帖子格式没转好呢？这也好吧，markdown 的 yaml 里有个 url 条目，稍微改一下插到文末就行了（R 代码附后）。
这就是 hugo 静态网站的好处。有 R 语言在手，以后我就可以对这些 markdown 格式的帖子为所欲为了。而且，GitHub、简书、 steemit、Stackoverflow、统计之都等诸多网站都原生支持 markdown， 发的帖子只需稍微整理，就能发到博客上，颇有万佛朝宗的盛况。
Hugo-academic 主题我很满意，唯一不足的是缺个归档页面，一目了然展示全部帖子清单。看来得以后自己动手做一个。</description>
    </item>
    
    <item>
      <title>我把青春献给你：排版 (2)</title>
      <link>http://www.pzhao.org/zh/post/latex-and-me-2/</link>
      <pubDate>Wed, 22 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-and-me-2/</guid>
      <description>5
如果上一篇帖子让你以为我在为 \(\LaTeX\) 做广告，呵呵，那你就上当了。为啥？
因为我早就抛弃 LaTeX 了。
几年前，把用 LaTeX 排版排得漂漂亮亮的博士论文提交的那一刻，我咬牙切齿地想：老子终于可以跟 LaTeX 这个怪物永别了。
想不起来第一次是从哪里知道 LaTeX 的。好像是从 Linux 的学习里，得知 LaTeX 是科研圈常用的写作工具。作为一个混科研圈的工具控，我居然没听说过？而且身边全是搞科研的，居然没人用过？怪哉怪哉。
于是，我就去问见多识广的朋友：“你用过 LaTeX 吗？”
朋友正穿着白大褂，在中科院化学所的有机实验室忙活，一听我的问题，痛痛快快地回答：
latex 啊？用过用过，我们经常从美国买。你要做什么？要多少克？1
我愣了，赶紧说：
不急不急。你先忙，我需要的时候找你买。
这就是我初学 LaTeX 时的生态。圈里没人懂，身边没人带，全凭好奇和兴趣。作为一个寻常百姓，学起来的难度可想而知。
当时虽然已经奔三的年岁，但血气犹存;还没当爹，手头还有一点闲置光阴。于是，磕磕碰碰，我终于用 LaTeX 把工作总结做了个 beamer 幻灯片，准备在单位作报告时用。花了这么多时间，如果不好用，那还学个啥劲呢？所以，要不要继续学，在此一举。
就在这关键时刻，单位领导一句话，把我仅有的热情抛进了万丈深渊。领导说：
工作总结的 ppt 你不是说你做完了？发给我来修改。
6
LaTeX 在我这里真正派上用武之地，是来德国读博士的时候。
刚到这个研究组，我就大吃一惊：组里清一色的 Linux 操作系统，大家拿 LaTeX 写各种文档，用 R 语言处理数据。
Linux，LaTeX，R，这是耗尽我青春尾巴的三大怪物。此外还有个 vim，但是跟这仨货比起来，属于小巫见大巫。
Linux 和 R 的血泪史按下不表，今天只说 LaTeX。
当时我无奈地想，嫁鸡随鸡嫁狗随狗，就跟着这帮 X-men 一起混吧。
很快，我又大吃一惊：在这个变种人小组里，牵头的老板，居然是个正常人，用的是 Windows 系统，Word 写文档，Excel 处理数据。话说一个正常老板跟一群变种人下属之间是怎么交流的？</description>
    </item>
    
    <item>
      <title>我把青春献给你：排版 (1)</title>
      <link>http://www.pzhao.org/zh/post/latex-and-me-1/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-and-me-1/</guid>
      <description>1
2017 年快要过去了。如果剩下这四十天不出什么幺蛾子的话，我今年的最蠢事情排行榜，基本是板上钉钉。名列榜首的，就是过早给《学 R》一书大肆宣传。跟罗永浩当年头一回卖锤子手机一样一样的，还没量产，就先吹牛，结果吹破了，打了自己的脸。
其实，这本书早在今年 6 月就写完了，7 月做了最后一次修改。当时书号已经批了，封面也有了模样，我以为马上就能印出来了，于是告诉了我能告诉的每一个朋友。朋友们都很讲义气，把白花花的银子拍在桌上，就等着付钱买了。当了教授的老同学说：放心，到时候我送给我的学生人手一本！
谁知道，一晃四个多月过去了，书还没出来。我的前期宣传算是白费了。让人欣慰的是，直到现在，仍然有铁杆粉丝惦记着我，时不时发来鼓励的短信：“喂，你那书烂尾了吧？啊哈哈哈哈~~~~”
谢谢。
那么，四个月里，这书干嘛去了？
在排版。
《学 R》这本书，一直排不出理想的模样。
四个月是在反反复复修改排版里度过的。一直拖到上周，我们仍然看不到任何排版成功的迹象。2017 年所剩无几的耐心消耗殆尽，一咬牙一跺脚，我们决定壮士断腕。合作作者 Y 从出版社讨来排版文件，并且自己花钱购买了专业软件，自己排；我同时用 \(\LaTeX\) 排，齐头并进。谁先排好就用谁的。我们谁都不想再拖，再拖就真的要吐血了。
当做出这个决定的第二天，Y 看到我用 \(\LaTeX\) 做出的 pdf 书稿小样得到了印刷厂的认可，就放下了手里的专业软件，决定不干了：“\(\LaTeX\) 真厉害，有空我学一下……”
我立马拦住：“最好别去学。这个坑太大。一入 \(\LaTeX\)，坑深似海。”
2
出版社负责录入和排版的工作，简称“录排”。
这四个月来，录排可谓兢兢业业，全心全力为《学 R》排版。可惜，辛苦不一定有回报，排出的书稿，一直有层出不穷的问题。
比如说，丢失公式和特殊字符。原稿里的诸如 R2， \(\pi\) 等都莫名其妙消失了。
比如说，字体。原稿里的代码都是用等宽字体表示的，录排之后都成了跟正文一样的字体。
比如说，标点符号。原稿里的所有标点符号，包括代码里的逗号、引号、括号、冒号，都变成了中文标点符号。加上非等宽字体，书里的代码惨不忍睹。
最要命的是，原稿里的很多空格也都不翼而飞。比如录排稿：
是不是一头雾水？实际上原稿是：
每次从录排稿里挑问题，都恨不得把一双近视眼珠子抠出来，再拿着放大镜逐字逐句看。后来，索性放弃了很多想法。比如说，原先代码是彩色的，得知需要录排逐个字符手动修改，算了不要了；原先打算增加个小贴士目录，得知需要排完页码手动添加，算了不要了；原先打算给常用函数做个索引，方便读者从书里找示例，看样子也得手动做，算了不要了……
即便如此，每次的排版仍然会出现奇奇怪怪的问题。如此往返三次，《学 R》这本书我已经读得想呕吐了。
我百思不得其解：这到底是怎么回事？
3
来回折磨了四个月。终于， Y 试用了一下录排用的排版软件—— Adobe InDesign，俗称 ID，是国内出版业主流的专业排版软件。
Y 立刻对我说：“我明白问题出在哪里了！”
原来，录排是把我们提交的原稿，转成了 txt 文本文件；书里的插图，全部转成了 tif 图片。然后，把这些素材导入 ID，然后手动按照原稿 pdf 的样子做调整。
这正是录排一贯的工作流程。
这个流程，对文学类书籍没有问题。一篇小说，重要的是内容，不是格式；只要把文字分好段，就不会有大错。
然而，这个流程用在《学 R》 这本书上，就是个灾难。因为这本书，内容和格式，都很重要。</description>
    </item>
    
    <item>
      <title>逻辑娃(2)</title>
      <link>http://www.pzhao.org/zh/post/logical-kid-2/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/logical-kid-2/</guid>
      <description>1
我：下午谁跟我出去逛街？
德生：我！给我买新玩具！
我：新玩具家里有。上午不是刚刚买过了吗？
德生：家里没有。买回来拆开就不是新的了。
我竟然无言以对。
2
我们家住半山腰，爬山有得天独厚的条件。然而德生愿意赖在家里玩玩具和看书。
德生说：
不敢去爬山，山上有老虎。
妈妈：
山上没老虎！
德生：
山上有没有动物园？
妈妈：
有啊！走，咱们爬山去看动物园……
德生：
动物园里有没有老虎？
妈妈：
有啊……嗯？
德生：
那山上有没有老虎？
妈妈：
有……
</description>
    </item>
    
    <item>
      <title>R bookdown 的小技巧</title>
      <link>http://www.pzhao.org/zh/post/bookdown-tips/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-tips/</guid>
      <description>本帖用来收集整理 R 语言 bookdown 扩展包的一些使用技巧。有些是在网上搜来的，有些是我在别处讨论得来的，有些是我尚未发布的，都写在这里备用。
输出 Markdown 文件使用 bookdown 编译 Rmd 文件，可以得到的输出格式五花八门。对此，bookdown 的官方文档 有详细介绍，包括 github， pdf，epub，word，html 单个文档等，偏偏没有提 markdown 格式。
其实，markdown 文件是有的，在编译过程里作为过渡文档存在，编译结束后自动删除。编译顺利的时候，在文件夹里“刷”地闪一下就消失了。我以前的做法是“快手”，在它消失之前迅速用 notepad++ 打开，就存下来了。这显然不是办法，凑合着过日子而已。
一般来说，如果仅仅是使用 rmarkdown，只需在 yaml 设置里声明一下：
output:md_document:variant: markdown_github然后 knit 一下，就可以得到 markdown 文件了。想当然地，我把这段代码加到了 bookdown 的yaml 里，却得到警告，说 bookdown 不支持。
这事儿被我搁置了很久，最后我终于在 bookdown 的项目主页找到了答案：参数 clean = FALSE 。
bookdown::render_book(&#39;index.Rmd&#39;, clean = FALSE)
我很喜欢 markdown 格式。我用 bookdown 写论文，Rmd 的正文里插了不少诸如 r pi 这样的调用。跟合作作者讨论时，看 Rmd 文件吧不直观，看 html 吧不方便修改，md 大概是最好的格式。
bookdown 的编译，我习惯按快捷键 ctrl+alt+b，或者点击右上方面板的 Build 按钮编译的，输出格式取决于 yaml。这样就得不到 md 文件。要想得到 md 文件，看来以后得改成命令行编译了。</description>
    </item>
    
    <item>
      <title>如何在 R markdown 里输出 r pi 并前后加上小撇`</title>
      <link>http://www.pzhao.org/zh/post/backticks-in-rmd/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/backticks-in-rmd/</guid>
      <description>其实本文的标题应该是：如何在文章里显示 `r pi` 这样的文字。但是我不知道怎么把这个格式弄到标题里。所以，就这样凑合过吧。
这个问题的答案，要分几层意思来说。`r pi` 是代码格式（本博客显示为粉底红字），并且包含的`符号同样是代码格式，并且 pi 并没有被编译成 3.1415927。别看它短，这三点每个都是个坑。
这个问题在编写 R markdown 教程时常见。其实，等你明白这个问题的答案后，会发现答案并不难，难的是如何描述这个问题。我费了好大劲，都想不出一个准确描述的办法，并且在那些支持 markdown 的论坛上，我连这个小撇都输不出来，这叫人怎么问？最后我只能这么提问：
请问在输出文档里怎么显示’撇 r pi 撇’并且别让它编译出来 3.1415927？
第 1 层意思，那个小撇 `，它到底叫什么？总不能总叫“小撇”吧？我用的是德语键盘，挪，就是上图第一行右起第二个键的上面那个小可爱。
查维基百科才知道，` 的学名叫 Grave accent ，中文叫“重音符”。在程序猿的世界里，它又被称作 backquote 或 backtick，中文叫反引号。所以，跟这个有关的问题可以这么问：
How do I escape a backtick ` in Markdown?
或者
How to display verbatim/literal inline r code with backticks using Rmarkdown?
第 2 层意思：怎么把反引号显示出来？如果仅仅输入个反引号 ，在同一段里后面没有了还好办，万一又出现一个反引号，就会把他俩自动配对儿，两者之间的文字当成了代码。瞧，就是上句话这个德性。
为了棒打鸳鸯不让他俩自动配对儿，那就用转义符\。输入\`，就避免反引号自动配对变代码了。
第 3 层意思，是怎么把 r 语言的输出结果显示到代码环境里。这个就开始有点绕了。</description>
    </item>
    
    <item>
      <title>外国国名的中文含义</title>
      <link>http://www.pzhao.org/zh/post/country-names/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/country-names/</guid>
      <description>有一天，德国朋友苏珊兴奋地问我：听说 Germany 在中文的意思是美德的国度，对吗？
&amp;ndash; 对。德国，美德之国。
我爱中文！再多讲讲。France 怎么说？
&amp;ndash; 法国。法制之邦。
嗯，有道理。那么 America 呢？
&amp;ndash; 美国。美丽之国。
真的？那 Britain 呢？
&amp;ndash; 英吉利。幸运的花儿。
有趣！Netherlands？
&amp;ndash; 荷兰。荷花和兰花。
Finland?&amp;rsquo;
&amp;ndash; 芬兰。芬芳的兰花。
Denmark?
&amp;ndash; 丹麦。红色的麦子。
Czech?
&amp;ndash; 捷克。打败敌人，赢得战争！
天哪! Austria?
&amp;ndash; 奥地利，占据地利的国家。
为什么是地利？
&amp;ndash; 因为有个 Belgium，比利时，占据天时的国家！
好吧。Portugal?&amp;rsquo;
&amp;ndash; 葡萄牙。葡萄的牙齿。
啥？那 Spain？
&amp;ndash; 西班牙。在西边分开的牙齿！
我懂了！亚洲国家呢？Vietnam？
&amp;ndash; 越南。百越部族的南边。
Thailand?&amp;rsquo;
&amp;ndash; 泰国。国泰民安。
Korea?
&amp;ndash; 朝鲜。明亮的早晨。
Japan 是什么意思?
&amp;ndash; 日本，太阳的根。
这些远东国家的名字在中文里更有意义。那么 China 呢？
&amp;ndash; 我们才不是远东呢。中国，我们是中央之国。</description>
    </item>
    
    <item>
      <title>世界上最长的单词</title>
      <link>http://www.pzhao.org/zh/post/longest-word/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/longest-word/</guid>
      <description>学过这么多年英语，你知道英文里最长的单词是什么吗？
据说是肌联蛋白。它是目前已知的最大的蛋白质。按照化学上的科学命名法，它的学名由大约 19 万个字母组成，单它一个单词就可以占据一本字典了，独孤求败，不要太寂寞。大家用可怜的眼光看着它，然后起了个俗名，叫做 titin.
在字典上，最长的英文单词据说是 *pneumonoultramicroscopicsilicovolcanoconiosis*，45个字母，中文译作“超微粒硅酸盐尘埃沉着症”，简称“火山肺矽病”，是肺尘病里的一种。拆开来是：*pneumono*（关于肺）-*ultra*（超）-*microscopic*（微小）-*silico*（硅，即“矽”）-*volcano*（火山）-*coniosis*（尘埃引致的疾病）。看起来吓人，其实不难记，是个纸老虎。
德语里，这样的纸老虎很多，吓了我无数次。
上面这幅漫画，就来自我所在的棚房办公室男厕所马桶上方。一直不知道画中的兄弟在折腾个啥，很久之后等我具备了一点德语水平才弄懂。翻译如下：
标题：马桶刷使用指南。
第一幅：完全错误。
第二幅：错误。
第三幅：接近正确。
第四幅：正确。
这个漫画的标题是个超级长的单词：*Toilettenbürstenbenutzungsanweisung*。这是一个由36个字母组成的单词，意思是“马桶-刷-使用-指南”。跟上文介绍的英语单词类似，德语把很多个词连在一起构成一个新词，而这些词之间是没有空格也没有连字符的；跟英语不同的是，德语里这样的词在字典里查不到，得你自己把它断成 *Toiletten-bürsten-benutzungs-anweisung*，再逐个去查。这让初学者望而却步：遇见的是一个生词，不懂只能查字典，字典上又查不到，我又不知道怎么断开它。你让我怎么办？难道是逼我带着智能手机上厕所吗？万一掉进去谁赔？
记得第一次买盐，我特意先查了字典，知道 salt 的德语是 *salz*，可我把超市翻了三遍也没找到叫 salz 的东西。只得硬着头皮问收银员。收银员带我到货架一指，我一看几乎晕倒，盒子上写着：*Markensalz*。
德语字典里出现的最长的单词，据说是 *Donaudampfschiffahrtselektrizit?tenhauptbetriebswerkbauunterbeamtengesellschaft*，以79个字母的长度，载入了吉尼斯世界纪录。这个词是维也纳一家俱乐部的名字。而事实上，根据德语的构词法，最长的单词是无限长。德语里的数，不管有多少位，都作为一个单词来处理， 例如 777777 这个六位数，德语写作：siebenhundertsiebenundsiebzigtausendsiebenhundertsiebenundsiebzig 。所以只要来个无理数，德国单词的长度就能傲视群雄，无词能及。
每当孩子玩磁力小火车，把托马斯、培西、詹姆士等前后连成一串开起来的时候，我就想到了这种BT的构词法。还是中文简洁啊。</description>
    </item>
    
    <item>
      <title>bookdownplus 的两个魔法</title>
      <link>http://www.pzhao.org/zh/post/bookdownplus-magic/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdownplus-magic/</guid>
      <description>bookdown 是个好东西，只是入手有点难，酒香巷深。
对于 R 初学者来说，如果身边没有人指导，使用者可能需要花大量精力应付 LaTeX，YAML，Pandoc，而很多初学者可能从来没听说过这些，站在 bookdown 的门口往里张望了一下，说不定就被吓跑了，从而错过了门里的精彩世界。
bookdownplus 扩展包，可以让新手对 bookdown 快速上手。从此，bookdown 这坛好酒就不必去深巷苦寻，它就放在你手边。
从 v1.2.0 开始，bookdownplus 增加了两个魔法，更是让新手对 bookdown 一见钟情。如果你对 bookdown 感兴趣却苦于入门的烦恼，那么可以试试这两个魔法。
准备工作首先，安装好必需的软件，包括 R, RStudio, \(\LaTeX\)等。详见 bookdown 官方手册。然后，安装开发版的bookdownplus：
devtools::install_github(&amp;quot;pzhaonet/bookdownplus&amp;quot;)再用 setwd() 将R的工作目录设置到一个空文件夹里。
一切准备就绪后，接下来就是见证奇迹的时刻。
第一个魔法在 R 里运行下面的代码，然后去喝个茶：
for (i in template()[1:19])bookdownplus(template = i, more_output = more_output()[1:3])回来以后，你会在工作目录里看到很多文件和文件夹。打开那个叫做 _book/的文件夹，Duang！19个示例文档，每个都以 pdf、Word、网页和电子书格式乖乖地等在那里，等你打开了。其中，电子书 epub 格式可以在手机上阅读，也可以在台式机用免费的Calibre软件打开阅读。
这些示例文档，从学术论文到诗歌乐谱，从中文到英文，展示了 bookdown 能胜任的工作。是不是动心了？
第二个魔法运行下面的代码，然后看两眼窗外的风景，bookdownplus 就把事情做完了：
for (mf in mail_font()) {for (ms in mail_style()) {for (mt in mail_theme()) {outputname &amp;lt;- paste(&amp;#39;mail&amp;#39;, ms, mf, mt, sep = &amp;#39;_&amp;#39;)bookdownplus(template = &amp;#39;mail&amp;#39;, mail_style = ms, mail_font = mf, mail_theme = mt, output_name = outputname)}}}仍然打开那个叫做 _book/的文件夹，Duang！ 不同字体、不同主题、不同布局的信件示例文档就全部在那里了。</description>
    </item>
    
    <item>
      <title>R 初学者包 beginr 在 CRAN 正式发布</title>
      <link>http://www.pzhao.org/zh/post/beginr-released/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/beginr-released/</guid>
      <description>又一次高兴地宣布, 我的 R 语言扩展包 ‘beginr’ (Zhao 2017a) 在 CRAN 正式发布了.
简介beginr是我为 R 语言初学者和自己写的工具包, 是我这些年来收集和自己编写的一些简化操作的函数和备忘录, 可能对中级用户也有帮助. 其实这个包的文档我写得不够详细, 有些函数还没来及整理进去, 之所以匆匆发布, 是想先把 ‘beginr’ 这个名字给占住. 毕竟, 我中意的名字如 ‘learnr’, ’startr’都被别人用过了.
安装方法：
# 稳定版：install.packages(&amp;#39;beginr&amp;#39;)# 开发版：devtools::install_github(&amp;quot;pzhaonet/beginr&amp;quot;)下面分类介绍一下其中的函数.
备忘函数我初学 R 的时候用 plot() 作图时, 常常忘记不同形状数据点(pch)对应的编号, 实线虚线(lty)的编号, 散点图类型(type)的代码, 以及最难选择的颜色代码. 每次忘了都要上网搜一下. 现在, beginr 里提供了 plotpch(), plotlty(), plottype(), plotcolors(), plotcolorbar()等函数, 想不起来的时候运行一下就行了.
beginr::plotpch()beginr::plotlty()beginr::plottype()beginr::plotcolors()beginr::plotcolorbar()快速作图函数我常常需要做线性拟合, 每次又是作图又是添加拟合方程, 繁琐. 现在, beginr 里的一个 plotlm()函数就搞定.</description>
    </item>
    
    <item>
      <title>R 包 bookdownplus 正式发布</title>
      <link>http://www.pzhao.org/zh/post/bookdownplus-released/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdownplus-released/</guid>
      <description>很高兴地宣布，我的 R 语言扩展包 ‘bookdownplus v1.0.2’ (Zhao 2017a) 在 CRAN 正式发布了。本文是对’bookdownplus v1.0.2’的简要描述. 由于最近更新频繁, 最新版的’bookdownplus’更加强大和易用, 例如 ‘bookdownplus v1.2.0’ 可以一条指令生成19个模板文档的 pdf, word, html 和 epub 四种格式. 建议移步位于 GitHub 的 bookdownplus 项目主页.
简介bookdownplus 是对 bookdown 包 (Xie 2016) 的增强和简化, 是快速使用 bookdown 的最简洁方法。bookdown 就好比 Microsoft Word 或 \(\LaTeX\)，可以用来写文档，而 bookdownplus 提供了很多有用的模板，可以很方便地在 bookdown 平台写期刊论文、学位论文、学术海报、化学分子式、信件、日记、日历、诗集、吉他谱等各种常用文档和书籍。这是功能上的增强（+）。
bookdownplus 使用时只需指定一个模板，给定作者和书名，就可以一键生成模板文件，用户在模板文件里照猫画虎写自己的文字就可以了，不必再花力气上网找模板、设置 YAML 和 LaTeX。这是操作上的简化（-）。
bookdownplus 各个模板的使用方法详见 R bookdownplus Textbook。这本电子书本身就是用 bookdownplus 生成的，尤其是它的 pdf 版本很美观。此书的源码开放，可以作为使用 bookdownplus写书的示例。
下面是 bookdownplus 的简介和快速使用方法。
快速入门准备在开始前，需要安装 R, RStudio, bookdown，和其他依赖的软件和包(例如 Pandoc, \(\LaTeX\), rmarkdown, rticle, knitr等)，作为准备。详见 bookdown 官方手册。</description>
    </item>
    
    <item>
      <title>LaTeX 公式转换成 Word 公式</title>
      <link>http://www.pzhao.org/zh/post/latex-equations-to-word/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/latex-equations-to-word/</guid>
      <description>最近写了篇论文，投往一家学术期刊。投稿时，Word 格式和 \(\LaTeX\) 格式可以任选，我选了 Word，是因为合作作者用 Word。可是，文稿里的公式是我输入的，而那些公式在我的博士论文里是用 \(\LaTeX\) 写的。为了图省事，我就用了 Word 的插件Aurora，这样，只需把公式的 \(\LaTeX\) 代码往 Word 文档的 Aurora 域里拷贝粘贴，bingo！公式就渲染好了，比 Word 的自带公式漂亮一些。
这篇论文很顺利，很快被接收了。到了最后一步的时候，编辑部要我把文档里的公式修改成可编辑的格式。——本来就是可编辑的呀。嗯，大概是编辑部不使用Aurora，那么他们的 Word 打开我的文档里看到的公式自然就是没法编辑的了。我懒得解释，最后决定把公式全部转换成 Word 公式。
\(\LaTeX\) 公式转成 Word 公式并不难，只需三步：\(\LaTeX\) –&amp;gt; MathML –&amp;gt; 修改 –&amp;gt; Word.
\(\LaTeX\) 公式转成 MathML公式。这可以在 blogdown 里操作，只需把 \(\LaTeX\) 公式代码扔进一个帖子里，运行建站函数，在生成的网页里获取公式的 MathML 代码即可（在公式上点右键 - Show Math As - MathML Code）。
修改 MathML 代码。将上一步得到的 MathML 代码拷贝粘贴到文本编辑器，然后在开头添上一行：
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;将修改的 MathML 代码全部选中，拷贝粘贴到 Word 里，就自动变成公式了。当然，上面第一步也可以用别的软件来完成，下图是个示例。
以后在合作里再也不用Aurora这种把 Word 和 \(\LaTeX\) 混在一起的工具了。不是不好，而是太小众。</description>
    </item>
    
    <item>
      <title>R包发布记</title>
      <link>http://www.pzhao.org/zh/post/publish-r-packages/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/publish-r-packages/</guid>
      <description>最近，我把mindr，pinyin 和 bookdownplus 三个包都提交到了 CRAN。这三个包都很简单，我就是想体验一下发布R包的流程，免得将来学R那本书出版了被问起来，答不上来就丢人了，另外也算是承接菜鸟致简速成那篇帖子，里面只谈了野包的发布分享，而只有提交到了 CRAN，野包才算转正。
很快，这三个包都成功转正，可以正常安装了：
install.packages(&amp;#39;mindr&amp;#39;)install.packages(&amp;#39;pinyin&amp;#39;)install.packages(&amp;#39;bookdownplus&amp;#39;)这里说说发布的过程和我遇到的一些问题。
自查包发布之前，先自查有没有错误。只需用RStudio打开待发布的R包的.Rproj文件，然后点击右上方面板的 Build - Check 按钮，就可以看到自查结果。
这里要注意：
结果里尽量不要包含任何 Notes 和 Warnings。如果有，就去找到问题修改，不然在提交的时候会被退回。
关于author &amp;lt;author&#39;s email&amp;gt;的那一条 Note 是可以忽略的，只是提醒你再次看看作者信息有没有填错。
我最初的自查结果有些 Notes 我原以为可以无视。比如，DESCRIPTION 文件里 Title 字段有些词要求首字母大写，我心想，这也算错误？就没理。再比如，告诉我 “no example. no test. no vignette.” 我心想，好像很多包都没有这几样，不也都发布了么？所以我同样无视。结果就是……
下面接着讲。
提交把包的压缩文件在 CRAN 的网页上传即可。成功上传后会收到 email 通知，需要点击里面的链接进行确认。
我两个宝贝儿 mindr 和 pinyin 的1.0.0版是六一那天上传并确认的，之后我就等，一直等到6月16号，我才想起来这事儿，就发信给 CRAN cran@r-project.org 催了一下，当天就得到了 Dr. Uwe Ligges 的回复，说：
你那两个包在提交当天就被系统自动拒收了，因为系统自动检查时发现了两个 Notes。系统自动发信通知你了，如果没收到，请翻翻垃圾邮件。
我一翻邮箱的 spam，果然，拒信早就在里面了。
修改乖乖地修改大小写，添加 vignette 和 examples，把版本号修改成 1.</description>
    </item>
    
    <item>
      <title>《学R》序（朱彤）</title>
      <link>http://www.pzhao.org/zh/post/preface_zhu/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/preface_zhu/</guid>
      <description>我读硕士研究生时的导师是朱彤教授。在朱老师科研小组 ZTGroup 学习的三年如沐春风，我从中得到的收获受益终生。正值北京大学环境大楼落成不久，又逢毕业季，作为环境科学与工程学院的院长，朱老师在极其繁忙的工作中抽出时间来为本书欣然作序，实属不易，仅凭“感激”二字岂能表达我们的谢意？
下面是朱老师为本书写的序言。
 受作者邀请为此书写序，感到惶恐和高兴。两名作者分别是我以前的硕士和博士生，多年来我们小组很多同学都在学习和使用R语言，作为老师的我却从来没有用过，要为一本关于R语言的书写序，自然感到很惶恐。而当我打开这本书，没有看到晦涩难懂的概念、公式，在风趣易懂的语言、引人入胜的描述下，很快阅读完了前几章，不仅迅速跨越了零基础的障碍，更为两名作者为广大的数据统计分析和R语言学习人员提供这样一本独特、有趣的入门书而感到高兴。
随着科技的高速发展，对大量数据的处理和分析已成为科研甚至日常生活的必需，掌握一门强大的数据分析工具非常必要。作为一种开源、免费且不断更新的语言，R不仅拥有数据分析、统计、作图等强大功能，其应用范围还在不断扩大：赵鹏博士可以用它来撰写学术论文、做备忘录、制作幻灯片、整理读书笔记、整理照片、写书、记录吉他谱、写博客、做网站等。R语言拥有越来越多的使用者和爱好者，也使得其功能越来越广泛、强大。
与其它介绍R语言的书籍不同，这本书以两名作者自身学习的经验娓娓道来，没有多少枯燥的术语和公式，是一本非常适合自学R语言和统计学的入门书，尤其适合零基础和不懂统计学的读者。这本书可作为大学本科生和研究生自学用，也可作为高校教师教案。相信这读者们不仅会发现这本书很有用，更会发现关于R语言和统计学的书可以写的很有趣。
&amp;mdash; 朱彤，2017年6月13日
 </description>
    </item>
    
    <item>
      <title>pinyin: 把汉字转换成拼音的R包</title>
      <link>http://www.pzhao.org/zh/post/pinyin/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/pinyin/</guid>
      <description>更新：2017-06-19，‘pinyin 1.0.2’ 在 CRAN 正式发布。
今天新写了个R包，粗暴地取名为 pinyin，作用是把汉字转换成拼音。
安装方法：
稳定版：
install.packages(&amp;quot;pinyin&amp;quot;)devtools::install_github(&amp;quot;pzhaonet/pinyin&amp;quot;)安装时可能会出现一些关于 locale 的警告，净吓唬人，无视。
使用方法：
pinyin 0.0.0版包含3个函数.pinyin()是主函数，可以把一个带汉字的字符串转换成拼音。可以选择:
转换成标准的全拼 (默认 method = &#39;quanpin&#39;)，或以数字表示声调 (method = &#39;tone&#39;) , 或不含声调(method = &#39;toneless&#39;),也可以选择仅保留每个字的首字母(only_first_letter = TRUE),可以自定义相邻两字拼音的分隔符号(sep = &#39;_&#39;),如果汉字字符串里边包含非汉字字符，可以选择将这些字符保留原样(nonezh_replace = NULL)还是转换成指定字符(如nonezh_replace = &#39;-&#39;)。举例如下：
library(&amp;#39;pinyin&amp;#39;)pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;)## [1] &amp;quot;qiānɡ_dí_hé_xū_yuàn_yánɡ_liǔ_chūn_fēnɡ_bù/bu/bú_dù/du/duó_yù_mén_ɡuān&amp;quot;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;)## [1] &amp;quot;qiānɡ dí hé xū yuàn yánɡ liǔ chūn fēnɡ bù/bu/bú dù/du/duó yù mén ɡuān&amp;quot;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;, method = &amp;#39;tone&amp;#39;)## [1] &amp;quot;qiang1 di2 he2 xu1 yuan4 yang2 liu3 chun1 feng1 bu4/bu/bu2 du4/du/duo2 yu4 men2 guan1&amp;quot;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39; &amp;#39;, method = &amp;#39;toneless&amp;#39;)## [1] &amp;quot;qiang di he xu yuan yang liu chun feng bu/bu/bu du/du/duo yu men guan&amp;quot;pinyin(&amp;#39;羌笛何须怨杨柳春风不度玉门关&amp;#39;, sep = &amp;#39;&amp;#39;, only_first_letter = TRUE)## [1] &amp;quot;qdhxyylcfbdymɡ&amp;quot;pinyin(&amp;#39;羌笛何须怨?</description>
    </item>
    
    <item>
      <title>微气象学常用的 LaTeX 公式</title>
      <link>http://www.pzhao.org/zh/post/equations/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/equations/</guid>
      <description>这些年，论文发得不多，公式却攒了不少，大部分都是自己亲手敲的 \(\LaTeX\) 代码。我把他们整理在一个 eq.tex 文档里，配合一个编译好的 eq.pdf 文件。每次需要的时候，在 eq.pdf 里找到需要的公式，然后去 eq.tex 找公式代码，拷到目标文档里完事儿。稍微有点小麻烦，但总比重新敲一遍代码要省事、准确。
然而，现在有了 blogdown 和 Hugo-academic 主题，一切都变得不一样了。我把 eq.tex 里的文本全部拷贝粘贴到一个 .Rmd 文件，扔进网站里，就得到了现在这个帖子。鼠标放在公式上点右键- Show Math As - \(\TeX\) Commands，就得到了公式的 \(\LaTeX\) 代码。直接拷贝就行了，再也不用在两个文档里切换以及找来找去。
我觉得，我再也回不去了。
MeteorologyAtmpspheric pressure\[\begin{equation}P=101.325 \cdot (\frac{293-0.0065z}{293}) ^ {5.26} = 86.838\,\text{kPa}\end{equation}\]\(z\): elevation above sea level in m.
\[\begin{equation}-\text{d} p =\rho g \text{d}z\end{equation}\]\[\begin{equation}\ln \frac{p_2}{p_1} = - \int_{z_1}^{z_2} \frac{g}{RT}\text{d}z\end{equation}\]Psychrometric constant\[\begin{equation}\gamma =\frac{c_p P}{\varepsilon \lambda} = 0.</description>
    </item>
    
    <item>
      <title>R mindr: 把 Markdown 转成思维导图</title>
      <link>http://www.pzhao.org/zh/post/mindr/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/mindr/</guid>
      <description>更新：2017-06-19，‘mindr 1.0.4’ 在 CRAN 正式发布。
将 markdown (.md, .Rmd) 文件转换成思维导图的 R 扩展包 mindr 是我写的第五个 R 包，安装方法如下：
稳定版：
install.packages(&amp;quot;mindr&amp;quot;)开发版：
devtools::install_github(&amp;quot;pzhaonet/mindr&amp;quot;)使用方法：
在R的工作目录创建个名叫 mm/ 的文件夹，丢进去一堆 markdown 文件 (.md, .Rmd)，然后运行：
mindr::md2mm()就得到个 mm.mm 的思维导图文件，用免费的思维导图软件 freemind 可以直接打开。界面比较简陋。或者用漂亮的免费软件 Xmind，需要选择导入 freemind 导图。
mindr包还有另外两个函数：mm2md()是反向操作，将思维导图转换成markdown;outline()是从markdown文件里提取出各级标题生成大纲。
我的书稿《学R》最初是先用思维导图拟定框架，然后在 Word 里写，后来转到 bookdown 里完成的。今天下午，我在书稿的旧思维导图里照着新稿修改，想把两者统一了。改着改着，觉得不对劲儿呀，R markdown 的哲学是维护一份文档，导出多个格式，我怎么又开始维护两份内容相同只是格式不同的文档了？
这肯定不是什么新问题，肯定有办法直接把 markdown 转成思维导图。于是我搜。我搜搜搜，竟然没搜到！
这就怪了。从常识上判断，我认为这个工具肯定有，说不定藏在某个 R 包里，只是太隐蔽了。
是应该继续搜呢，还是自己动手？有时候真是难以权衡。我掂量了一下轻重，选择了后者。
晚上，写好了。
先拿 bookdown 书稿当小白鼠练手，用 freemind 直接打开：
freemind 确实简陋。再拿 blogdown 书稿 试试，导入 Xmind 看看：
还不错。好了，实验成熟了，放心地用在自己的书稿上，并且挑个最漂亮的款式：
</description>
    </item>
    
    <item>
      <title>R blogdown 科研网站的公式和参考文献</title>
      <link>http://www.pzhao.org/zh/post/rblogdown-bib/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/rblogdown-bib/</guid>
      <description>本网站的公式和参考文献一直未能正常显示，直到今天我才把这两个问题解决。
公式公式的问题迟迟未解决，是因为我看到人们在讨论往html文件里加 Load mathjax 代码这种解决方案，一看就头大，不想做。
其实，我用的hugo-academic主题，据说是支持数学环境的，据说在 config.toml 里设置 math = true就开启全站支持，在单篇post的yml头里这样设置就开启单篇支持。可是我两样都试过，然后运行 blogdown::serve_site()测试，在RStudio的Viewer里都不能成功显示公式。
今天突然灵光一现，心想不会是RStudio Viewer的问题吧？于是点击Viewer左上角的 Show in new window 按钮，用外部浏览器打开一看，Duang！帖子里的公式就都可以正常显示了！这里秀一个：
帖子里输入下面的 \(\LaTeX\) 公式：
$$\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}$$网页就会显示：
\[\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}\]
参考文献两个多月前，就有个哥们儿问“有没有可能在blogdown创建的网站里添加参考文献?”作者回答得干脆：“有。”两人对话戛然而止，让我目瞪口呆。由于在blogdown 官方手册里并未看到添加参考文献的方法，我一直以为这个功能尚在开发中，直到今天也没见动静，有些起疑，就随便试了一下，步骤跟在 bookdown 里一样：
把参考文献库 .bib 文件考到 content\post\.在帖子 .Rmd 文档的 yml 头里声明 .bib 文件的名称和路径。这里我设成 bibliography: [book.bib, packages.bib].在帖子里引用 .bib 里的文献条目，例如 [@R-blogdown].运行建站函数 blogdown::build_site().就这样，说时迟那时快，只见Duang！帖子里的引用就显示成了 (Xie 2017) ！而帖子末尾的参考文献列表就自动出来了！
blogdown 可以如此方便地往帖子里插入计算代码、图表、公式、参考文献，我实在找不出第二个这样的工具。建科研网站，非 blogdown 莫属！
最后顺便提一下：虽然最新正式版的 RStudio 1.0.143 并 没有 blogdown 和 bookdown 的入口，但是我欣喜地发现，在 RStudio 的开发版 1.</description>
    </item>
    
    <item>
      <title>9分钟写个R语言包：菜鸟致简速成</title>
      <link>http://www.pzhao.org/zh/post/rmickey/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/rmickey/</guid>
      <description>前言写R包这种高大上的工作，原以为学会怎么写得花个一年半载，学会之后写一个包怎么着也得个把月，谁料想周一上午下了决心，到周二下午就一口气写了4个包，算起来从学到写，只花了一天多时间。这里是个小结。
学写R包，我主要参考了3份资料：
谢益辉的开发R程序包之忍者篇，2011年。反复读了好几遍。黄俊文的极简R包建立方法, 2013年。反复读了好几遍。Hadley Wickham 的R packages, 2015年。反复扫了好几眼。有了这3份很好的资料，那我还写本篇帖子做什么？
这是因为，他们都是高手中的高手，只是我觉得他们写得，就好比教授写幼儿园教材，仍然不太合小朋友的胃口，不足以让我等菜鸟快速入门。比如读到roxygen2是多么美妙，我起初完全没体验，不知道“举头望文档，低头思函数”到底说的是什么（what the hell was Yihui talking about? 当然，一天之后我就体会到了静夜思的精妙），再一看Emacs就被吓得河水倒流，当年光一个vim就把我折腾个半死。而极简篇里，我觉得既然是极简，能减掉的步骤尽量减，所以还能继续剪。可能当年是极简，时过境迁，人类进步，现在可以比极简更简。
下面，我试试写个减到不能再减的一剑封喉致简版，只需小改两个文本文件，不出十分钟就写出一个能用的R包。
准备跟前期准备和后期维护相比，写包本身其实是最简单的环节。假定你已经安装好了R和RStudio，那么，运行R，安装几个包：
install.packages(c(&amp;quot;devtools&amp;quot;, &amp;quot;roxygen2&amp;quot;, &amp;quot;testthat&amp;quot;, &amp;quot;knitr&amp;quot;))然后：
Windows用户，安装 rtools.Linux用户，安装对应的 R 开发包，sudo apt-get install r-base-dev.OS X 用户，安装command-line-tools，Terminal 运行 git 或者 xcode-select.致简四部曲参照益辉的rmini，我做了个更简单的模板（Update：根据Dong的建议，也可以RStudio - File - New project - New directory - R package），叫做rmickey。点击下载并解压缩，得到个名叫rmickey文件夹。这个文件夹名字可以随便改。
双击rmickey.Rproj（这个文件名也可以随便改），就会用RStudio打开这个项目。后续步骤全部在RStudio里操作。
点击打开RStudio右下窗口Files下的DESCRIPTION文件（这个文件名千万别改）和R/foo.R文件（这个文件名可以随便改）。DESCRIPTION里是你的包的描述信息。可以看到包名称，版本，日期，包标题，包作者，维护者，依赖性，描述等信息。把其中每一条冒号后面的信息改成你自己的信息，比如把第一行包的名称改成mymickey，保存。R/foo.R里是你的包里包含的自定义函数，模板里只列了一条做示例。函数的写法跟平时没区别。而函数前面的几行，就是所谓的说明文档，都以#&#39;开头，第一行是简要介绍，以@param开头的行逐个介绍函数的自变量（懒得介绍的话就像示例里的x2那一行一样空着，但x2后面必须有一个空格），@return开头的行介绍因变量（必填），@export @examples两行可以不修改。有更多函数的话，照葫芦画瓢在文件里往下继续写就是了。保存。
点击RStudio右上窗口的Build标签下的Build &amp;amp; Reload按钮，包就编译并自动安装好了！</description>
    </item>
    
    <item>
      <title>postr: 用R Markdown做海报</title>
      <link>http://www.pzhao.org/zh/post/postr/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/postr/</guid>
      <description>用R markdown写海报的扩展包postr安装使用方法（需要先安装好软件环境，详见postr项目主页）：
devtools::install_github(&amp;quot;pzhaonet/postr&amp;quot;)setwd()postr::postr()益辉的莽撞人项目，悬赏解决“用 R Markdown 做海报”这个技术难题。我私下说，Markdown走的是LaTeX路线，讲究篇章结构和逻辑，而海报追求更多随意性和艺术性，即使学术海报也不例外，所以费劲硬要用Markdown解决，可能吃力不讨好。倒不如Powerpoint来得方便，或者把整个海报在R里当成一个device，用layout画图来实现。话虽这么说，我仍然在留意这件事，因为我在新书学R里提出R语言科研方案的整体拼图，被我几乎全部拼完了，只缺海报这一块。这就好比在朋友圈发照片只发八张，看一眼就浑身不自在。
前几天，做bookdownplus时找模板，在比利时鲁汶大学的一大堆模板当中，我极其偶然地发现，里面暗暗潜伏着的，竟然有用R Markdown制作海报的秘密，淹没在一大堆文件里，搞不清楚各个文件之间的关系，而且说明文档过于简单，用起来不够方便。于是，我花了些工夫，把海报部分择了出来，稍加修改，增添了几个自己做的颜色主题，纳入了bookdownplus里。我的想法是，用户只需下载我这个文件夹，选择好模板，一运行，就出来个Rmd文件，打开一点knit按钮，Duang！海报就出来了。
于是去揭“莽撞人”榜。榜主说：很好。然后说：做成个包吧！名字都起好了，叫postr。为啥不直接叫poster？我猜大概是postr跟knitr的命名法类似，更容易搜到吧。
想来也是。我这种下载文件夹的方法毕竟路子太野，不符合R语言的习惯，大家更喜欢的是做包，上传，安装。但是我从来没做过包。而且，我认为做包是R语言里高大上的东西，我不认为自己能很快学会做。于是，我在朋友圈招贤，看有没有谁愿意把这活儿给接过去。消息放出去一天，无人理睬。
得，自己来吧。
这天大娃生病了，早上带他看医生。诊所人满为患。排队的时候，我把网上几篇关于R包开发入门的帖子扫了几遍，好像不太难哦。从诊所出来，十点多了，一到办公室，就干劲十足地折腾。事情出乎意料的顺利。我原以要到明年才能把这个包写出来，结果当天下午就写完了。这个过程里，多亏了几位前人的工作，几年前还很繁琐复杂的R包开发，现在分分钟就能写一个玩玩。
既然这么容易，我顺手把bookdownplus也写成了个包。然后把平时常用的方程写成了第三个包。我还准备写个R包开发菜鸟教程，于是又写了个示例包。
从对R包开发一无所知，到一口气干掉四个包，花了不到两天工夫。用力过猛，有点撑了，我隐隐觉得不妙：好像不该这么顺利吧。
果然，postr放到github当天晚上，就有人留言了。我很好奇这哥们儿是怎么在第一时间发现我这么个无名之辈发布了一个包。这哥们儿先说，postr这个名字起得好，很容易记住。这得感谢益辉，他给我的域名提的建议也让人说容易记。然后这哥们儿说：这个包他运行无法通过。
这时我陡然发现，这才是R包开发的关键。写个包发布到github并不难，难的是解决用户的问题。
前面等待的，将是一个又一个的坑。
</description>
    </item>
    
    <item>
      <title>R bookdown&#43;: 用 R bookdown 写期刊论文、日记、信件、日历、吉他书、化学方程式</title>
      <link>http://www.pzhao.org/zh/post/bookdown-plus/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-plus/</guid>
      <description>注意：本文所述的bookdown+这个项目已经停止开发，继承者是我新开的R包项目bookdownplus ，这是因为我学会了写R包。当然，说不定有些朋友不喜欢安装R包，喜欢下载个文件夹直接免安装用，那么本文所述的方法仍然可以继续使用，只是我不再更新了而已。
R bookdown 能做的事情很多，可是那些功能迟迟不来，我只好自己动手，写了个 bookdown+，目前大体实现了用 bookdown 写期刊论文、化学分子式、信件、日记、日历等功能。当然，有些还没完全实现，革命不够彻底，带着浓重的\(\LaTeX\)旧社会的气息。革命尚未成功，同志仍需努力。
下面是 bookdown+ 的简介和快速使用方法。
背景R bookdown+，听起来像是跟R[@R-base]的扩展包bookdown[@R-bookdown]有关吧?
一点没错！我们知道，bookdown天生是个用来写编程书籍的称手工具。只是，这仅仅是硬币的一面。bookdown的功能远远不止如此。它就像一个美味的蛋糕，我等啊等啊，等着谁把它切开，实在等不及了，就自己下手吧。所以，我弄了个bookdown+。
bookdown+是bookdown的扩展。我数年前收集了一些\(\LaTeX\)模板，现在我把他们整理到bookdown+里，这样就可以开开心心在bookdown的环境里做喜欢的事情。bookdown+ 展示了硬币的另一面：你可以用它来写写期刊论文、化学分子式、信件、日历、甚至日记。
另一方面，我从个人角度对bookdown的使用做了简化。官方提供的bookdown模板虽然很好用，但对新手来说略显繁琐，需要：
在index.Rmd和_output.yml两个文件里设置yaml，需要在_bookdown.yml里设置文件名；对中文用户来说，还得跟LaTeX打交道，需要考虑before_body.tex, after_body, preamble.tex里面的设置。这些操作可能让新手望而生畏。
R bookdown+用起来就容易多了，只需在一个叫做_runme.R的文件里设置好书名、作者，选好模板，binggo！就可以开始放心写自己的文字了。
功能扩展，操作简化，这就是R bookdown+。
在不久的未来，肯定会出现很多官方的bookdown模板，但是我不想等了。你要是也等不及，就跟我来一起使用或开发[bookdown+]吧！
快速入门预备在开始前，你需要安装 R, RStudio, bookdown，和其他依赖的软件和包(例如 Pandoc, \(\LaTeX\), rmarkdown, rticle, knitr等)。详见bookdown官方手册.
准备好后，从Github下载bookdown+压缩文件。解压缩到你的电脑里，在得到的文件夹里找到 _start.Rproj文件，双击就会在RStudio里打开一个项目。
文件夹里还有个_runme.R文件。你可以双击打开并运行。下面是对这个文件里代码的详细解释。
第1步：标题和作者改成你自己书的标题和作者名。
title &amp;lt;- &amp;#39;bookdown+: Authoring Articles, Mails, Guitar books, Chemical Molecular Formulae and Equations with R bookdown&amp;#39;author &amp;lt;- &amp;#39;Peng Zhao&amp;#39;第2步: 模板在给定的可用模板里选择你想要的。这里我们选第8个。</description>
    </item>
    
    <item>
      <title>初恋</title>
      <link>http://www.pzhao.org/zh/post/cawas/</link>
      <pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/cawas/</guid>
      <description>有一次回乡，见到我的中学老师范先生，谈起当年种种情形，范先生说，我们班是他作为班主任带过的第一个班。我们班之后的十几年来，他也带过很多个班，对他们不可谓不爱，但那份感情在微妙之处却总有不同。我们班让他刻骨铭心，他对我们班的感情，“宛若初恋”。
我不由得笑道：范先生把工作热情与爱情相比，其中的幽默感当真是可歌可泣。
转眼间，范先生关于初恋的比喻已是几年前的旧事。前两日，整理移动硬盘里的旧文件，在一个多年没碰过的文件夹里，我发现了一些跟以前的工作单位有关的旧物，已遗忘多年，打开一看——
旧物里有入职满一年时，我为单位设计的logo。
那年，我们要编写大量的技术手册和办公文档，我很单纯地想，为他们设计一个logo会显得好看一点。说是“设计”，我哪里懂呢，只是把学到的一点flash技术使劲往上靠。这个工作单位属于国家气象局，那就往里加气象元素呗；我所在的部门主要职责是安装、维修和标校仪器，那就画个扳手呗。我们还要对来自全国各地的同行进行培训，于是我配套设计了几个颜色渐变动画版，打算在培训幻灯片里用。
可惜做完之后并未派上用场。如今，我连源文件都打不开了。
旧物里有入职第二年，我制作的电子贺卡。
那年，春节和情人节接踵而至。刚刚学了一点编程的我，绞尽脑汁把用我学到的所有visual basic技术全都用上，制作了一张电子卡片(点击下载)，以部门的名义，发给同单位其他部门的同事联络感情。在这张卡片上，有“喜欢”和“不喜欢”两个按钮，但是有个小把戏：鼠标永远追不上“不喜欢”；鼠标一放上去，它就跳到别的地方去了。所以，你对我们部门只能喜欢，别无选择。
我就从没想过，贸然发给同事个exe文件，说不定讨人嫌吧？如今，我已经把visual basic忘得一干二净，代码读都读不懂了。
旧物里有入职第三年，我做的合唱伴奏音乐。
那时，我们单位举办春节联欢会，节目的演员是各所职工。我们中心表演的节目是大合唱。提前一个多月，我们就开始着手准备，指导老师请好了，演员也动员好了，排练时间也安排好了，曲目也选好了，是刘欢原唱的《在路上》。这时却发现，原唱音频文件的消声效果不够好，而专门的伴奏又找不到。我自告奋勇，连熬两个通宵，使出浑身解数，愣是用一个吉他谱制作软件把伴奏音乐(点击下载)硬生生做了出来。这里面，除了主旋律是在网上找到的简谱外，其他音轨都是我从原唱里一个音一个音听写下来，记在纸上，再输入电脑，反复调整才得来的。我记得，做完的时候已是凌晨5点，躺下眯了两小时，就跳起来挤公交上班，到单位继续亢奋地修仪器。
回望这段往事，我感到不可思议。logo并没有领导要求我做，电子贺卡的编程完全属于自愿，而合唱伴奏的制作弄得通宵不睡，更是自作自受——你不做又会怎么样呢？节目照演，春节照过。我问问自己：你为她投入的这份热忱，是她需要的吗？她要求你做到的事情，你做到了吗？你的所谓付出，哪些是出于爱她，哪些是出于爱自己，哪些是二者兼有？
此情可待成追忆，只是当时已惘然。入职第四年，我辞职出国深造，与旧单位分道扬镳。
如今翻起旧物，我清楚地知道，为工作单位设计logo、制作贺卡、制作伴奏这样的事情，今后恐怕再也不会自发自愿地发生在我身上；即使发生，也难以倾注当年那么大的热情。那份热情不计付出，熊熊燃烧，那是青春的见证。
宛若初恋。
正值鹅城话题博文活动举办第二期，本文恰巧契合主题，顺便报名参加。
感谢本次活动赞助者：小懿、醉卧烟雨、忘想、牧南子本次活动由个站商店提供冠名支持。参加本次话题博文活动的还有：大致：钗头凤·重逢醉卧烟雨：写给儿时的火烈鸟姜辰：雨中客，送伞人曲曲：老爸的柔情</description>
    </item>
    
    <item>
      <title>R vs Python: 2017年欧洲地学年会</title>
      <link>http://www.pzhao.org/zh/post/egu2017/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/egu2017/</guid>
      <description>欧洲地学学会EGU年会每年一次，都在维也纳国际会议中心举办，原因是别的地方很难找到这样一个会场，能容得下这么大的规模。为期一周的会议，参加人数上万，分会场有五百个以上。因为离得近，乘火车4小时，我们组年年都参加。去年我申请到一个口头报告，今年再次申请，会议协调人说：你们组申请了两个口头报告，但只能给你们组一个名额，你们内部定吧。我和同事商量了一下，决定他做口头报告，我做海报。
这两天，准备海报和年会日程时，我发现个有趣的新现象。一打开“短期课程”类日程表，就感到一股杀气扑面而来。年会擂台的两位选手即将上阵，一个叫R，一个叫Python。
首先亮相的是Python。第一天的第一批分会场，Python先发制人，发起个课程叫做“使用Python和Jupiter做数据分析”，一个半小时，要求携带笔记本电脑，手把手教你用Python语言读取不同格式数据、分析和作图，并使用 Jupyter Notebook 来记录和分享工作。Python语言就相当于R语言，Jupyter Notebook就相当于 R markdown。这是明摆着对R的挑衅啊！我决定放弃另外一个感兴趣的学术分会场，来参加这一个。
R当然不甘示弱，见招拆招。当天下午有个课程，叫做“水文学中使用R”，内容是学习用R语言进行水文学的时间序列分析和地理信息系统GIS数据处理、水文建模。水文学不是我的专业，但是有关联。好想参加，可惜跟我必须参加的另一个会场时间冲突了，只能忍痛割爱，暗暗希望R在这个回合打败Python。
问题是Python还有后招。星期四，Python有个课程叫做“Python处理多维度地理科学大数据：xarray扩展包入门教程”。课程将介绍Python处理数据的基本用法，包括下标系统、选择、分组、作图、计算、自定义函数，并演示如何用 Python+xarry+Jupyter来轻松教没有编程经验的硕士生处理气候模型数据。这课听起来好诱人。一看行程表，我到时候没安排，那必须去了。
R会如何应战？我发现还有个课程，叫做“出版流程里的可重复计算研究”——这是R markdown的强项啊。此课时长3小时，前1.5小时是手把手教你用R, Python和ReproZip对地理空间数据进行分析，并撰写可重复性报告：后1.5小时是讨论，参与者有出版方、审稿人、教育工作者等各个领域的专家学者。看这架势，不知R跟Python是要对决还是要合作呢？真想去目睹这一盛况，但是，又跟我专业的分会场冲突了。真难取舍。
除了明争，还有暗斗。星期四晚上有一门课程叫做“一图胜千言：利用数据可视化进行科学交流”，讲的是如何制作高效精辟的数据图表，没有明说，但暗藏玄机，不知主角是R，还是Python，还是Matlab，还是别的新秀？
除了R语言这种跟科研密切相关的技术活，居然还有一门课程叫做“WordPress写博客详解”，居然还有一门课程教你写诗，说什么博客和诗都能更好地传播科学……
回头一看我的私人日程表，乖乖，这哪像个学术会议呀……</description>
    </item>
    
    <item>
      <title>Hugo 网站的浏览器小图标</title>
      <link>http://www.pzhao.org/zh/post/hugo-icon/</link>
      <pubDate>Wed, 19 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-icon/</guid>
      <description>网站图标，就是上图的这些东东，用浏览器打开网站时显示在地址栏的顶端。R blogdown安装的hugo-academic主题，默认图标是个蓝色学位帽，挺好看的，不改也行，只是如果大家都用的话，泯然众人，识别度就低了。
改的方式很简单：将你自己的图标图片保存为.png格式，并命名为icon.png，替换\themes\hugo-academic\static\img\icon.png即可。
update: 更好的方案来自yang Cao的提议：把icon.png放在static/img/，避免在更新themes时将自定义图标覆盖。</description>
    </item>
    
    <item>
      <title>Hugo 网站的RSS</title>
      <link>http://www.pzhao.org/zh/post/hugo-rss/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-rss/</guid>
      <description>R blogdown 搭建的 Hugo 网站，小细节很多，可以一点一点完善，好在都不难搞定。今天添加了个RSS订阅按钮。
自从 Google Reader 死后，我就觉得 RSS 没有多大趣味，就好像子期死后伯牙摔琴一样。但是，没有 RSS 提醒的话，还真不知道谁的博客更新了，于是就勉强用 feedly 凑合。眼看我的新网站构架基本完成，就在 feedly 里订阅了一下自己的网站，输入 pzhao.org，发现没找到。嗯？研究一下才明白，我的主页完整地址是：
http://pzhao.org/zh/这个路径对应的本地文件夹下面，不仅有个index.html，还有个index.xml，后者就是 RSS 订阅的文件。所以，在feedly添加：
http://pzhao.org/zh/index.xml就把我的新网站添进去了。这是订阅全站。如果只想订阅其中的博客，或新发表的学术文章，或新做的报告，那么：
http://pzhao.org/zh/post/index.xmlhttp://pzhao.org/zh/publication/index.xmlhttp://pzhao.org/zh/talk/index.xml这个RSS链接，我该放到主页的什么位置，来方便网友订阅呢？我决定放到我的头像下面的社交按钮里。
头像下的社交按钮是在config.toml里设置的，只需添加个[[params.social]]就可以了，图标去fa或ai两个包的主页找便是。 实在缺乏社交，只好把自己卡拉OK的录音和腾讯视频加进去凑数，代码如下：
 [[params.social]]icon = &amp;quot;rss&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://www.pzhao.org/zh/index.xml&amp;quot;[[params.social]]icon = &amp;quot;music&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://kg.qq.com/node/personal?uid=649d9d85212c3489&amp;quot;[[params.social]]icon = &amp;quot;video-camera&amp;quot;icon_pack = &amp;quot;fa&amp;quot;link = &amp;quot;http://v.qq.com/vplus/0f8190586a3f2f22a25e9827b38c171e&amp;quot;</description>
    </item>
    
    <item>
      <title>斜杠</title>
      <link>http://www.pzhao.org/zh/post/slash/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/slash/</guid>
      <description>在我的新书在线试读章节，益辉同学提出了一个话题，那就是斜杠。这个小东西已经困扰我多年了，事儿不大，我憋着一直没敢说，这回有益辉这么一位神级人肉盾牌罩着，就趁机吐个槽。
斜杠就是/，在英文叫做slash，或者叫forward slash，就是向前倾斜，而\就是back slash，向后倾斜。只需想着|是个直立的小人顺着文字的方向走，那么前倾 后倾一目了然，名字跟形状是吻合的。或者用“吉他法”，吉他手 背 面对着我那就是back slash（当然前提是右撇子）。无论如何，英文名称是合乎我的逻辑和理解力的。
我不想提它的原因，是因为中文名字的翻译总让我糊涂。/叫做斜杠或斜线，\叫做反斜杠，我老是搞不清楚，写本帖的时候还要搜一下确认。凭什么呀？逻辑上这俩都是“斜”的啊？凭什么沿着从上往下从左往右的正常笔画顺序来写的\叫做反斜杠啊？人家反在哪里了？明明人家是顺的啊！我为\叫屈。要是我翻译，就叫/为“前俯”键，\叫“后仰”键，信达雅兼顾。或者叫“右倾”键和“左倾”键更直接。但是怕被误会成政治倾向，那就叫“东倒”键“西歪”键，左西右东嘛。你们非要叫斜杠和反斜杠，不符合我的逻辑框架，老是得犹豫一下，还不确定谁正谁反，那干脆还是别提他们了。
R 语言里，表示路径的时候，两级文件夹之间要用/或\\分隔，否则就报错。这个问题初学者常遇见，我特意写进了新书的“答疑”一章。以前我跑 windows 和 Ubuntu 双系统时还会考虑正反斜杠，现在只用 windows，如果在 R 代码里需要本地路径，我都是在totalcommander 里 ctrl + 3 来获取完整路径到剪切板，再粘贴到代码里。要改成\\，只需在原有的一个\后面再添一个就行了。而改成/，我得先删掉原有的\，再敲一个/，工作量加倍。我就是懒&amp;hellip;&amp;hellip;
我用\的另一个理由就比较小众了，一般人可能难以理解：我人在德语国家，用的是德语键盘。不是系统设置成德语键盘，而是实体德语键盘，见下图：
除了布局不同外，德语键盘比普通键盘多一个功能键叫 AltGr，在空格键右边，用来输入更多特殊字符。德语键盘输入/，需要双手互博，左手shift+右手7，或者找数字小键盘的除号，而输入\只需一只手，右手拇指AltGr+中指ß就行了。那我当然倾向于\。
这回亮出德语键盘，顺便解释一下为何我是R语言的箭头党。因为，德语键盘如果用等号=作为赋值号，那么得按shift+0。为了代码整洁，前后还得各敲个空格。而箭头呢，在RStudio里按Alt+_，就是箭头，同时自动附送两个空格。那我当然用箭头，更不用提箭头是雄性的标志了。
你瞧，一说起德语键盘，又有吐不完的槽，比如你会发现Z和Y两个键是跟英文键盘反着的。我对此不理解，就问德国人，德国人的回答是：你们英文键盘干嘛非要跟我们反着？你们英国人为啥非要靠左行驶？你们英国人为啥计量单位不用十进制？&amp;hellip;&amp;hellip;.
一扯就又扯到二战去了。本帖就此打住。</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题的多语言界面</title>
      <link>http://www.pzhao.org/zh/post/hugo-multilingual/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-multilingual/</guid>
      <description>几年前我弄过双语博客， 后来放弃了，因为 WordPress 的双语方案有些遗留问题让我不爽，另外我没有精力写英文博客。现在，新网站是个科研网站，博客可以只出现在中文版里，而英文版只放自己的学术情况就行了，不用像博客更新那么频繁。所以，双语界面几乎是排在第一梯队的需求。
我对Hugo的架构并不熟悉，原以为会很麻烦，结果弄一会儿就搞定了，原来这么简单。有些步骤在主题的说明文档里提到了，但不够全。完整的步骤是这样的(看起来长，是因为我啰嗦，其实很快就能设置完)：
1、开启双语。这需要在config.toml里末尾找到：
[languages.en] languageCode = &amp;quot;en-us&amp;quot;  这说明网站现在是英文的。在后面添加中文，也就是：
[languages.en] languageCode = &amp;quot;en-us&amp;quot; [languages.zh] languageCode = &amp;quot;zh-cn&amp;quot;  2、设置默认语言。这需要在config.toml里开头不远处找到：
# Default language to use (if you setup multilingual support) defaultContentLanguage = &amp;quot;zh&amp;quot; defaultContentLanguageInSubdir = true  原先是en，改成zh就可以让网站默认打开是中文。
3、菜单栏增加中文界面。菜单栏就是网页顶部那一排按钮。这需要在config.toml里找到菜单栏的设定：
[[menu.main]] name = &amp;quot;Home&amp;quot; url = &amp;quot;#about&amp;quot; weight = 1  上面是默认语言英语的设置。在下面添加中文设置，格式是
[[languages.zh.menu.main]] name = &amp;quot;主页&amp;quot; url = &amp;quot;#about&amp;quot; weight = 1  这样，就把Home按钮替换成了主页按钮。其他按钮类似。
4、其他地方的翻译。这需要把\themes\hugo-academic\i18n\ 文件夹拷贝到根目录，然后删掉里边不需要的语言文件。我们只保留en.yaml和zh.yaml。用文本编辑器打开zh.yaml，把里边翻译不当的地方修改一下，比如 interests 翻译成了“兴趣爱好”，我改成了“研究领域”。
5、新增帖子的双语。这个最好办，每次在content\文件夹里新增文件时，如果要增加英文，就在文件扩展名前面加个.en就行了。例如，我在content\talk\下面新建了个egu-2017.md，里面是中文，会出现在中文界面上。那么我想让这个项目也在英文版出现，只需把egu-2017.md复制一份，命名为egu-2017.en.md，那么这个项目就会在英文界面出现了。打开egu-2017.en.md把里面的中文改成英文即可。</description>
    </item>
    
    <item>
      <title>Word 永远转不成 Markdown</title>
      <link>http://www.pzhao.org/zh/post/word-never-markdown/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/word-never-markdown/</guid>
      <description>R bookdown 用扩展的 Markdown 语法来写书，可以很方便地导出 Word 格式，虽然不完美，但只需稍微调一下样式，就是一个漂漂亮亮的文档。但是，如果在 Word 里做了修改，想转回 Markdown 该怎么办？
多年来，我一直奢望能找到这样一款软件，哪怕是把 Word 转成 LaTeX 也行。随着时间的流逝，希望却是越来越渺茫; 我越来越深信，这样的软件过去不曾有，现在还没有，将来永远都不会有。因为，逻辑上是不可能实现的。
Markdown 和 LaTeX 能相互转换，是因为两者都是标记语言，是逻辑上有对应关系的。Markdown 里的标题标记#，翻译成 LaTeX 标记就是\section{}; Markdown里的粗体标记** **，翻译成 LaTeX 标记就是\textbf{}。这就是所想即所得，大家虽然你说英语我说德语，但想法是一样的，只要有本字典，以词为单位互换，那么大体意思就能通。想完美的话，根据各自的语法规则调整调整就行了。
但是 Word 不是这样的。你看见一个大字体加粗的词，看上去像是标题，乐观一点可能是用 Word 的标题样式设置的，一般情况下是用户把正文样式的文字直接点加粗换字号得到的，悲观一点说不定是插入的文本框或图片&amp;hellip;&amp;hellip;所见即所得，你永远猜不透一个大字体背后的逻辑是什么。这就好比你说英语而我画了一幅水墨山水画，你猜我是什么意思？你猜我大量的留白该翻译成那句英语？就像小说《三体》里说的：
 教授挂出了两幅大图片，一幅是画面庞杂精细的《清明上河图》，另一幅是一张空旷的天空照片，空荡荡的蓝天上只有一缕似有似无的白云。教授问这两幅画中哪一幅所包含的信息量更大，答案是后者要比前者大一至两个数量级!
 Word 的一个简单格式背后，藏着的信息量比 Markdown 大几个数量级，你怎么转换？
Markdown 跟 LaTeX 对话，就像男人跟男人对话，说什么就是什么; Markdown 跟 Word 对话，就像男人跟女人对话，男人永远猜不透女人到底是哪层意思。所以还是歇了吧。
那么，难道 Markdown 永远理解不了 Word 吗？
也不是。我觉得等人工智能成熟的时候就可以了。你只需吩咐一句“小A，把这篇Word 书稿转换成 Markdown，我要在 R bookdown 里修改”就行了。
但人工智能可能会回答你：“主人，我已经全部帮你把书改好并且已经出版了。”</description>
    </item>
    
    <item>
      <title>Hugo 网站 academic 主题首页的文摘显示问题</title>
      <link>http://www.pzhao.org/zh/post/hugo-academic-summary/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hugo-academic-summary/</guid>
      <description>在 RStudio 里用 R blogdown 来维护网站时，可以通过点击工具栏的 Addins - New Post 来创建新帖子，很方便。但是，如果用的是 Hugo 的 academic 主题，那么创建的新帖子在网站首页会显示全文，不大好看，尤其是全文很长的时候，根本就不像个首页了。这是因为，academic 首页的 posts 模块默认显示文摘。如果没有为每篇帖子设置文摘，就会显示全文。而上面说的创建新帖的方法里，并没有设置文摘的选项。那么，文摘在哪里设置呢？
直接说答案：手动在新帖的YAML文件头添加一行：
summary: &amp;quot;我的文摘别太长。&amp;quot;答案来自blogdown 项目主页。
就这么个小问题，让我走了点弯路。我发现问题后，首先观察了一下主题自带的示例文档，文件头是这样的：
+++date = &amp;quot;2016-04-20T11:00:00&amp;quot;draft = falsetags = [&amp;quot;academic&amp;quot;, &amp;quot;hugo&amp;quot;]title = &amp;quot;Customizing the homepage with widgets&amp;quot;math = falsesummary = &amp;quot;&amp;quot;&amp;quot;Enable/disable and configure widgets to customize your homepage.&amp;quot;&amp;quot;&amp;quot;+++跟 R blogdown 生成的 .md 和 .Rmd 文件的文件头不同，这个文件头居然是用前后各三个加号表示的。里面的summary开始数三行，就是用来设置文摘的。
于是我就把这三行拷贝粘贴到 .Rmd 文件里，当然是编译出错了。接着我想当然地把上面这段前后共六个加号的文件头拷贝粘贴到 .Rmd 里，仍然报错。问题搁置了几天，才想起去 blogdown 项目主页搜搜看，就找到了答案。</description>
    </item>
    
    <item>
      <title>Hugo 网站的 Disqus 加载问题</title>
      <link>http://www.pzhao.org/zh/post/hogo-disques-problem/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/hogo-disques-problem/</guid>
      <description>今天，复活节假期前夕，同事们都休假了。我虽然在办公室，却无心上班，发了一会儿呆，想想与其痛苦地工作，不如快乐地解决一下新网站的一个小问题：disqus 评论框的加载。
用 R blogdown 打建好站，disqus评论框就一直没成功加载过。后来听说是config.toml里 disqus shortname指的不是我的disqus ID，而是要专门设置一下， 我说“啊,还有这事儿？”于是就设置了一下，但是仍然不能成功加载。这个问题放了几天，今天心血来潮一搜，嗯，兴许是路径的问题，于是就把config.toml开头的路径改为
baseurl = &amp;quot;http://www.pzhao.org&amp;quot;# relativeurls = true然后运行R语言的建站函数：
blogdown::build_site(local=FALSE)注意！此处千万不要运行blogdown::serve_site()，不然新生成的文件就又没法加载 Disqus 了。网上说是serve_site()忽略了config.toml里的某些设置而造成的。我不懂，总之就是建站函数运行完就直接上传。
然后GitHub同步，几秒钟后，Netlify上完成了更新，Disqus评论框就乖乖出现了。
欢迎来留言测试。
啥，你看不见？嗯，听说好像是被墙了。</description>
    </item>
    
    <item>
      <title>R blogdown 搭建个人博客或科研网站</title>
      <link>http://www.pzhao.org/zh/post/r-blogdown/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/r-blogdown/</guid>
      <description>本文收录在《学 R 》一书的附录中。
互联网时代有个自己的网站，就好像真实世界里有了自己的房子（服务器）和固定地址（域名）；自我介绍时附上自己的网站，就像生活里邀请朋友来访或者职场上递上名片，都甚为方便。然而，建立一个网站并不容易，涉及诸多领域的知识和技能，门槛比较高。好在，我们有万能的R语言，搭建网站只需几分钟，而并不需要多少网络知识。你甚至不用懂 R 语言是什么，照我下面说的做就行，包教包会，学不会免费再教。
这里，我提供两个示范，演示如何使用 R 语言的 blogdown 扩展包1，用来搭建一个个人博客和一个科研小组网站。截至本文成稿之日，blogdown 含苞待放，尚未正式发布，但是已经能够正常安装使用了。我们来尝尝鲜，提前一睹她的芳容。
R blogdown 简介和安装R blogdown 是什么
R语言的一个扩展包，用来制作网站的工具。可以用非常简洁的方式快速搭建静态网页构成的网站。虽然名字里有“博客”（blog）字样，但并不仅限于博客。非常适合搭建一个科研小组的展示窗口。基于 markdown 扩展语法，可以在网页中方便地插入图表、脚注、数学公式、R 代码等元素。非常容易将 bookdown 生成的论文转化成网页展示。非常易于维护，迁移，备份。本书的官方网站就是用 R blogdown 搭建的。网站里给大家提供的 R 示例代码、试读章节、勘误表等，都是直接从书稿中拷贝粘贴到文本文件里，然后运行一下 blogdown 的指令，网站就自动更新了。
安装
blogdown 的背景平台是 R 语言，用户界面首选 RStudio ，产生的网站框架是 Hugo ，掰手指头数一数，要安装4样东西，略显繁琐，但并不难，一劳永逸。安装方式如下：
R。去R的服务器CRAN，点击Download R for Windows（其他操作系统的用户请自便），在打开的新网页最上方点击base，就找到下载链接了。下载完毕后安装，一路“下一步”的傻瓜式安装即可。RStudio。去官网下载安装文件运行即可。blogdown。运行RStudio，在左上面板的代码窗口输入并运行以下代码：if(!require(devtools)) install.packages(&amp;#39;devtools&amp;#39;)devtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)解释一下：由于 blogdown 目前只发布到了 GitHub 服务器上，尚未发布到CRAN，所以上面第一条代码先安装开发工具 devtools 包，第二行用这个包的install_github() 函数从 GitHub 安装。
Hugo 框架。在 RStudio 左上面板的代码窗口输入并运行以下代码：blogdown::install_hugo()安装完毕。</description>
    </item>
    
    <item>
      <title>R bookdown 写学术论文</title>
      <link>http://www.pzhao.org/zh/post/r-bookdown/</link>
      <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/r-bookdown/</guid>
      <description>1
最近，我使用 R 语言的 bookdown 扩展包接连做了三件事：先是整理出一本跟R 语言有关的书，然后把博客的帖子整理出一本纯文本的中文书，这两天我又在用它来写一篇打算投稿的学术期刊论文。
用 bookdown 写英文的科研期刊论文，配置起来是很简单的，只需在bookdown提供的官方演示文档里做简单修改如下：
首先，index.Rmd 的文件头 yaml 部分，将 documentclass 设为 article，并关闭图表目录和文章目录即可：
documentclass: article lof: no lot: no toc: no  然后，_output.yml 文件内容全部清空，然后添加指令生成 word_document2 文档、 pdf_document2 文档和 html_document2 文档，参数为default即可。也就是说，_output.yml 文件内容只需3行：
bookdown::word_document2: default bookdown::pdf_document2: default bookdown::html_document2: default  就能生成足够美观的三种格式的文档了。
2
写论文期间发生了一件事，让我饱受刺激。
我的科研论文有个计算公式，昨天发现其中一个数值不小心敲错了。后续计算都是建立在这个计算的基础上，所以后续计算全错。虽然不影响结论，但严格来讲，论文里所有的数据都得改。
放在以前，这是让人崩溃的灾难。幸亏，这次我写论文用了 bookdown。
这篇研究论文是用 Rmd 格式写的，里面绝大部分数据不是手动敲进去的，而是调用了 R 代码，图表也是用 R 代码插入的，走的是“可重复性研究”的思路。现在，我只要把 R 代码里那个敲错的数据改过来，运行代码，后续计算就全部自动更新，而论文 Rmd 文件里调用代码的输出结果，会在导出的 pdf 或 word 文档也相应自动更新，节省了大量时间，还减少了敲数字或拷贝粘贴出错的可能，怎一个爽字了得！
在 bookdown 发布之前，其实 rmarkdown 也有这个功能，但因为公式、交叉引用、参考文献方面的欠缺， rmarkdown 对我来讲比较鸡肋，一直未能用在论文写作上。现在有了 bookdown ，可以甩开膀子使劲儿用。可以说， bookdown 把 rmarkdown 原有的价值做了更充分的挖掘。</description>
    </item>
    
    <item>
      <title>R bookdown 语法标记速查</title>
      <link>http://www.pzhao.org/zh/post/bookdown-cheatsheet/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/bookdown-cheatsheet/</guid>
      <description>快速开始R bookdown 是什么一个用来写书写文章的软件。比Word更美观，比LaTeX更易用，比Markdown格式更丰富。可以方便地插入目录、图表、交叉引用、脚注、索引。可以方便地插入公式、参考文献、R代码。可以生成漂亮的pdf、word和网页文件。撰写可重复性报告的不二之选。安装下载R并安装。下载RStudio并安装。下载CTEX并安装。建议安装完整版。下载Pandoc并安装。运行RStudio。在左上面板的代码窗口输入并运行以下代码（安装bookdown扩展包）：install.packages(&amp;quot;bookdown&amp;quot;)install.packages(&amp;#39;servr&amp;#39;)好了，安装完毕。
从模板开始下载模板文档（到下载页面点击Clone or download - Download ZIP）：如果你要写英文文档，那么下载通用模板;如果你要写中文文档，那么下载中文模板。将模板文档解压缩到任意文件夹。
在解压缩后得到的文件里找到扩展名为.Rproj的文件。双击，默认会用RSudio打开。
在RStudio右上面板点击Build标签，再点击build book。好了，模板书出现在名为_book的子文件夹里。
在RStudio右下面板里会看到该文件夹里的文件，其中有一些扩展名为.Rmd的文件。逐个点击打开，把其中的内容修改成你自己的内容。除了index.Rm外，不需要的.Rmd文件可以删掉。
重复第4步，就得到了你自己的书。
对照一下.Rmd的文件内容和生成的文档，体会两者之间是如何对应的。
基本标记标记输出*斜体*斜体**粗体**粗体CO~2~CO2下标R^2^R2上标$E = mc^2$\(E = mc^2\) 行内公式（双美元符号为行间公式）[大鹏志](http://dapengde.</description>
    </item>
    
    <item>
      <title>不可挡的bookdown</title>
      <link>http://www.pzhao.org/zh/post/inresistible-bookdown/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/inresistible-bookdown/</guid>
      <description>最近，我打算把博客上关于R语言的帖子整理成一本书，希望弄得帅气一点，整齐一点，将来容易维护一点。涌进脑子的第一个念头是 \(\LaTeX\) ，第二个念头是想吐。
是的，虽然我推崇 \(\LaTeX\) ，觉得这个工具排出来的文档很漂亮，但自从弄完博士论文1 之后，除了帮别人备份一下博客2 、往论文里插几个公式和玩玩吉他谱3，我再也没碰过她。惰性开始代替折腾，我宁可点点鼠标写出一份不太美观的Word文档，也不想面对 \(\LaTeX\) 那让人头疼的代码。大概我是真上了岁数罢。
对于 \(\LaTeX\)，我想自己的内心深处是怀有恐惧的。她的美丽让我着迷，她的复杂令人生畏。
所以，这次整理博客，我决定在Word里做。用了这么多年，对Word的秉性我算是略知一二，从一开始就用主控文档和子文档的方式管理，以防单个文档太大而死机；从标题到R代码，我预先都设置好了样式以及样式的快捷键，方便调整格式；每写几句话，就左手抽筋一样ctrl+s一下，以防万一。其间，发现帖子里有些R代码要修改调试，我就咬牙忍着在RStudio和Word之间频繁拷贝粘贴的煎熬。反正换回 \(\LaTeX\) 也是一样想吐，既来之则安之，嫁鸡随鸡嫁狗随狗吧。
我天真地以为，这样就万无一失了。
有一天，我正在Word里改某篇帖子，改之前我留意了一下总页数是160多页。改了几个段落之后，我惊奇地发现，总页数成了220多页。再仔细找，发现有些代码区的文字无缘无故变成了乱码，一乱就新增几十页。进而测试发现，我正在好端端敲字，Word左下角的页数突然就刷刷地增加了，翻回去看，乱码已经被填进去了。试了好几次，都是这样。我甚至给文档权限设置为凭密码修订，仍然挡不住Word疯狂的脚步。
对着那自动呼呼上涨的页码，我想：认识十来年，想不到对你依然不了解。
\(\LaTeX\) 的倩影再度闪现在我脑海。她虽然复杂，但至少源文件是纯文本，不会胡来，不像Word这么没有底线。
为什么就没有个像Word那么界面简单，像 \(\LaTeX\) 那么源码单纯的两全其美方案呢？
“叮”的一声，脑子里冒出刚刚发布不久的bookdown(Xie 2016b)(Xie 2016a)。这是R语言的一个扩展包，专门用来写书，可以看作是R markdown的升级版。我的博客原文都是以markdown写成的，弄到bookdown里应当是顺理成章的事。只是大约因为上了岁数，我近几年对新工具越来越排斥，所以一直懒得尝试。这次被逼无奈，要不就试试吧。反正都是折腾，与其把精力花在让人心碎的Word里或让人心焦的 \(\LaTeX\) 里，还不如花在崭新的bookdown里。就算是有缺点，还能比Word和 \(\LaTeX\) 更不能忍么？
然后，刷！一晃十来天。春宵苦短日高起，从此君王不早朝。
这大半个月，我陶醉在bookdown的魅力里不可自拔。bookdown秉承拿来主义，把一大串工具链里的精华整合起来，让以前繁琐的步骤无比简化，怎一个爽快了得！她近乎完美地解决了我遇到的所有问题：纯文本操作，满足了我的控制欲；在导出完美的网页格式同时，还能导出为pdf和word文档，足够拿出来跟依赖Word的人交流；公式、脚注、交叉引用、目录、参考文献，功能齐全而不臃肿，格式标记简洁而优雅。我不再需要为Word的自以为是而抑郁，也不再需要为 \(\LaTeX\) 的纷繁复杂而烦恼了。
我用bookdown生成的书稿
一种亲切之美扑面而来，我感到无法抗拒无法阻挡。有了bookdown在手，写东西我还需要别的什么呢？想来想去，我不需要别的了。在Word和\(\LaTeX\) 之间摇摆了十来年，到头来才发现bookdown才是真爱。
不过，bookdown绝非完美。如果不了解rmarkdown(Allaire et al. 2017)，没见过 \(\LaTeX\) ，没听过pandoc，没用过knitr (Xie 2016c)(Xie 2015)(Xie 2014)，那么bookdown对新手来说，门槛仍然有点高。幸运的是，这几样工具我都用过，那么投入bookdown的怀抱就属于水到渠成了。即便如此，在使用初期仍然遇到了一些难以解决的问题，好在有bookdown的开发者益辉同学4 和其他同道中人热心地提供帮助，才能一路披荆斩棘，最后走上了幸福的康庄大道。
下面，我把我那些散落在各处的提问和解决方法汇总在这里。
编译起初我连bookdown的界面都没搞清楚，想编译却不知该点哪儿。益辉一直说build，build，我一直以为是菜单栏的build，后来才看到是在RStudio右上面板的build按钮。
bookdown是可以直接导出为word文档的。这么重要的功能，却隐藏得很深，在官方文档里都没有强调。导出方法是，在_output.yml里添加一行：
bookdown::word_document2: default 注意，default这个词是不能少的，不管它是不是默认。我也不知道为什么。
导出的word文档相当令人满意，参考文献的版式、图表的交叉引用都堪称完美。唯一不足之处，是公式的编号和交叉引用。bookdown的官方文档5给出的公式书写方案是，利用 \(\LaTeX\) 的公式环境来编号和引用，这一点在生成pdf时没问题，但生成word时，会发现别说编号，连公式本身都消失了。这大概是因为pandoc未能将公式环境正确转换的缘故。解决办法是，不使用公式环境，而使用行内公式（即公式前后有一个美元符号），公式前面用圆括号里加公式标签就可以了。例如，输入：
(@eq-mc) $E = mc^2$I like Eq. (@eq-mc) so much that I am falling love with her.</description>
    </item>
    
    <item>
      <title>English Grammar in Use</title>
      <link>http://www.pzhao.org/zh/post/english-grammar-in-use/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.pzhao.org/zh/post/english-grammar-in-use/</guid>
      <description>2009年夏，我刚刚出国读书，被系里临时安排在交流学者的办公室。办公室书架上，竖着几本书无人认领，我就顺手牵羊拿走了唯一的一本英文书。此书叫做《English Grammar in Use》，作者是Raymond Murphy，剑桥大学出版社1985年第一版，1988年第八次印刷。扉页上还印着“仅在俄罗斯和乌克兰出售”。20年前的书，难怪闻起来一股古董味。
随手翻了一下，我立刻被吸引住了。这本全部用英文写的语法书，我竟能轻松读懂，顿时很有成就感。书的副标题是“给中级学生的自学参考和练习书”，我不知道自己的水平算不算得上中级，但里面很多小语法点是我的弱项，值得好好学习。此书对语法点没有过多解释，主要是举例子，点到为止，甚合我意。随便摊开，左面一页是语法点和示例，右面一页是习题，两页就是一个单元。每个单元独立成篇，全书共130个单元。前15个单元的习题已经被人用笔写满了，从第16单元，字迹戛然而止。
“虎头蛇尾的家伙。”我暗笑。当时我想，每天做一个单元，5分钟都用不了，那么四个月之后就全部搞定。书从印刷到现在都20年了，书的主人竟然没做完？真瞧不起这种没有自制力的人。
2016年冬，7年多过去了，我……我总算把这本外语书吭哧吭哧读完了。比较一下，大娃京生，7年前只会中文叫“爸爸”，现在能流利地用中文和德语进行日常交流；二娃德生，7年前还在这世上不存在，现在能用中文说“爸爸，你走开，我喜欢妈妈”。而我读一本外语书花了7年多。好吧，自己正是自己瞧不起的那种缺乏自制力的人。
据说，这本书是世界上最受欢迎的中级英语自学语法书。多年来一版再版，甚至还出了配套光盘以及手机上的app。最新版是第四版，共145个单元，彩色，比我手头这本上世纪80年代黑白印刷的、印刷错误比比皆是的旧书帅多了。我们来感受一下21世纪的时代气息：
而且，网上竟然可以下载得到（点击下载pdf版、含光盘版）。此外，该书作者为这本中级语法书写了个姊妹篇给初级用户，叫Essential Grammar in Use（点击下载）。
这么好的英语书，为什么我年轻时没有接触到？
下面，是我摘录的难点笔记，加上了我的简单注解。一边做笔记一边想，什么中级英语，难度不及我国高考，跟入门级德语的难度相比，更是被完爆……
#English Grammar in Use by Raymond Murphy
Present tense with a future meaning 现在时表将来 When you are talking about what you have already arranged to do, use the present continuous (I am doing) or going to do. Do not use will.
 What are you doing tomorrow? (not &amp;lsquo;what will you do&amp;rsquo;) What are you going to do tomorrow?</description>
    </item>
    
  </channel>
</rss>